// prisma/schema.prisma
// Updated schema to support only Excel imports with reduced field set

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name])
}

model Country {
  id   String @id @default(cuid())
  name String @unique

  // Geographic and Political Information
  continent      String?
  region         String?
  governmentType String?
  religion       String?
  leader         String?

  // Area Information
  landArea  Float? // Area in kmÂ²
  areaSqMi  Float? // Area in square miles

  // Baseline Economic Data (from roster - 2028 baseline)
  baselinePopulation     Float
  baselineGdpPerCapita   Float
  maxGdpGrowthRate       Float
  adjustedGdpGrowth      Float
  populationGrowthRate   Float

  // Current Calculated Values (updated by system)
  currentPopulation    Float
  currentGdpPerCapita  Float
  currentTotalGdp      Float
  populationDensity    Float?
  gdpDensity           Float?

  // Classification
  economicTier     String
  populationTier   String

  // System Fields
  localGrowthFactor Float   @default(1.0)
  lastCalculated    DateTime @default(now())
  baselineDate      DateTime @default(now())
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // Relationships
  historicalData HistoricalDataPoint[]
  dmInputs       DmInputs[]

  @@index([name])
  @@index([economicTier])
  @@index([populationTier])
  @@index([continent])
  @@index([region])
}

model HistoricalDataPoint {
  id              String   @id @default(cuid())
  countryId       String
  ixTimeTimestamp DateTime
  population      Float
  gdpPerCapita    Float
  totalGdp        Float
  populationGrowthRate Float
  gdpGrowthRate   Float
  landArea        Float?
  populationDensity Float?
  gdpDensity      Float?
  createdAt       DateTime @default(now())

  country Country @relation(fields: [countryId], references: [id], onDelete: Cascade)

  @@index([countryId])
  @@index([ixTimeTimestamp])
}

model DmInputs {
  id              String   @id @default(cuid())
  countryId       String?
  ixTimeTimestamp DateTime
  inputType       String
  value           Float
  description     String?
  duration        Int?     // Duration in days
  isActive        Boolean  @default(true)
  createdBy       String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  country Country? @relation(fields: [countryId], references: [id], onDelete: Cascade)

  @@index([countryId])
  @@index([ixTimeTimestamp])
  @@index([isActive])
  @@index([inputType])
}

model SystemConfig {
  id          String   @id @default(cuid())
  key         String   @unique
  value       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([key])
}

model CalculationLog {
  id                String   @id @default(cuid())
  timestamp         DateTime @default(now())
  ixTimeTimestamp   DateTime
  countriesUpdated  Int
  executionTimeMs   Int
  globalGrowthFactor Float
  notes             String?
  createdAt         DateTime @default(now())

  @@index([timestamp])
  @@index([ixTimeTimestamp])
}