{
  "prismaModels": [
    {
      "name": "Post",
      "fields": [
        "id",
        "name",
        "createdAt",
        "updatedAt"
      ],
      "relations": [],
      "lineNumber": 33
    },
    {
      "name": "Country",
      "fields": [
        "id",
        "name",
        "slug",
        "continent",
        "region",
        "governmentType",
        "religion",
        "leader",
        "flag",
        "coatOfArms",
        "landArea",
        "areaSqMi",
        "baselinePopulation",
        "baselineGdpPerCapita",
        "maxGdpGrowthRate",
        "adjustedGdpGrowth",
        "populationGrowthRate",
        "currentPopulation",
        "currentGdpPerCapita",
        "currentTotalGdp",
        "populationDensity",
        "gdpDensity",
        "economicTier",
        "populationTier",
        "projected2040Population",
        "projected2040Gdp",
        "projected2040GdpPerCapita",
        "actualGdpGrowth",
        "nominalGDP",
        "realGDPGrowthRate",
        "inflationRate",
        "currencyExchangeRate",
        "laborForceParticipationRate",
        "employmentRate",
        "unemploymentRate",
        "totalWorkforce",
        "averageWorkweekHours",
        "minimumWage",
        "averageAnnualIncome",
        "taxRevenueGDPPercent",
        "governmentRevenueTotal",
        "taxRevenuePerCapita",
        "governmentBudgetGDPPercent",
        "budgetDeficitSurplus",
        "internalDebtGDPPercent",
        "externalDebtGDPPercent",
        "totalDebtGDPRatio",
        "debtPerCapita",
        "interestRates",
        "debtServiceCosts",
        "povertyRate",
        "incomeInequalityGini",
        "socialMobilityIndex",
        "totalGovernmentSpending",
        "spendingGDPPercent",
        "spendingPerCapita",
        "lifeExpectancy",
        "urbanPopulationPercent",
        "ruralPopulationPercent",
        "literacyRate",
        "localGrowthFactor",
        "economicVitality",
        "populationWellbeing",
        "diplomaticStanding",
        "governmentalEfficiency",
        "overallNationalHealth",
        "activeAlliances",
        "activeTreaties",
        "diplomaticReputation",
        "publicApproval",
        "governmentEfficiency",
        "politicalStability",
        "tradeBalance",
        "infrastructureRating",
        "usesAtomicGovernment",
        "hideDiplomaticOps",
        "hideStratcommIntel",
        "lastCalculated",
        "baselineDate",
        "createdAt",
        "updatedAt",
        "demographics",
        "dmInputs",
        "economicModel",
        "economicProfile",
        "fiscalSystem",
        "governmentBudget",
        "historicalData",
        "incomeDistribution",
        "laborMarket",
        "nationalIdentity",
        "user",
        "moodMetrics",
        "archetypeMatches",
        "governmentStructure",
        "taxSystem",
        "atomicEffectiveness",
        "governmentComponents",
        "componentSynergies",
        "budgetScenarios",
        "fiscalPolicies",
        "atomicEconomicImpacts",
        "militaryBranches",
        "securityThreats",
        "following",
        "followers",
        "embassiesHosting",
        "embassiesGuest"
      ],
      "relations": [
        "archetypeMatches",
        "governmentComponents",
        "componentSynergies",
        "budgetScenarios",
        "fiscalPolicies",
        "atomicEconomicImpacts",
        "militaryBranches",
        "securityThreats",
        "following",
        "followers",
        "embassiesHosting",
        "embassiesGuest"
      ],
      "lineNumber": 42
    },
    {
      "name": "EconomicProfile",
      "fields": [
        "id",
        "countryId",
        "gdpGrowthVolatility",
        "economicComplexity",
        "innovationIndex",
        "competitivenessRank",
        "easeOfDoingBusiness",
        "corruptionIndex",
        "sectorBreakdown",
        "exportsGDPPercent",
        "importsGDPPercent",
        "tradeBalance",
        "createdAt",
        "updatedAt",
        "country"
      ],
      "relations": [
        "country"
      ],
      "lineNumber": 176
    },
    {
      "name": "LaborMarket",
      "fields": [
        "id",
        "countryId",
        "employmentBySector",
        "youthUnemploymentRate",
        "femaleParticipationRate",
        "informalEmploymentRate",
        "medianWage",
        "wageGrowthRate",
        "wageBySector",
        "createdAt",
        "updatedAt",
        "country"
      ],
      "relations": [
        "country"
      ],
      "lineNumber": 194
    },
    {
      "name": "FiscalSystem",
      "fields": [
        "id",
        "countryId",
        "personalIncomeTaxRates",
        "corporateTaxRates",
        "salesTaxRate",
        "propertyTaxRate",
        "payrollTaxRate",
        "exciseTaxRates",
        "wealthTaxRate",
        "spendingByCategory",
        "fiscalBalanceGDPPercent",
        "primaryBalanceGDPPercent",
        "taxEfficiency",
        "createdAt",
        "updatedAt",
        "country"
      ],
      "relations": [
        "country"
      ],
      "lineNumber": 209
    },
    {
      "name": "IncomeDistribution",
      "fields": [
        "id",
        "countryId",
        "economicClasses",
        "top10PercentWealth",
        "bottom50PercentWealth",
        "middleClassPercent",
        "intergenerationalMobility",
        "educationMobility",
        "createdAt",
        "updatedAt",
        "country"
      ],
      "relations": [
        "country"
      ],
      "lineNumber": 228
    },
    {
      "name": "GovernmentBudget",
      "fields": [
        "id",
        "countryId",
        "spendingCategories",
        "spendingEfficiency",
        "publicInvestmentRate",
        "socialSpendingPercent",
        "createdAt",
        "updatedAt",
        "country"
      ],
      "relations": [
        "country"
      ],
      "lineNumber": 242
    },
    {
      "name": "Demographics",
      "fields": [
        "id",
        "countryId",
        "ageDistribution",
        "regions",
        "educationLevels",
        "citizenshipStatuses",
        "birthRate",
        "deathRate",
        "migrationRate",
        "dependencyRatio",
        "medianAge",
        "populationGrowthProjection",
        "createdAt",
        "updatedAt",
        "country"
      ],
      "relations": [
        "country"
      ],
      "lineNumber": 254
    },
    {
      "name": "HistoricalDataPoint",
      "fields": [
        "id",
        "countryId",
        "ixTimeTimestamp",
        "population",
        "gdpPerCapita",
        "totalGdp",
        "populationGrowthRate",
        "gdpGrowthRate",
        "landArea",
        "populationDensity",
        "gdpDensity",
        "createdAt",
        "country"
      ],
      "relations": [
        "country"
      ],
      "lineNumber": 272
    },
    {
      "name": "DmInputs",
      "fields": [
        "id",
        "countryId",
        "ixTimeTimestamp",
        "inputType",
        "value",
        "description",
        "duration",
        "isActive",
        "createdBy",
        "createdAt",
        "updatedAt",
        "country"
      ],
      "relations": [
        "country"
      ],
      "lineNumber": 291
    },
    {
      "name": "SystemConfig",
      "fields": [
        "id",
        "key",
        "value",
        "description",
        "createdAt",
        "updatedAt"
      ],
      "relations": [],
      "lineNumber": 311
    },
    {
      "name": "CalculationLog",
      "fields": [
        "id",
        "timestamp",
        "ixTimeTimestamp",
        "countriesUpdated",
        "executionTimeMs",
        "globalGrowthFactor",
        "notes",
        "createdAt"
      ],
      "relations": [],
      "lineNumber": 322
    },
    {
      "name": "User",
      "fields": [
        "id",
        "clerkUserId",
        "countryId",
        "roleId",
        "membershipTier",
        "isActive",
        "createdAt",
        "updatedAt",
        "country",
        "role",
        "archetypeSelections",
        "scheduledChanges"
      ],
      "relations": [
        "country",
        "role",
        "archetypeSelections",
        "scheduledChanges"
      ],
      "lineNumber": 336
    },
    {
      "name": "ScheduledChange",
      "fields": [
        "id",
        "userId",
        "countryId",
        "changeType",
        "impactLevel",
        "fieldPath",
        "oldValue",
        "newValue",
        "scheduledFor",
        "appliedAt",
        "status",
        "warnings",
        "metadata",
        "createdAt",
        "updatedAt",
        "user"
      ],
      "relations": [
        "user"
      ],
      "lineNumber": 358
    },
    {
      "name": "EconomicModel",
      "fields": [
        "id",
        "countryId",
        "baseYear",
        "projectionYears",
        "gdpGrowthRate",
        "inflationRate",
        "unemploymentRate",
        "interestRate",
        "exchangeRate",
        "populationGrowthRate",
        "investmentRate",
        "fiscalBalance",
        "tradeBalance",
        "createdAt",
        "updatedAt",
        "country",
        "policyEffects",
        "sectoralOutputs"
      ],
      "relations": [
        "country"
      ],
      "lineNumber": 382
    },
    {
      "name": "SectoralOutput",
      "fields": [
        "id",
        "economicModelId",
        "year",
        "agriculture",
        "industry",
        "services",
        "government",
        "totalGDP",
        "createdAt",
        "updatedAt",
        "economicModel"
      ],
      "relations": [
        "economicModel"
      ],
      "lineNumber": 403
    },
    {
      "name": "PolicyEffect",
      "fields": [
        "id",
        "economicModelId",
        "name",
        "description",
        "gdpEffectPercentage",
        "inflationEffectPercentage",
        "employmentEffectPercentage",
        "yearImplemented",
        "durationYears",
        "createdAt",
        "updatedAt",
        "economicModel"
      ],
      "relations": [
        "economicModel"
      ],
      "lineNumber": 417
    },
    {
      "name": "IntelligenceItem",
      "fields": [
        "id",
        "title",
        "content",
        "category",
        "priority",
        "source",
        "timestamp",
        "region",
        "affectedCountries",
        "isActive",
        "actionable",
        "confidence",
        "itemType",
        "severity",
        "createdAt",
        "updatedAt"
      ],
      "relations": [],
      "lineNumber": 432
    },
    {
      "name": "CrisisEvent",
      "fields": [
        "id",
        "type",
        "title",
        "severity",
        "affectedCountries",
        "casualties",
        "economicImpact",
        "responseStatus",
        "timestamp",
        "description",
        "location",
        "category",
        "createdAt",
        "updatedAt"
      ],
      "relations": [],
      "lineNumber": 451
    },
    {
      "name": "DiplomaticRelation",
      "fields": [
        "id",
        "country1",
        "country2",
        "relationship",
        "strength",
        "treaties",
        "lastContact",
        "status",
        "diplomaticChannels",
        "recentActivity",
        "tradeVolume",
        "culturalExchange",
        "economicTier",
        "flagUrl",
        "establishedAt",
        "createdAt",
        "updatedAt"
      ],
      "relations": [],
      "lineNumber": 468
    },
    {
      "name": "Treaty",
      "fields": [
        "id",
        "name",
        "parties",
        "type",
        "status",
        "signedDate",
        "expiryDate",
        "description",
        "complianceRate",
        "createdAt",
        "updatedAt"
      ],
      "relations": [],
      "lineNumber": 494
    },
    {
      "name": "EconomicIndicator",
      "fields": [
        "id",
        "globalGDP",
        "globalGrowth",
        "inflationRate",
        "unemploymentRate",
        "tradeVolume",
        "currencyVolatility",
        "timestamp",
        "createdAt",
        "updatedAt"
      ],
      "relations": [],
      "lineNumber": 508
    },
    {
      "name": "Notification",
      "fields": [
        "id",
        "userId",
        "countryId",
        "title",
        "description",
        "read",
        "href",
        "type",
        "createdAt",
        "updatedAt"
      ],
      "relations": [],
      "lineNumber": 521
    },
    {
      "name": "UserPreferences",
      "fields": [
        "id",
        "userId",
        "emailNotifications",
        "pushNotifications",
        "economicAlerts",
        "crisisAlerts",
        "diplomaticAlerts",
        "systemAlerts",
        "notificationLevel",
        "createdAt",
        "updatedAt"
      ],
      "relations": [],
      "lineNumber": 534
    },
    {
      "name": "TaxSystem",
      "fields": [
        "id",
        "countryId",
        "taxSystemName",
        "taxAuthority",
        "fiscalYear",
        "taxCode",
        "baseRate",
        "progressiveTax",
        "flatTaxRate",
        "alternativeMinTax",
        "alternativeMinRate",
        "taxHolidays",
        "complianceRate",
        "collectionEfficiency",
        "lastReform",
        "createdAt",
        "updatedAt",
        "country",
        "taxCategories",
        "taxBrackets",
        "taxPolicy",
        "taxExemptions",
        "taxCalculations"
      ],
      "relations": [
        "country"
      ],
      "lineNumber": 551
    },
    {
      "name": "TaxCategory",
      "fields": [
        "id",
        "taxSystemId",
        "categoryName",
        "categoryType",
        "description",
        "isActive",
        "baseRate",
        "calculationMethod",
        "minimumAmount",
        "maximumAmount",
        "exemptionAmount",
        "deductionAllowed",
        "standardDeduction",
        "priority",
        "color",
        "icon",
        "createdAt",
        "updatedAt",
        "taxSystem",
        "taxBrackets",
        "taxExemptions",
        "taxDeductions"
      ],
      "relations": [
        "taxSystem"
      ],
      "lineNumber": 581
    },
    {
      "name": "TaxBracket",
      "fields": [
        "id",
        "taxSystemId",
        "categoryId",
        "bracketName",
        "minIncome",
        "maxIncome",
        "rate",
        "flatAmount",
        "marginalRate",
        "isActive",
        "priority",
        "createdAt",
        "updatedAt",
        "taxSystem",
        "category"
      ],
      "relations": [
        "taxSystem",
        "category"
      ],
      "lineNumber": 611
    },
    {
      "name": "TaxExemption",
      "fields": [
        "id",
        "taxSystemId",
        "categoryId",
        "exemptionName",
        "exemptionType",
        "description",
        "exemptionAmount",
        "exemptionRate",
        "qualifications",
        "isActive",
        "startDate",
        "endDate",
        "createdAt",
        "updatedAt",
        "taxSystem",
        "category"
      ],
      "relations": [
        "taxSystem",
        "category"
      ],
      "lineNumber": 635
    },
    {
      "name": "TaxDeduction",
      "fields": [
        "id",
        "categoryId",
        "deductionName",
        "deductionType",
        "description",
        "maximumAmount",
        "percentage",
        "qualifications",
        "isActive",
        "priority",
        "createdAt",
        "updatedAt",
        "category"
      ],
      "relations": [
        "category"
      ],
      "lineNumber": 660
    },
    {
      "name": "TaxPolicy",
      "fields": [
        "id",
        "taxSystemId",
        "policyName",
        "policyType",
        "description",
        "targetCategory",
        "impactType",
        "rateChange",
        "effectiveDate",
        "expiryDate",
        "isActive",
        "estimatedRevenue",
        "affectedPopulation",
        "createdAt",
        "updatedAt",
        "taxSystem"
      ],
      "relations": [
        "taxSystem"
      ],
      "lineNumber": 681
    },
    {
      "name": "TaxCalculation",
      "fields": [
        "id",
        "taxSystemId",
        "calculationName",
        "taxableIncome",
        "totalDeductions",
        "totalExemptions",
        "adjustedGrossIncome",
        "taxOwed",
        "effectiveRate",
        "marginalRate",
        "breakdown",
        "calculationDate",
        "taxYear",
        "isActive",
        "createdAt",
        "updatedAt",
        "taxSystem"
      ],
      "relations": [
        "taxSystem"
      ],
      "lineNumber": 706
    },
    {
      "name": "GovernmentComponent",
      "fields": [
        "id",
        "countryId",
        "componentType",
        "effectivenessScore",
        "implementationDate",
        "implementationCost",
        "maintenanceCost",
        "requiredCapacity",
        "isActive",
        "notes",
        "createdAt",
        "updatedAt",
        "country",
        "synergies",
        "conflictsWith"
      ],
      "relations": [
        "country",
        "synergies",
        "conflictsWith"
      ],
      "lineNumber": 769
    },
    {
      "name": "ComponentSynergy",
      "fields": [
        "id",
        "countryId",
        "primaryComponentId",
        "secondaryComponentId",
        "synergyType",
        "effectMultiplier",
        "description",
        "discoveredAt",
        "createdAt",
        "country",
        "primaryComponent",
        "secondaryComponent"
      ],
      "relations": [
        "country",
        "primaryComponent",
        "secondaryComponent"
      ],
      "lineNumber": 793
    },
    {
      "name": "BudgetScenario",
      "fields": [
        "id",
        "countryId",
        "name",
        "description",
        "totalBudget",
        "assumptions",
        "riskLevel",
        "feasibility",
        "isActive",
        "createdAt",
        "updatedAt",
        "country",
        "categories"
      ],
      "relations": [
        "country"
      ],
      "lineNumber": 830
    },
    {
      "name": "BudgetScenarioCategory",
      "fields": [
        "id",
        "scenarioId",
        "categoryName",
        "allocatedAmount",
        "allocatedPercent",
        "priority",
        "efficiency",
        "performance",
        "createdAt",
        "scenario"
      ],
      "relations": [
        "scenario"
      ],
      "lineNumber": 851
    },
    {
      "name": "FiscalPolicy",
      "fields": [
        "id",
        "countryId",
        "name",
        "policyType",
        "impact",
        "implementation",
        "cost",
        "benefits",
        "description",
        "isActive",
        "appliedDate",
        "expiryDate",
        "measuredImpact",
        "createdAt",
        "updatedAt",
        "country"
      ],
      "relations": [
        "country"
      ],
      "lineNumber": 868
    },
    {
      "name": "AtomicEffectiveness",
      "fields": [
        "id",
        "countryId",
        "overallScore",
        "taxEffectiveness",
        "economicPolicyScore",
        "stabilityScore",
        "legitimacyScore",
        "componentCount",
        "synergyBonus",
        "conflictPenalty",
        "lastCalculated",
        "createdAt",
        "updatedAt",
        "country"
      ],
      "relations": [
        "country"
      ],
      "lineNumber": 894
    },
    {
      "name": "AtomicEconomicImpact",
      "fields": [
        "id",
        "countryId",
        "componentType",
        "economicMetric",
        "impactMultiplier",
        "effectiveDate",
        "isActive",
        "createdAt",
        "country"
      ],
      "relations": [
        "country"
      ],
      "lineNumber": 918
    },
    {
      "name": "ThinkpagesPost",
      "fields": [
        "id",
        "userId",
        "content",
        "hashtags",
        "postType",
        "parentPostId",
        "repostOfId",
        "likeCount",
        "repostCount",
        "replyCount",
        "impressions",
        "reactionCounts",
        "trending",
        "pinned",
        "visibility",
        "ixTimeTimestamp",
        "createdAt",
        "updatedAt",
        "parentPost",
        "replies",
        "repostOf",
        "reposts",
        "reactions",
        "mentions",
        "mediaAttachments"
      ],
      "relations": [
        "parentPost",
        "replies",
        "repostOf",
        "reposts"
      ],
      "lineNumber": 943
    },
    {
      "name": "PostReaction",
      "fields": [
        "id",
        "postId",
        "userId",
        "reactionType",
        "timestamp",
        "post"
      ],
      "relations": [
        "post"
      ],
      "lineNumber": 980
    },
    {
      "name": "PostMention",
      "fields": [
        "id",
        "postId",
        "mentionedUserId",
        "position",
        "post"
      ],
      "relations": [
        "post"
      ],
      "lineNumber": 996
    },
    {
      "name": "MediaAttachment",
      "fields": [
        "id",
        "postId",
        "type",
        "url",
        "filename",
        "fileSize",
        "mimeType",
        "createdAt",
        "post"
      ],
      "relations": [
        "post"
      ],
      "lineNumber": 1009
    },
    {
      "name": "TrendingTopic",
      "fields": [
        "id",
        "hashtag",
        "postCount",
        "engagement",
        "region",
        "peakTimestamp",
        "isActive",
        "createdAt",
        "updatedAt"
      ],
      "relations": [],
      "lineNumber": 1026
    },
    {
      "name": "CountryMoodMetric",
      "fields": [
        "id",
        "countryId",
        "timestamp",
        "sentimentScore",
        "postCount",
        "country"
      ],
      "relations": [
        "country"
      ],
      "lineNumber": 1044
    },
    {
      "name": "ThinktankGroup",
      "fields": [
        "id",
        "name",
        "description",
        "avatar",
        "type",
        "category",
        "tags",
        "memberCount",
        "createdBy",
        "isActive",
        "settings",
        "createdAt",
        "updatedAt",
        "members",
        "messages",
        "invites",
        "collaborativeDocs"
      ],
      "relations": [],
      "lineNumber": 1059
    },
    {
      "name": "ThinktankMember",
      "fields": [
        "id",
        "groupId",
        "userId",
        "role",
        "joinedAt",
        "isActive",
        "permissions",
        "group"
      ],
      "relations": [
        "group"
      ],
      "lineNumber": 1086
    },
    {
      "name": "ThinktankMessage",
      "fields": [
        "id",
        "groupId",
        "userId",
        "content",
        "messageType",
        "replyToId",
        "editedAt",
        "deletedAt",
        "reactions",
        "mentions",
        "attachments",
        "ixTimeTimestamp",
        "group",
        "replyTo",
        "replies",
        "readReceipts"
      ],
      "relations": [
        "group",
        "replyTo",
        "replies"
      ],
      "lineNumber": 1104
    },
    {
      "name": "ThinktankInvite",
      "fields": [
        "id",
        "groupId",
        "invitedBy",
        "invitedUser",
        "inviteCode",
        "expiresAt",
        "isUsed",
        "createdAt",
        "group"
      ],
      "relations": [
        "group"
      ],
      "lineNumber": 1130
    },
    {
      "name": "CollaborativeDoc",
      "fields": [
        "id",
        "groupId",
        "title",
        "content",
        "version",
        "createdBy",
        "lastEditBy",
        "isPublic",
        "createdAt",
        "updatedAt",
        "group"
      ],
      "relations": [
        "group"
      ],
      "lineNumber": 1148
    },
    {
      "name": "ThinkshareConversation",
      "fields": [
        "id",
        "type",
        "name",
        "avatar",
        "isActive",
        "lastActivity",
        "createdAt",
        "updatedAt",
        "participants",
        "messages"
      ],
      "relations": [],
      "lineNumber": 1169
    },
    {
      "name": "ConversationParticipant",
      "fields": [
        "id",
        "conversationId",
        "userId",
        "joinedAt",
        "leftAt",
        "isActive",
        "role",
        "lastReadAt",
        "notificationSettings",
        "conversation"
      ],
      "relations": [
        "conversation"
      ],
      "lineNumber": 1188
    },
    {
      "name": "ThinkshareMessage",
      "fields": [
        "id",
        "conversationId",
        "userId",
        "content",
        "messageType",
        "replyToId",
        "editedAt",
        "deletedAt",
        "reactions",
        "mentions",
        "attachments",
        "isSystem",
        "ixTimeTimestamp",
        "conversation",
        "replyTo",
        "replies",
        "readReceipts"
      ],
      "relations": [
        "conversation",
        "replyTo",
        "replies"
      ],
      "lineNumber": 1207
    },
    {
      "name": "MessageReadReceipt",
      "fields": [
        "id",
        "messageId",
        "userId",
        "readAt",
        "messageType",
        "thinktankMessage",
        "thinkshareMessage"
      ],
      "relations": [
        "thinktankMessage",
        "thinkshareMessage"
      ],
      "lineNumber": 1234
    },
    {
      "name": "UserPresence",
      "fields": [
        "id",
        "userId",
        "isOnline",
        "lastSeen",
        "status",
        "customStatus",
        "updatedAt"
      ],
      "relations": [],
      "lineNumber": 1252
    },
    {
      "name": "ArchetypeCategory",
      "fields": [
        "id",
        "name",
        "description",
        "color",
        "maxSelectable",
        "priority",
        "isActive",
        "createdAt",
        "updatedAt",
        "archetypes"
      ],
      "relations": [],
      "lineNumber": 1266
    },
    {
      "name": "Archetype",
      "fields": [
        "id",
        "name",
        "description",
        "categoryId",
        "iconName",
        "color",
        "gradient",
        "priority",
        "isSelectable",
        "isActive",
        "tags",
        "filterRules",
        "createdAt",
        "updatedAt",
        "category",
        "userSelections",
        "countryMatches"
      ],
      "relations": [
        "category"
      ],
      "lineNumber": 1284
    },
    {
      "name": "UserArchetypeSelection",
      "fields": [
        "id",
        "userId",
        "archetypeId",
        "selectedAt",
        "user",
        "archetype"
      ],
      "relations": [
        "user",
        "archetype"
      ],
      "lineNumber": 1311
    },
    {
      "name": "CountryArchetypeMatch",
      "fields": [
        "id",
        "countryId",
        "archetypeId",
        "matchScore",
        "lastChecked",
        "country",
        "archetype"
      ],
      "relations": [
        "country",
        "archetype"
      ],
      "lineNumber": 1326
    },
    {
      "name": "NationalIdentity",
      "fields": [
        "id",
        "countryId",
        "countryName",
        "officialName",
        "governmentType",
        "motto",
        "mottoNative",
        "capitalCity",
        "largestCity",
        "demonym",
        "currency",
        "currencySymbol",
        "officialLanguages",
        "nationalLanguage",
        "nationalAnthem",
        "nationalDay",
        "callingCode",
        "internetTLD",
        "drivingSide",
        "timeZone",
        "isoCode",
        "coordinatesLatitude",
        "coordinatesLongitude",
        "emergencyNumber",
        "postalCodeFormat",
        "nationalSport",
        "weekStartDay",
        "createdAt",
        "updatedAt",
        "country"
      ],
      "relations": [
        "country"
      ],
      "lineNumber": 1343
    },
    {
      "name": "PostBookmark",
      "fields": [
        "id",
        "userId",
        "postId",
        "createdAt"
      ],
      "relations": [],
      "lineNumber": 1381
    },
    {
      "name": "PostFlag",
      "fields": [
        "id",
        "userId",
        "postId",
        "reason",
        "createdAt"
      ],
      "relations": [],
      "lineNumber": 1390
    },
    {
      "name": "ActivityFeed",
      "fields": [
        "id",
        "type",
        "category",
        "userId",
        "countryId",
        "title",
        "description",
        "metadata",
        "priority",
        "visibility",
        "relatedCountries",
        "likes",
        "comments",
        "shares",
        "views",
        "createdAt",
        "updatedAt",
        "activityLikes",
        "activityComments",
        "activityShares"
      ],
      "relations": [],
      "lineNumber": 1401
    },
    {
      "name": "ActivityLike",
      "fields": [
        "id",
        "activityId",
        "userId",
        "createdAt",
        "activity"
      ],
      "relations": [
        "activity"
      ],
      "lineNumber": 1437
    },
    {
      "name": "ActivityComment",
      "fields": [
        "id",
        "activityId",
        "userId",
        "content",
        "createdAt",
        "updatedAt",
        "activity"
      ],
      "relations": [
        "activity"
      ],
      "lineNumber": 1449
    },
    {
      "name": "ActivityShare",
      "fields": [
        "id",
        "activityId",
        "userId",
        "createdAt",
        "activity"
      ],
      "relations": [
        "activity"
      ],
      "lineNumber": 1463
    },
    {
      "name": "DiplomaticEvent",
      "fields": [
        "id",
        "country1Id",
        "country2Id",
        "eventType",
        "title",
        "description",
        "tradeValue",
        "status",
        "metadata",
        "embassyId",
        "missionId",
        "severity",
        "relationshipImpact",
        "reputationImpact",
        "economicImpact",
        "ixTimeTimestamp",
        "createdAt",
        "updatedAt"
      ],
      "relations": [],
      "lineNumber": 1475
    },
    {
      "name": "UserConnection",
      "fields": [
        "id",
        "userId",
        "targetUserId",
        "targetCountryId",
        "connectionType",
        "status",
        "createdAt",
        "updatedAt"
      ],
      "relations": [],
      "lineNumber": 1505
    },
    {
      "name": "UserAchievement",
      "fields": [
        "id",
        "userId",
        "achievementId",
        "title",
        "description",
        "category",
        "rarity",
        "iconUrl",
        "metadata",
        "unlockedAt"
      ],
      "relations": [],
      "lineNumber": 1523
    },
    {
      "name": "CountryActivity",
      "fields": [
        "id",
        "countryId",
        "type",
        "data",
        "timestamp"
      ],
      "relations": [],
      "lineNumber": 1542
    },
    {
      "name": "DiplomaticAction",
      "fields": [
        "id",
        "fromCountryId",
        "toCountryId",
        "actionType",
        "description",
        "status",
        "createdAt",
        "updatedAt"
      ],
      "relations": [],
      "lineNumber": 1554
    },
    {
      "name": "Embassy",
      "fields": [
        "id",
        "hostCountryId",
        "guestCountryId",
        "name",
        "location",
        "ambassadorName",
        "staffCount",
        "establishedAt",
        "status",
        "services",
        "securityLevel",
        "establishmentCost",
        "maintenanceCost",
        "lastMaintenancePaid",
        "budget",
        "level",
        "experience",
        "upgradeProgress",
        "influence",
        "effectiveness",
        "reputation",
        "maxStaff",
        "currentMissions",
        "maxMissions",
        "specialization",
        "specializationLevel",
        "buffs",
        "debuffs",
        "lastActivity",
        "createdAt",
        "updatedAt",
        "hostCountry",
        "guestCountry",
        "missions",
        "upgrades"
      ],
      "relations": [
        "hostCountry",
        "guestCountry"
      ],
      "lineNumber": 1570
    },
    {
      "name": "DiplomaticChannel",
      "fields": [
        "id",
        "name",
        "type",
        "classification",
        "encrypted",
        "lastActivity",
        "createdAt",
        "updatedAt",
        "participants",
        "messages"
      ],
      "relations": [],
      "lineNumber": 1630
    },
    {
      "name": "DiplomaticChannelParticipant",
      "fields": [
        "id",
        "channelId",
        "countryId",
        "countryName",
        "flagUrl",
        "role",
        "joinedAt",
        "channel"
      ],
      "relations": [
        "channel"
      ],
      "lineNumber": 1649
    },
    {
      "name": "DiplomaticMessage",
      "fields": [
        "id",
        "channelId",
        "fromCountryId",
        "fromCountryName",
        "toCountryId",
        "toCountryName",
        "subject",
        "content",
        "classification",
        "priority",
        "status",
        "encrypted",
        "ixTimeTimestamp",
        "createdAt",
        "updatedAt",
        "channel"
      ],
      "relations": [
        "channel"
      ],
      "lineNumber": 1666
    },
    {
      "name": "CulturalExchange",
      "fields": [
        "id",
        "title",
        "type",
        "description",
        "hostCountryId",
        "hostCountryName",
        "hostCountryFlag",
        "status",
        "startDate",
        "endDate",
        "ixTimeContext",
        "participants",
        "culturalImpact",
        "diplomaticValue",
        "socialEngagement",
        "achievements",
        "createdAt",
        "updatedAt",
        "participatingCountries",
        "culturalArtifacts"
      ],
      "relations": [],
      "lineNumber": 1695
    },
    {
      "name": "CulturalExchangeParticipant",
      "fields": [
        "id",
        "exchangeId",
        "countryId",
        "countryName",
        "flagUrl",
        "role",
        "joinedAt",
        "exchange"
      ],
      "relations": [
        "exchange"
      ],
      "lineNumber": 1725
    },
    {
      "name": "CulturalArtifact",
      "fields": [
        "id",
        "exchangeId",
        "type",
        "title",
        "description",
        "thumbnailUrl",
        "fileUrl",
        "contributor",
        "countryId",
        "uploadedAt",
        "exchange"
      ],
      "relations": [
        "exchange"
      ],
      "lineNumber": 1742
    },
    {
      "name": "EmbassyMission",
      "fields": [
        "id",
        "embassyId",
        "name",
        "type",
        "description",
        "difficulty",
        "status",
        "requiredStaff",
        "requiredLevel",
        "requiredSpecialization",
        "cost",
        "duration",
        "startedAt",
        "completesAt",
        "experienceReward",
        "influenceReward",
        "reputationReward",
        "economicReward",
        "progress",
        "successChance",
        "complications",
        "ixTimeStarted",
        "ixTimeCompletes",
        "createdAt",
        "updatedAt",
        "embassy"
      ],
      "relations": [
        "embassy"
      ],
      "lineNumber": 1764
    },
    {
      "name": "EmbassyUpgrade",
      "fields": [
        "id",
        "embassyId",
        "upgradeType",
        "name",
        "description",
        "level",
        "cost",
        "duration",
        "requiredLevel",
        "status",
        "startedAt",
        "completesAt",
        "progress",
        "effects",
        "createdAt",
        "updatedAt",
        "embassy"
      ],
      "relations": [
        "embassy"
      ],
      "lineNumber": 1811
    },
    {
      "name": "EmbassyRequirement",
      "fields": [
        "id",
        "hostCountryId",
        "requiredRelationship",
        "minRelationStrength",
        "establishmentCost",
        "approvalTime",
        "specialRequirements",
        "economicTierMultiplier",
        "createdAt",
        "updatedAt"
      ],
      "relations": [],
      "lineNumber": 1844
    },
    {
      "name": "Role",
      "fields": [
        "id",
        "name",
        "displayName",
        "description",
        "level",
        "isSystem",
        "isActive",
        "createdAt",
        "updatedAt",
        "users",
        "rolePermissions"
      ],
      "relations": [],
      "lineNumber": 1865
    },
    {
      "name": "Permission",
      "fields": [
        "id",
        "name",
        "displayName",
        "description",
        "category",
        "isSystem",
        "createdAt",
        "updatedAt",
        "rolePermissions"
      ],
      "relations": [],
      "lineNumber": 1886
    },
    {
      "name": "RolePermission",
      "fields": [
        "id",
        "roleId",
        "permissionId",
        "createdAt",
        "role",
        "permission"
      ],
      "relations": [
        "role",
        "permission"
      ],
      "lineNumber": 1904
    },
    {
      "name": "UserSession",
      "fields": [
        "id",
        "clerkUserId",
        "roleId",
        "permissions",
        "ipAddress",
        "userAgent",
        "lastActivity",
        "expiresAt",
        "isActive",
        "createdAt"
      ],
      "relations": [],
      "lineNumber": 1919
    },
    {
      "name": "AuditLog",
      "fields": [
        "id",
        "userId",
        "action",
        "target",
        "details",
        "ipAddress",
        "userAgent",
        "success",
        "error",
        "timestamp"
      ],
      "relations": [],
      "lineNumber": 1938
    },
    {
      "name": "GovernmentStructure",
      "fields": [
        "id",
        "countryId",
        "governmentName",
        "governmentType",
        "headOfState",
        "headOfGovernment",
        "legislatureName",
        "executiveName",
        "judicialName",
        "totalBudget",
        "fiscalYear",
        "budgetCurrency",
        "createdAt",
        "updatedAt",
        "country",
        "departments",
        "budgetAllocations",
        "revenueSources",
        "officials"
      ],
      "relations": [
        "country"
      ],
      "lineNumber": 1958
    },
    {
      "name": "GovernmentDepartment",
      "fields": [
        "id",
        "governmentStructureId",
        "name",
        "shortName",
        "category",
        "description",
        "minister",
        "ministerTitle",
        "headquarters",
        "established",
        "employeeCount",
        "icon",
        "color",
        "priority",
        "isActive",
        "parentDepartmentId",
        "organizationalLevel",
        "functions",
        "kpis",
        "createdAt",
        "updatedAt",
        "governmentStructure",
        "parentDepartment",
        "subDepartments",
        "budgetAllocations",
        "subBudgets",
        "officials"
      ],
      "relations": [
        "governmentStructure",
        "parentDepartment",
        "subDepartments"
      ],
      "lineNumber": 1984
    },
    {
      "name": "BudgetAllocation",
      "fields": [
        "id",
        "governmentStructureId",
        "departmentId",
        "budgetYear",
        "allocatedAmount",
        "allocatedPercent",
        "spentAmount",
        "encumberedAmount",
        "availableAmount",
        "budgetStatus",
        "lastReviewed",
        "notes",
        "createdAt",
        "updatedAt",
        "governmentStructure",
        "department"
      ],
      "relations": [
        "governmentStructure",
        "department"
      ],
      "lineNumber": 2021
    },
    {
      "name": "SubBudgetCategory",
      "fields": [
        "id",
        "departmentId",
        "name",
        "description",
        "amount",
        "percent",
        "budgetType",
        "isRecurring",
        "priority",
        "createdAt",
        "updatedAt",
        "department"
      ],
      "relations": [
        "department"
      ],
      "lineNumber": 2047
    },
    {
      "name": "RevenueSource",
      "fields": [
        "id",
        "governmentStructureId",
        "name",
        "category",
        "description",
        "rate",
        "revenueAmount",
        "revenuePercent",
        "isActive",
        "collectionMethod",
        "administeredBy",
        "createdAt",
        "updatedAt",
        "governmentStructure"
      ],
      "relations": [
        "governmentStructure"
      ],
      "lineNumber": 2069
    },
    {
      "name": "AdminFavorite",
      "fields": [
        "id",
        "userId",
        "panelType",
        "panelId",
        "displayName",
        "description",
        "iconName",
        "url",
        "category",
        "order",
        "isActive",
        "createdAt",
        "updatedAt"
      ],
      "relations": [],
      "lineNumber": 2093
    },
    {
      "name": "GovernmentOfficial",
      "fields": [
        "id",
        "governmentStructureId",
        "departmentId",
        "name",
        "title",
        "role",
        "email",
        "phone",
        "bio",
        "photoUrl",
        "appointedDate",
        "termEndDate",
        "isActive",
        "priority",
        "responsibilities",
        "createdAt",
        "updatedAt",
        "governmentStructure",
        "department",
        "meetingAttendances"
      ],
      "relations": [
        "governmentStructure",
        "department"
      ],
      "lineNumber": 2117
    },
    {
      "name": "CabinetMeeting",
      "fields": [
        "id",
        "countryId",
        "userId",
        "title",
        "description",
        "scheduledDate",
        "scheduledIxTime",
        "duration",
        "status",
        "notes",
        "createdAt",
        "updatedAt",
        "completedAt",
        "attendances",
        "agendaItems",
        "decisions",
        "actionItems"
      ],
      "relations": [],
      "lineNumber": 2147
    },
    {
      "name": "MeetingAttendance",
      "fields": [
        "id",
        "meetingId",
        "officialId",
        "attendeeName",
        "attendeeRole",
        "attendanceStatus",
        "notes",
        "createdAt",
        "meeting",
        "official"
      ],
      "relations": [
        "meeting",
        "official"
      ],
      "lineNumber": 2175
    },
    {
      "name": "MeetingAgendaItem",
      "fields": [
        "id",
        "meetingId",
        "title",
        "description",
        "order",
        "duration",
        "category",
        "tags",
        "relatedMetrics",
        "presenter",
        "status",
        "outcome",
        "createdAt",
        "updatedAt",
        "meeting"
      ],
      "relations": [
        "meeting"
      ],
      "lineNumber": 2194
    },
    {
      "name": "MeetingDecision",
      "fields": [
        "id",
        "meetingId",
        "agendaItemId",
        "title",
        "description",
        "decisionType",
        "impact",
        "votingResult",
        "implementationStatus",
        "relatedPolicyId",
        "relatedMetrics",
        "estimatedEffect",
        "decisionMakers",
        "createdAt",
        "updatedAt",
        "meeting"
      ],
      "relations": [
        "meeting"
      ],
      "lineNumber": 2218
    },
    {
      "name": "MeetingActionItem",
      "fields": [
        "id",
        "meetingId",
        "agendaItemId",
        "decisionId",
        "title",
        "description",
        "assignedTo",
        "dueDate",
        "dueIxTime",
        "priority",
        "status",
        "category",
        "tags",
        "completionNotes",
        "completedAt",
        "createdAt",
        "updatedAt",
        "meeting"
      ],
      "relations": [
        "meeting"
      ],
      "lineNumber": 2244
    },
    {
      "name": "Policy",
      "fields": [
        "id",
        "countryId",
        "userId",
        "name",
        "description",
        "policyType",
        "category",
        "status",
        "priority",
        "objectives",
        "targetMetrics",
        "implementationCost",
        "maintenanceCost",
        "estimatedBenefit",
        "recommendedFor",
        "requiredTier",
        "requiredComponents",
        "conflictsWith",
        "prerequisitePolicies",
        "proposedDate",
        "effectiveDate",
        "expiryDate",
        "proposedIxTime",
        "effectiveIxTime",
        "gdpEffect",
        "employmentEffect",
        "inflationEffect",
        "taxRevenueEffect",
        "customEffects",
        "approvalRequired",
        "approvedBy",
        "approvedDate",
        "reviewNotes",
        "createdAt",
        "updatedAt",
        "policyEffectLog"
      ],
      "relations": [],
      "lineNumber": 2274
    },
    {
      "name": "PolicyEffectLog",
      "fields": [
        "id",
        "policyId",
        "appliedAt",
        "appliedIxTime",
        "effectType",
        "metricsBefore",
        "metricsAfter",
        "actualEffect",
        "notes",
        "createdAt",
        "policy"
      ],
      "relations": [
        "policy"
      ],
      "lineNumber": 2333
    },
    {
      "name": "ActivitySchedule",
      "fields": [
        "id",
        "countryId",
        "userId",
        "activityType",
        "title",
        "description",
        "scheduledDate",
        "scheduledIxTime",
        "duration",
        "status",
        "priority",
        "category",
        "tags",
        "relatedIds",
        "recurrence",
        "reminderSettings",
        "completionNotes",
        "createdAt",
        "updatedAt"
      ],
      "relations": [],
      "lineNumber": 2353
    },
    {
      "name": "QuickActionTemplate",
      "fields": [
        "id",
        "name",
        "actionType",
        "category",
        "description",
        "defaultSettings",
        "requiredFields",
        "optionalFields",
        "estimatedDuration",
        "recommendedFor",
        "isActive",
        "createdAt",
        "updatedAt"
      ],
      "relations": [],
      "lineNumber": 2383
    },
    {
      "name": "IntelligenceBriefing",
      "fields": [
        "id",
        "countryId",
        "title",
        "description",
        "type",
        "priority",
        "area",
        "confidence",
        "urgency",
        "impactMagnitude",
        "evidence",
        "recommendations",
        "alerts",
        "generatedAt",
        "expiresAt",
        "isActive",
        "createdAt",
        "updatedAt"
      ],
      "relations": [],
      "lineNumber": 2434
    },
    {
      "name": "IntelligenceRecommendation",
      "fields": [
        "id",
        "briefingId",
        "countryId",
        "title",
        "description",
        "category",
        "urgency",
        "difficulty",
        "estimatedDuration",
        "estimatedCost",
        "estimatedBenefit",
        "prerequisites",
        "risks",
        "successProbability",
        "economicImpact",
        "socialImpact",
        "diplomaticImpact",
        "isImplemented",
        "implementedAt",
        "briefing",
        "generatedAt",
        "isActive",
        "createdAt",
        "updatedAt"
      ],
      "relations": [
        "briefing"
      ],
      "lineNumber": 2469
    },
    {
      "name": "IntelligenceAlert",
      "fields": [
        "id",
        "briefingId",
        "countryId",
        "title",
        "description",
        "severity",
        "category",
        "alertType",
        "currentValue",
        "expectedValue",
        "deviation",
        "zScore",
        "factors",
        "confidence",
        "isResolved",
        "resolvedAt",
        "briefing",
        "detectedAt",
        "isActive",
        "createdAt",
        "updatedAt"
      ],
      "relations": [
        "briefing"
      ],
      "lineNumber": 2509
    },
    {
      "name": "VitalitySnapshot",
      "fields": [
        "id",
        "countryId",
        "area",
        "score",
        "trend",
        "changeValue",
        "changePeriod",
        "keyMetrics",
        "peerAverage",
        "regionalAverage",
        "historicalBest",
        "rank",
        "totalCountries",
        "criticalAlertsCount",
        "calculatedAt",
        "ixTime",
        "createdAt",
        "updatedAt"
      ],
      "relations": [],
      "lineNumber": 2549
    },
    {
      "name": "MilitaryBranch",
      "fields": [
        "id",
        "countryId",
        "branchType",
        "name",
        "motto",
        "imageUrl",
        "description",
        "established",
        "activeDuty",
        "reserves",
        "civilianStaff",
        "annualBudget",
        "budgetPercent",
        "readinessLevel",
        "technologyLevel",
        "trainingLevel",
        "morale",
        "deploymentCapacity",
        "sustainmentCapacity",
        "createdAt",
        "updatedAt",
        "country",
        "units",
        "assets"
      ],
      "relations": [
        "country"
      ],
      "lineNumber": 2599
    },
    {
      "name": "MilitaryUnit",
      "fields": [
        "id",
        "branchId",
        "name",
        "unitType",
        "designation",
        "description",
        "personnel",
        "commanderName",
        "commanderRank",
        "headquarters",
        "readiness",
        "imageUrl",
        "createdAt",
        "updatedAt",
        "branch",
        "assets"
      ],
      "relations": [
        "branch"
      ],
      "lineNumber": 2639
    },
    {
      "name": "MilitaryAsset",
      "fields": [
        "id",
        "branchId",
        "unitId",
        "name",
        "assetType",
        "category",
        "status",
        "quantity",
        "operational",
        "acquisitionCost",
        "maintenanceCost",
        "modernizationLevel",
        "capability",
        "imageUrl",
        "createdAt",
        "updatedAt",
        "branch",
        "unit"
      ],
      "relations": [
        "branch",
        "unit"
      ],
      "lineNumber": 2683
    },
    {
      "name": "SecurityThreat",
      "fields": [
        "id",
        "countryId",
        "threatName",
        "threatType",
        "severity",
        "status",
        "description",
        "likelihood",
        "impact",
        "detectedAt",
        "isActive",
        "createdAt",
        "updatedAt",
        "country"
      ],
      "relations": [
        "country"
      ],
      "lineNumber": 2748
    },
    {
      "name": "CountryFollow",
      "fields": [
        "id",
        "followerCountryId",
        "followedCountryId",
        "createdAt",
        "followerCountry",
        "followedCountry"
      ],
      "relations": [
        "followerCountry",
        "followedCountry"
      ],
      "lineNumber": 2777
    }
  ],
  "trpcRouters": [
    {
      "name": "wikiImporter",
      "file": "src/server/api/routers/wikiImporter.ts",
      "endpoints": [
        {
          "router": "wikiImporter",
          "name": "previewImport",
          "type": "query",
          "file": "src/server/api/routers/wikiImporter.ts",
          "lineNumber": 128,
          "usesModel": [
            "Country",
            "NationalIdentity"
          ]
        },
        {
          "router": "wikiImporter",
          "name": "importCountry",
          "type": "mutation",
          "file": "src/server/api/routers/wikiImporter.ts",
          "lineNumber": 147,
          "usesModel": [
            "Country",
            "NationalIdentity"
          ]
        },
        {
          "router": "wikiImporter",
          "name": "fetchFromWiki",
          "type": "query",
          "file": "src/server/api/routers/wikiImporter.ts",
          "lineNumber": 263,
          "usesModel": []
        },
        {
          "router": "wikiImporter",
          "name": "searchAllWikis",
          "type": "query",
          "file": "src/server/api/routers/wikiImporter.ts",
          "lineNumber": 280,
          "usesModel": []
        },
        {
          "router": "wikiImporter",
          "name": "getWikiSources",
          "type": "query",
          "file": "src/server/api/routers/wikiImporter.ts",
          "lineNumber": 326,
          "usesModel": []
        }
      ]
    },
    {
      "name": "users",
      "file": "src/server/api/routers/users.ts",
      "endpoints": [
        {
          "router": "users",
          "name": "getProfile",
          "type": "query",
          "file": "src/server/api/routers/users.ts",
          "lineNumber": 20,
          "usesModel": [
            "User",
            "Country",
            "DmInputs"
          ]
        },
        {
          "router": "users",
          "name": "getProfileById",
          "type": "query",
          "file": "src/server/api/routers/users.ts",
          "lineNumber": 76,
          "usesModel": [
            "User",
            "Country",
            "DmInputs"
          ]
        },
        {
          "router": "users",
          "name": "linkCountry",
          "type": "mutation",
          "file": "src/server/api/routers/users.ts",
          "lineNumber": 125,
          "usesModel": [
            "User",
            "Country",
            "DmInputs"
          ]
        },
        {
          "router": "users",
          "name": "unlinkCountry",
          "type": "mutation",
          "file": "src/server/api/routers/users.ts",
          "lineNumber": 359,
          "usesModel": [
            "User",
            "Country",
            "DmInputs"
          ]
        },
        {
          "router": "users",
          "name": "getLinkedCountry",
          "type": "query",
          "file": "src/server/api/routers/users.ts",
          "lineNumber": 389,
          "usesModel": [
            "User",
            "Country",
            "DmInputs"
          ]
        },
        {
          "router": "users",
          "name": "getSocialData",
          "type": "query",
          "file": "src/server/api/routers/users.ts",
          "lineNumber": 449,
          "usesModel": [
            "User",
            "Country",
            "Role",
            "RolePermissions",
            "Permission"
          ]
        },
        {
          "router": "users",
          "name": "getActiveUsers",
          "type": "query",
          "file": "src/server/api/routers/users.ts",
          "lineNumber": 524,
          "usesModel": [
            "User",
            "Role",
            "Country",
            "RolePermissions",
            "Permission"
          ]
        },
        {
          "router": "users",
          "name": "getCurrentUserWithRole",
          "type": "query",
          "file": "src/server/api/routers/users.ts",
          "lineNumber": 575,
          "usesModel": [
            "User",
            "Role",
            "RolePermissions",
            "Permission"
          ]
        },
        {
          "router": "users",
          "name": "createUserRecord",
          "type": "mutation",
          "file": "src/server/api/routers/users.ts",
          "lineNumber": 629,
          "usesModel": [
            "User",
            "Role",
            "Permission",
            "RolePermissions"
          ]
        },
        {
          "router": "users",
          "name": "setupDatabase",
          "type": "mutation",
          "file": "src/server/api/routers/users.ts",
          "lineNumber": 744,
          "usesModel": [
            "Permission",
            "Role",
            "RolePermission",
            "AdminFavorite"
          ]
        },
        {
          "router": "users",
          "name": "getAdminFavorites",
          "type": "query",
          "file": "src/server/api/routers/users.ts",
          "lineNumber": 835,
          "usesModel": [
            "AdminFavorite"
          ]
        },
        {
          "router": "users",
          "name": "removeAdminFavorite",
          "type": "mutation",
          "file": "src/server/api/routers/users.ts",
          "lineNumber": 943,
          "usesModel": [
            "AdminFavorite",
            "User",
            "Role",
            "RolePermissions",
            "Permission"
          ]
        },
        {
          "router": "users",
          "name": "reorderAdminFavorites",
          "type": "mutation",
          "file": "src/server/api/routers/users.ts",
          "lineNumber": 971,
          "usesModel": [
            "AdminFavorite",
            "User",
            "Role",
            "RolePermissions",
            "Permission"
          ]
        },
        {
          "router": "users",
          "name": "getUserWithRole",
          "type": "query",
          "file": "src/server/api/routers/users.ts",
          "lineNumber": 1002,
          "usesModel": [
            "User",
            "Role",
            "RolePermissions",
            "Permission"
          ]
        },
        {
          "router": "users",
          "name": "getMembershipStatus",
          "type": "query",
          "file": "src/server/api/routers/users.ts",
          "lineNumber": 1053,
          "usesModel": [
            "User"
          ]
        },
        {
          "router": "users",
          "name": "updateMembershipTier",
          "type": "mutation",
          "file": "src/server/api/routers/users.ts",
          "lineNumber": 1104,
          "usesModel": [
            "User"
          ]
        }
      ]
    },
    {
      "name": "thinkpages",
      "file": "src/server/api/routers/thinkpages.ts",
      "endpoints": [
        {
          "router": "thinkpages",
          "name": "searchUnsplashImages",
          "type": "query",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 102,
          "usesModel": [
            "ThinkpagesPost",
            "TrendingTopic"
          ]
        },
        {
          "router": "thinkpages",
          "name": "searchWikiCommonsImages",
          "type": "query",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 123,
          "usesModel": [
            "ThinkpagesPost",
            "TrendingTopic",
            "User"
          ]
        },
        {
          "router": "thinkpages",
          "name": "searchWiki",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 184,
          "usesModel": [
            "ThinkpagesPost",
            "TrendingTopic",
            "User",
            "Country"
          ]
        },
        {
          "router": "thinkpages",
          "name": "calculateTrendingTopics",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 201,
          "usesModel": [
            "ThinkpagesPost",
            "TrendingTopic",
            "User",
            "Country"
          ]
        },
        {
          "router": "thinkpages",
          "name": "searchUsers",
          "type": "query",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 255,
          "usesModel": [
            "User",
            "Country"
          ]
        },
        {
          "router": "thinkpages",
          "name": "checkUsernameAvailability",
          "type": "query",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 319,
          "usesModel": [
            "User",
            "Country"
          ]
        },
        {
          "router": "thinkpages",
          "name": "generateProfilePicture",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 332,
          "usesModel": [
            "User",
            "Country"
          ]
        },
        {
          "router": "thinkpages",
          "name": "createAccount",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 340,
          "usesModel": [
            "User",
            "Country"
          ]
        },
        {
          "router": "thinkpages",
          "name": "getAccountsByCountry",
          "type": "query",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 430,
          "usesModel": [
            "User",
            "ThinkpagesPost",
            "PostMention",
            "Account",
            "RepostOf"
          ]
        },
        {
          "router": "thinkpages",
          "name": "getAccountCountsByType",
          "type": "query",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 455,
          "usesModel": [
            "User",
            "ThinkpagesPost",
            "PostMention",
            "PostReaction",
            "Account",
            "RepostOf"
          ]
        },
        {
          "router": "thinkpages",
          "name": "createPost",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 476,
          "usesModel": [
            "User",
            "ThinkpagesPost",
            "PostMention",
            "PostReaction",
            "Account",
            "RepostOf"
          ]
        },
        {
          "router": "thinkpages",
          "name": "addReaction",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 561,
          "usesModel": [
            "ThinkpagesPost",
            "PostReaction"
          ]
        },
        {
          "router": "thinkpages",
          "name": "removeReaction",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 634,
          "usesModel": [
            "ThinkpagesPost",
            "PostReaction",
            "TrendingTopic",
            "Account",
            "RepostOf",
            "Reactions"
          ]
        },
        {
          "router": "thinkpages",
          "name": "getFeed",
          "type": "query",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 689,
          "usesModel": [
            "ThinkpagesPost",
            "TrendingTopic",
            "User",
            "Account",
            "Country",
            "RepostOf",
            "Reactions",
            "Posts"
          ]
        },
        {
          "router": "thinkpages",
          "name": "getTrendingTopics",
          "type": "query",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 766,
          "usesModel": [
            "TrendingTopic",
            "User",
            "ThinkpagesPost",
            "Country",
            "Account",
            "RepostOf",
            "Replies",
            "Posts"
          ]
        },
        {
          "router": "thinkpages",
          "name": "getAccount",
          "type": "query",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 786,
          "usesModel": [
            "User",
            "ThinkpagesPost",
            "Country",
            "Account",
            "Reactions",
            "RepostOf",
            "Replies",
            "Posts"
          ]
        },
        {
          "router": "thinkpages",
          "name": "getThinkpagesAccountByUserId",
          "type": "query",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 815,
          "usesModel": [
            "User",
            "ThinkpagesPost",
            "Country",
            "CountryMoodMetric",
            "Account",
            "Reactions",
            "RepostOf",
            "Replies",
            "Posts"
          ]
        },
        {
          "router": "thinkpages",
          "name": "getPost",
          "type": "query",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 837,
          "usesModel": [
            "ThinkpagesPost",
            "Country",
            "User",
            "CountryMoodMetric",
            "Account",
            "Reactions",
            "RepostOf",
            "Replies"
          ]
        },
        {
          "router": "thinkpages",
          "name": "triggerCitizenReaction",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 883,
          "usesModel": [
            "Country",
            "User",
            "ThinkpagesPost",
            "CountryMoodMetric",
            "ThinktankGroup",
            "ThinktankMember",
            "Reactions",
            "Members"
          ]
        },
        {
          "router": "thinkpages",
          "name": "calculateCountryMoodMetrics",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 892,
          "usesModel": [
            "Country",
            "User",
            "ThinkpagesPost",
            "CountryMoodMetric",
            "ThinktankGroup",
            "ThinktankMember",
            "Reactions",
            "Members"
          ]
        },
        {
          "router": "thinkpages",
          "name": "getThinktanks",
          "type": "query",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 1029,
          "usesModel": [
            "ThinktankGroup",
            "User",
            "ThinktankMember",
            "Members"
          ]
        },
        {
          "router": "thinkpages",
          "name": "joinThinktank",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 1096,
          "usesModel": [
            "ThinktankGroup",
            "User",
            "ThinktankMember"
          ]
        },
        {
          "router": "thinkpages",
          "name": "leaveThinktank",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 1172,
          "usesModel": [
            "ThinktankMember",
            "ThinktankGroup",
            "ThinktankMessage",
            "ReplyTo",
            "Replies"
          ]
        },
        {
          "router": "thinkpages",
          "name": "getThinktankMessages",
          "type": "query",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 1230,
          "usesModel": [
            "ThinktankMember",
            "ThinktankMessage",
            "ThinktankGroup",
            "ReplyTo",
            "Replies"
          ]
        },
        {
          "router": "thinkpages",
          "name": "deleteThinktank",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 1368,
          "usesModel": [
            "ThinktankGroup",
            "ThinktankMember",
            "ThinktankInvite",
            "CollaborativeDoc"
          ]
        },
        {
          "router": "thinkpages",
          "name": "updateMemberRole",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 1379,
          "usesModel": [
            "ThinktankMember",
            "ThinktankGroup",
            "ThinktankInvite",
            "CollaborativeDoc"
          ]
        },
        {
          "router": "thinkpages",
          "name": "removeMemberFromThinktank",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 1399,
          "usesModel": [
            "ThinktankMember",
            "ThinktankGroup",
            "ThinktankInvite",
            "CollaborativeDoc",
            "Group",
            "Members"
          ]
        },
        {
          "router": "thinkpages",
          "name": "inviteToThinktank",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 1423,
          "usesModel": [
            "ThinktankInvite",
            "CollaborativeDoc",
            "ThinktankMember",
            "Group",
            "Members"
          ]
        },
        {
          "router": "thinkpages",
          "name": "getThinktankDocuments",
          "type": "query",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 1444,
          "usesModel": [
            "CollaborativeDoc",
            "ThinktankMember",
            "Group",
            "Members"
          ]
        },
        {
          "router": "thinkpages",
          "name": "createThinktankDocument",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 1460,
          "usesModel": [
            "CollaborativeDoc",
            "ThinktankMember",
            "Group",
            "Members"
          ]
        },
        {
          "router": "thinkpages",
          "name": "updateThinktankDocument",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 1516,
          "usesModel": [
            "CollaborativeDoc",
            "ThinkshareMessage",
            "Group",
            "Members"
          ]
        },
        {
          "router": "thinkpages",
          "name": "deleteThinktankDocument",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 1570,
          "usesModel": [
            "CollaborativeDoc",
            "ThinkshareMessage",
            "Group",
            "Members"
          ]
        },
        {
          "router": "thinkpages",
          "name": "getThinktankDocument",
          "type": "query",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 1609,
          "usesModel": [
            "CollaborativeDoc",
            "ThinkshareMessage",
            "Group",
            "Members"
          ]
        },
        {
          "router": "thinkpages",
          "name": "addReactionToMessage",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 1655,
          "usesModel": [
            "ThinkshareMessage",
            "User",
            "ThinkshareConversation",
            "Country"
          ]
        },
        {
          "router": "thinkpages",
          "name": "removeReactionFromMessage",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 1686,
          "usesModel": [
            "ThinkshareMessage",
            "User",
            "ThinkshareConversation",
            "Country",
            "Participants"
          ]
        },
        {
          "router": "thinkpages",
          "name": "editMessage",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 1721,
          "usesModel": [
            "ThinkshareMessage",
            "User",
            "ThinkshareConversation",
            "Country",
            "Participants"
          ]
        },
        {
          "router": "thinkpages",
          "name": "deleteMessage",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 1739,
          "usesModel": [
            "ThinkshareMessage",
            "User",
            "ThinkshareConversation",
            "Country",
            "Participants"
          ]
        },
        {
          "router": "thinkpages",
          "name": "createConversation",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 1756,
          "usesModel": [
            "User",
            "ThinkshareConversation",
            "Country",
            "Participants",
            "Messages"
          ]
        },
        {
          "router": "thinkpages",
          "name": "getConversations",
          "type": "query",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 1851,
          "usesModel": [
            "ThinkshareConversation",
            "ConversationParticipant",
            "ThinkshareMessage",
            "Participants",
            "ReplyTo",
            "Messages"
          ]
        },
        {
          "router": "thinkpages",
          "name": "getConversationMessages",
          "type": "query",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 1935,
          "usesModel": [
            "ConversationParticipant",
            "ThinkshareMessage",
            "User",
            "ReplyTo"
          ]
        },
        {
          "router": "thinkpages",
          "name": "markMessagesAsRead",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 2101,
          "usesModel": [
            "ConversationParticipant",
            "MessageReadReceipt",
            "UserPresence"
          ]
        },
        {
          "router": "thinkpages",
          "name": "updatePresence",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 2167,
          "usesModel": [
            "UserPresence",
            "ThinkpagesPost",
            "Account"
          ]
        },
        {
          "router": "thinkpages",
          "name": "getPresenceForUsers",
          "type": "query",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 2198,
          "usesModel": [
            "UserPresence",
            "ThinkpagesPost",
            "Account"
          ]
        },
        {
          "router": "thinkpages",
          "name": "getDiscordEmojis",
          "type": "query",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 2215,
          "usesModel": [
            "ThinkpagesPost",
            "Account"
          ]
        },
        {
          "router": "thinkpages",
          "name": "updatePost",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 2266,
          "usesModel": [
            "ThinkpagesPost",
            "PostBookmark",
            "Account"
          ]
        },
        {
          "router": "thinkpages",
          "name": "deletePost",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 2311,
          "usesModel": [
            "ThinkpagesPost",
            "PostBookmark",
            "PostFlag"
          ]
        },
        {
          "router": "thinkpages",
          "name": "pinPost",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 2347,
          "usesModel": [
            "ThinkpagesPost",
            "PostBookmark",
            "PostFlag",
            "User",
            "ThinkshareConversation"
          ]
        },
        {
          "router": "thinkpages",
          "name": "bookmarkPost",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 2385,
          "usesModel": [
            "PostBookmark",
            "PostFlag",
            "User",
            "ThinkshareConversation",
            "ConversationParticipant",
            "ThinkshareMessage"
          ]
        },
        {
          "router": "thinkpages",
          "name": "flagPost",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 2423,
          "usesModel": [
            "PostFlag",
            "User",
            "ThinkshareConversation",
            "ConversationParticipant",
            "ThinkshareMessage"
          ]
        },
        {
          "router": "thinkpages",
          "name": "createConversationByCountries",
          "type": "mutation",
          "file": "src/server/api/routers/thinkpages.ts",
          "lineNumber": 2461,
          "usesModel": [
            "User",
            "ThinkshareConversation",
            "ConversationParticipant",
            "ThinkshareMessage"
          ]
        }
      ]
    },
    {
      "name": "taxSystem",
      "file": "src/server/api/routers/taxSystem.ts",
      "endpoints": [
        {
          "router": "taxSystem",
          "name": "getByCountryId",
          "type": "query",
          "file": "src/server/api/routers/taxSystem.ts",
          "lineNumber": 7,
          "usesModel": [
            "TaxSystem",
            "TaxCategories",
            "TaxBrackets",
            "TaxExemptions",
            "TaxDeductions"
          ]
        },
        {
          "router": "taxSystem",
          "name": "create",
          "type": "mutation",
          "file": "src/server/api/routers/taxSystem.ts",
          "lineNumber": 95,
          "usesModel": [
            "TaxSystem",
            "TaxCategory",
            "TaxCategories",
            "TaxBrackets",
            "TaxExemptions",
            "TaxDeductions"
          ]
        },
        {
          "router": "taxSystem",
          "name": "update",
          "type": "mutation",
          "file": "src/server/api/routers/taxSystem.ts",
          "lineNumber": 180,
          "usesModel": [
            "TaxCategory",
            "TaxSystem",
            "TaxCategories",
            "TaxBrackets",
            "TaxExemptions",
            "TaxDeductions"
          ]
        },
        {
          "router": "taxSystem",
          "name": "delete",
          "type": "mutation",
          "file": "src/server/api/routers/taxSystem.ts",
          "lineNumber": 277,
          "usesModel": [
            "TaxSystem"
          ]
        }
      ]
    },
    {
      "name": "security",
      "file": "src/server/api/routers/security.ts",
      "endpoints": [
        {
          "router": "security",
          "name": "getSecurityAssessment",
          "type": "query",
          "file": "src/server/api/routers/security.ts",
          "lineNumber": 11,
          "usesModel": []
        },
        {
          "router": "security",
          "name": "getMilitaryBranches",
          "type": "query",
          "file": "src/server/api/routers/security.ts",
          "lineNumber": 35,
          "usesModel": []
        },
        {
          "router": "security",
          "name": "createMilitaryBranch",
          "type": "mutation",
          "file": "src/server/api/routers/security.ts",
          "lineNumber": 72,
          "usesModel": []
        },
        {
          "router": "security",
          "name": "updateMilitaryBranch",
          "type": "mutation",
          "file": "src/server/api/routers/security.ts",
          "lineNumber": 76,
          "usesModel": []
        },
        {
          "router": "security",
          "name": "deleteMilitaryBranch",
          "type": "mutation",
          "file": "src/server/api/routers/security.ts",
          "lineNumber": 80,
          "usesModel": []
        },
        {
          "router": "security",
          "name": "createMilitaryUnit",
          "type": "mutation",
          "file": "src/server/api/routers/security.ts",
          "lineNumber": 85,
          "usesModel": []
        },
        {
          "router": "security",
          "name": "updateMilitaryUnit",
          "type": "mutation",
          "file": "src/server/api/routers/security.ts",
          "lineNumber": 89,
          "usesModel": []
        },
        {
          "router": "security",
          "name": "deleteMilitaryUnit",
          "type": "mutation",
          "file": "src/server/api/routers/security.ts",
          "lineNumber": 93,
          "usesModel": []
        },
        {
          "router": "security",
          "name": "createMilitaryAsset",
          "type": "mutation",
          "file": "src/server/api/routers/security.ts",
          "lineNumber": 98,
          "usesModel": []
        },
        {
          "router": "security",
          "name": "updateMilitaryAsset",
          "type": "mutation",
          "file": "src/server/api/routers/security.ts",
          "lineNumber": 102,
          "usesModel": []
        },
        {
          "router": "security",
          "name": "deleteMilitaryAsset",
          "type": "query",
          "file": "src/server/api/routers/security.ts",
          "lineNumber": 106,
          "usesModel": []
        },
        {
          "router": "security",
          "name": "getDefenseBudget",
          "type": "query",
          "file": "src/server/api/routers/security.ts",
          "lineNumber": 111,
          "usesModel": []
        },
        {
          "router": "security",
          "name": "updateDefenseBudget",
          "type": "query",
          "file": "src/server/api/routers/security.ts",
          "lineNumber": 123,
          "usesModel": []
        },
        {
          "router": "security",
          "name": "getInternalStability",
          "type": "query",
          "file": "src/server/api/routers/security.ts",
          "lineNumber": 128,
          "usesModel": []
        },
        {
          "router": "security",
          "name": "updateInternalStability",
          "type": "mutation",
          "file": "src/server/api/routers/security.ts",
          "lineNumber": 165,
          "usesModel": []
        },
        {
          "router": "security",
          "name": "generateStabilityEvent",
          "type": "mutation",
          "file": "src/server/api/routers/security.ts",
          "lineNumber": 169,
          "usesModel": []
        },
        {
          "router": "security",
          "name": "resolveSecurityEvent",
          "type": "query",
          "file": "src/server/api/routers/security.ts",
          "lineNumber": 173,
          "usesModel": []
        },
        {
          "router": "security",
          "name": "getBorderSecurity",
          "type": "query",
          "file": "src/server/api/routers/security.ts",
          "lineNumber": 178,
          "usesModel": []
        },
        {
          "router": "security",
          "name": "updateBorderSecurity",
          "type": "query",
          "file": "src/server/api/routers/security.ts",
          "lineNumber": 186,
          "usesModel": []
        },
        {
          "router": "security",
          "name": "getSecurityThreats",
          "type": "query",
          "file": "src/server/api/routers/security.ts",
          "lineNumber": 191,
          "usesModel": []
        },
        {
          "router": "security",
          "name": "createSecurityThreat",
          "type": "mutation",
          "file": "src/server/api/routers/security.ts",
          "lineNumber": 203,
          "usesModel": []
        },
        {
          "router": "security",
          "name": "updateSecurityThreat",
          "type": "query",
          "file": "src/server/api/routers/security.ts",
          "lineNumber": 207,
          "usesModel": []
        },
        {
          "router": "security",
          "name": "getDefenseOverview",
          "type": "query",
          "file": "src/server/api/routers/security.ts",
          "lineNumber": 212,
          "usesModel": []
        }
      ]
    },
    {
      "name": "sdi",
      "file": "src/server/api/routers/sdi.ts",
      "endpoints": [
        {
          "router": "sdi",
          "name": "getIntelligenceFeed",
          "type": "query",
          "file": "src/server/api/routers/sdi.ts",
          "lineNumber": 11,
          "usesModel": [
            "IntelligenceItem",
            "CrisisEvent"
          ]
        },
        {
          "router": "sdi",
          "name": "getActiveCrises",
          "type": "query",
          "file": "src/server/api/routers/sdi.ts",
          "lineNumber": 61,
          "usesModel": [
            "CrisisEvent",
            "Country",
            "EconomicIndicator"
          ]
        },
        {
          "router": "sdi",
          "name": "getCrisisEvents",
          "type": "query",
          "file": "src/server/api/routers/sdi.ts",
          "lineNumber": 82,
          "usesModel": [
            "CrisisEvent",
            "Country",
            "EconomicIndicator"
          ]
        },
        {
          "router": "sdi",
          "name": "getResponseTeams",
          "type": "query",
          "file": "src/server/api/routers/sdi.ts",
          "lineNumber": 104,
          "usesModel": [
            "CrisisEvent",
            "Country",
            "EconomicIndicator"
          ]
        },
        {
          "router": "sdi",
          "name": "getEconomicIndicators",
          "type": "query",
          "file": "src/server/api/routers/sdi.ts",
          "lineNumber": 160,
          "usesModel": [
            "Country",
            "EconomicIndicator",
            "CrisisEvent"
          ]
        },
        {
          "router": "sdi",
          "name": "getCommodityPrices",
          "type": "query",
          "file": "src/server/api/routers/sdi.ts",
          "lineNumber": 198,
          "usesModel": [
            "EconomicIndicator",
            "CrisisEvent",
            "DiplomaticRelation",
            "Treaty"
          ]
        },
        {
          "router": "sdi",
          "name": "getEconomicAlerts",
          "type": "query",
          "file": "src/server/api/routers/sdi.ts",
          "lineNumber": 295,
          "usesModel": [
            "CrisisEvent",
            "DiplomaticRelation",
            "Treaty",
            "IntelligenceItem"
          ]
        },
        {
          "router": "sdi",
          "name": "getDiplomaticRelations",
          "type": "query",
          "file": "src/server/api/routers/sdi.ts",
          "lineNumber": 317,
          "usesModel": [
            "DiplomaticRelation",
            "Treaty",
            "CrisisEvent",
            "IntelligenceItem"
          ]
        },
        {
          "router": "sdi",
          "name": "getActiveTreaties",
          "type": "query",
          "file": "src/server/api/routers/sdi.ts",
          "lineNumber": 336,
          "usesModel": [
            "Treaty",
            "DiplomaticRelation",
            "CrisisEvent",
            "IntelligenceItem"
          ]
        },
        {
          "router": "sdi",
          "name": "getDiplomaticEvents",
          "type": "query",
          "file": "src/server/api/routers/sdi.ts",
          "lineNumber": 354,
          "usesModel": [
            "DiplomaticRelation",
            "Treaty",
            "CrisisEvent",
            "IntelligenceItem"
          ]
        },
        {
          "router": "sdi",
          "name": "getDiplomaticIntelligence",
          "type": "query",
          "file": "src/server/api/routers/sdi.ts",
          "lineNumber": 372,
          "usesModel": [
            "DiplomaticRelation",
            "Treaty",
            "CrisisEvent",
            "IntelligenceItem"
          ]
        },
        {
          "router": "sdi",
          "name": "getSystemStatus",
          "type": "query",
          "file": "src/server/api/routers/sdi.ts",
          "lineNumber": 461,
          "usesModel": [
            "CrisisEvent",
            "IntelligenceItem",
            "Treaty",
            "DiplomaticRelation"
          ]
        },
        {
          "router": "sdi",
          "name": "updateCrisisStatus",
          "type": "mutation",
          "file": "src/server/api/routers/sdi.ts",
          "lineNumber": 541,
          "usesModel": [
            "CrisisEvent",
            "EconomicIndicator",
            "DiplomaticRelation"
          ]
        },
        {
          "router": "sdi",
          "name": "deleteCrisisEvent",
          "type": "mutation",
          "file": "src/server/api/routers/sdi.ts",
          "lineNumber": 613,
          "usesModel": [
            "CrisisEvent",
            "EconomicIndicator",
            "DiplomaticRelation",
            "Treaty"
          ]
        },
        {
          "router": "sdi",
          "name": "triggerCrisisAutoPost",
          "type": "mutation",
          "file": "src/server/api/routers/sdi.ts",
          "lineNumber": 621,
          "usesModel": [
            "EconomicIndicator",
            "DiplomaticRelation",
            "Treaty"
          ]
        },
        {
          "router": "sdi",
          "name": "createEconomicIndicator",
          "type": "mutation",
          "file": "src/server/api/routers/sdi.ts",
          "lineNumber": 630,
          "usesModel": [
            "EconomicIndicator",
            "DiplomaticRelation",
            "Treaty"
          ]
        },
        {
          "router": "sdi",
          "name": "deleteEconomicIndicator",
          "type": "mutation",
          "file": "src/server/api/routers/sdi.ts",
          "lineNumber": 667,
          "usesModel": [
            "EconomicIndicator",
            "DiplomaticRelation",
            "Treaty",
            "IntelligenceItem"
          ]
        },
        {
          "router": "sdi",
          "name": "updateDiplomaticRelation",
          "type": "mutation",
          "file": "src/server/api/routers/sdi.ts",
          "lineNumber": 698,
          "usesModel": [
            "DiplomaticRelation",
            "Treaty",
            "IntelligenceItem",
            "CrisisEvent"
          ]
        },
        {
          "router": "sdi",
          "name": "deleteDiplomaticRelation",
          "type": "mutation",
          "file": "src/server/api/routers/sdi.ts",
          "lineNumber": 721,
          "usesModel": [
            "DiplomaticRelation",
            "Treaty",
            "IntelligenceItem",
            "CrisisEvent"
          ]
        },
        {
          "router": "sdi",
          "name": "updateTreaty",
          "type": "mutation",
          "file": "src/server/api/routers/sdi.ts",
          "lineNumber": 751,
          "usesModel": [
            "Treaty",
            "IntelligenceItem",
            "CrisisEvent"
          ]
        },
        {
          "router": "sdi",
          "name": "deleteTreaty",
          "type": "mutation",
          "file": "src/server/api/routers/sdi.ts",
          "lineNumber": 770,
          "usesModel": [
            "Treaty",
            "IntelligenceItem",
            "CrisisEvent",
            "User",
            "Notification"
          ]
        },
        {
          "router": "sdi",
          "name": "searchSDI",
          "type": "query",
          "file": "src/server/api/routers/sdi.ts",
          "lineNumber": 778,
          "usesModel": [
            "IntelligenceItem",
            "CrisisEvent",
            "Treaty",
            "User",
            "Notification"
          ]
        },
        {
          "router": "sdi",
          "name": "getNotifications",
          "type": "query",
          "file": "src/server/api/routers/sdi.ts",
          "lineNumber": 905,
          "usesModel": [
            "User",
            "Notification"
          ]
        },
        {
          "router": "sdi",
          "name": "getUnreadNotifications",
          "type": "query",
          "file": "src/server/api/routers/sdi.ts",
          "lineNumber": 923,
          "usesModel": [
            "User",
            "Notification"
          ]
        },
        {
          "router": "sdi",
          "name": "createNotification",
          "type": "mutation",
          "file": "src/server/api/routers/sdi.ts",
          "lineNumber": 940,
          "usesModel": [
            "Notification"
          ]
        },
        {
          "router": "sdi",
          "name": "getAchievements",
          "type": "query",
          "file": "src/server/api/routers/sdi.ts",
          "lineNumber": 963,
          "usesModel": [
            "Notification"
          ]
        }
      ]
    },
    {
      "name": "scheduledChanges",
      "file": "src/server/api/routers/scheduledChanges.ts",
      "endpoints": [
        {
          "router": "scheduledChanges",
          "name": "getPendingChanges",
          "type": "query",
          "file": "src/server/api/routers/scheduledChanges.ts",
          "lineNumber": 19,
          "usesModel": [
            "User",
            "ScheduledChange",
            "Country"
          ]
        },
        {
          "router": "scheduledChanges",
          "name": "cancelScheduledChange",
          "type": "mutation",
          "file": "src/server/api/routers/scheduledChanges.ts",
          "lineNumber": 108,
          "usesModel": [
            "ScheduledChange",
            "Country",
            "User"
          ]
        },
        {
          "router": "scheduledChanges",
          "name": "getChangesReadyToApply",
          "type": "query",
          "file": "src/server/api/routers/scheduledChanges.ts",
          "lineNumber": 151,
          "usesModel": [
            "ScheduledChange",
            "Country",
            "User"
          ]
        },
        {
          "router": "scheduledChanges",
          "name": "applyScheduledChange",
          "type": "mutation",
          "file": "src/server/api/routers/scheduledChanges.ts",
          "lineNumber": 180,
          "usesModel": [
            "ScheduledChange",
            "Country",
            "User"
          ]
        },
        {
          "router": "scheduledChanges",
          "name": "getChangeHistory",
          "type": "query",
          "file": "src/server/api/routers/scheduledChanges.ts",
          "lineNumber": 233,
          "usesModel": [
            "User",
            "ScheduledChange",
            "Country"
          ]
        },
        {
          "router": "scheduledChanges",
          "name": "applyDueChanges",
          "type": "mutation",
          "file": "src/server/api/routers/scheduledChanges.ts",
          "lineNumber": 272,
          "usesModel": [
            "ScheduledChange",
            "Country",
            "User"
          ]
        }
      ]
    },
    {
      "name": "roles",
      "file": "src/server/api/routers/roles.ts",
      "endpoints": [
        {
          "router": "roles",
          "name": "getRoles",
          "type": "query",
          "file": "src/server/api/routers/roles.ts",
          "lineNumber": 61,
          "usesModel": [
            "Role",
            "Permission",
            "RolePermission",
            "_count",
            "RolePermissions",
            "Users"
          ]
        },
        {
          "router": "roles",
          "name": "getPermissions",
          "type": "query",
          "file": "src/server/api/routers/roles.ts",
          "lineNumber": 95,
          "usesModel": [
            "Permission",
            "Role",
            "RolePermission"
          ]
        },
        {
          "router": "roles",
          "name": "createRole",
          "type": "mutation",
          "file": "src/server/api/routers/roles.ts",
          "lineNumber": 125,
          "usesModel": [
            "Role",
            "RolePermission"
          ]
        },
        {
          "router": "roles",
          "name": "updateRole",
          "type": "mutation",
          "file": "src/server/api/routers/roles.ts",
          "lineNumber": 201,
          "usesModel": [
            "Role",
            "RolePermission",
            "_count",
            "Users"
          ]
        },
        {
          "router": "roles",
          "name": "deleteRole",
          "type": "mutation",
          "file": "src/server/api/routers/roles.ts",
          "lineNumber": 290,
          "usesModel": [
            "Role",
            "User",
            "_count",
            "Users"
          ]
        },
        {
          "router": "roles",
          "name": "assignUserRole",
          "type": "mutation",
          "file": "src/server/api/routers/roles.ts",
          "lineNumber": 345,
          "usesModel": [
            "Role",
            "User"
          ]
        },
        {
          "router": "roles",
          "name": "removeUserRole",
          "type": "mutation",
          "file": "src/server/api/routers/roles.ts",
          "lineNumber": 395,
          "usesModel": [
            "User",
            "AuditLog",
            "Role"
          ]
        },
        {
          "router": "roles",
          "name": "getUsersWithRoles",
          "type": "query",
          "file": "src/server/api/routers/roles.ts",
          "lineNumber": 438,
          "usesModel": [
            "User",
            "AuditLog",
            "Role",
            "Permission"
          ]
        },
        {
          "router": "roles",
          "name": "getAuditLogs",
          "type": "query",
          "file": "src/server/api/routers/roles.ts",
          "lineNumber": 496,
          "usesModel": [
            "AuditLog",
            "Role",
            "Permission"
          ]
        },
        {
          "router": "roles",
          "name": "initializeRoleSystem",
          "type": "mutation",
          "file": "src/server/api/routers/roles.ts",
          "lineNumber": 541,
          "usesModel": [
            "Role",
            "Permission",
            "RolePermission"
          ]
        }
      ]
    },
    {
      "name": "policies",
      "file": "src/server/api/routers/policies.ts",
      "endpoints": [
        {
          "router": "policies",
          "name": "getPolicies",
          "type": "query",
          "file": "src/server/api/routers/policies.ts",
          "lineNumber": 35,
          "usesModel": [
            "Policy",
            "User",
            "PolicyEffectLog"
          ]
        },
        {
          "router": "policies",
          "name": "getPolicy",
          "type": "query",
          "file": "src/server/api/routers/policies.ts",
          "lineNumber": 55,
          "usesModel": [
            "Policy",
            "User",
            "PolicyEffectLog"
          ]
        },
        {
          "router": "policies",
          "name": "deletePolicy",
          "type": "mutation",
          "file": "src/server/api/routers/policies.ts",
          "lineNumber": 91,
          "usesModel": [
            "Policy",
            "User",
            "PolicyEffectLog"
          ]
        },
        {
          "router": "policies",
          "name": "activatePolicy",
          "type": "mutation",
          "file": "src/server/api/routers/policies.ts",
          "lineNumber": 101,
          "usesModel": [
            "Policy",
            "User",
            "PolicyEffectLog"
          ]
        },
        {
          "router": "policies",
          "name": "suspendPolicy",
          "type": "mutation",
          "file": "src/server/api/routers/policies.ts",
          "lineNumber": 134,
          "usesModel": [
            "Policy",
            "PolicyEffectLog"
          ]
        },
        {
          "router": "policies",
          "name": "repealPolicy",
          "type": "mutation",
          "file": "src/server/api/routers/policies.ts",
          "lineNumber": 148,
          "usesModel": [
            "Policy",
            "PolicyEffectLog",
            "ActivitySchedule"
          ]
        },
        {
          "router": "policies",
          "name": "logPolicyEffect",
          "type": "mutation",
          "file": "src/server/api/routers/policies.ts",
          "lineNumber": 165,
          "usesModel": [
            "PolicyEffectLog",
            "Policy",
            "ActivitySchedule"
          ]
        },
        {
          "router": "policies",
          "name": "getPolicyEffects",
          "type": "query",
          "file": "src/server/api/routers/policies.ts",
          "lineNumber": 191,
          "usesModel": [
            "PolicyEffectLog",
            "Policy",
            "ActivitySchedule"
          ]
        },
        {
          "router": "policies",
          "name": "getPolicyEffectiveness",
          "type": "query",
          "file": "src/server/api/routers/policies.ts",
          "lineNumber": 204,
          "usesModel": [
            "Policy",
            "ActivitySchedule",
            "PolicyEffectLog"
          ]
        },
        {
          "router": "policies",
          "name": "getScheduledActivities",
          "type": "query",
          "file": "src/server/api/routers/policies.ts",
          "lineNumber": 307,
          "usesModel": [
            "ActivitySchedule",
            "QuickActionTemplate"
          ]
        },
        {
          "router": "policies",
          "name": "deleteActivity",
          "type": "mutation",
          "file": "src/server/api/routers/policies.ts",
          "lineNumber": 351,
          "usesModel": [
            "ActivitySchedule",
            "QuickActionTemplate"
          ]
        },
        {
          "router": "policies",
          "name": "getTemplates",
          "type": "query",
          "file": "src/server/api/routers/policies.ts",
          "lineNumber": 380,
          "usesModel": [
            "QuickActionTemplate"
          ]
        },
        {
          "router": "policies",
          "name": "deleteTemplate",
          "type": "mutation",
          "file": "src/server/api/routers/policies.ts",
          "lineNumber": 418,
          "usesModel": [
            "QuickActionTemplate"
          ]
        }
      ]
    },
    {
      "name": "notifications",
      "file": "src/server/api/routers/notifications.ts",
      "endpoints": [
        {
          "router": "notifications",
          "name": "getUserNotifications",
          "type": "query",
          "file": "src/server/api/routers/notifications.ts",
          "lineNumber": 12,
          "usesModel": [
            "User",
            "Notification",
            "Country"
          ]
        },
        {
          "router": "notifications",
          "name": "markAsRead",
          "type": "mutation",
          "file": "src/server/api/routers/notifications.ts",
          "lineNumber": 85,
          "usesModel": [
            "Notification",
            "User",
            "UserPreferences",
            "Country"
          ]
        },
        {
          "router": "notifications",
          "name": "markAllAsRead",
          "type": "mutation",
          "file": "src/server/api/routers/notifications.ts",
          "lineNumber": 125,
          "usesModel": [
            "User",
            "Notification",
            "UserPreferences",
            "Country"
          ]
        },
        {
          "router": "notifications",
          "name": "getUserPreferences",
          "type": "query",
          "file": "src/server/api/routers/notifications.ts",
          "lineNumber": 191,
          "usesModel": [
            "UserPreferences",
            "Notification"
          ]
        },
        {
          "router": "notifications",
          "name": "deleteNotification",
          "type": "mutation",
          "file": "src/server/api/routers/notifications.ts",
          "lineNumber": 298,
          "usesModel": [
            "Notification"
          ]
        },
        {
          "router": "notifications",
          "name": "getNotificationStats",
          "type": "query",
          "file": "src/server/api/routers/notifications.ts",
          "lineNumber": 316,
          "usesModel": [
            "Notification"
          ]
        }
      ]
    },
    {
      "name": "meetings",
      "file": "src/server/api/routers/meetings.ts",
      "endpoints": [
        {
          "router": "meetings",
          "name": "getMeetings",
          "type": "query",
          "file": "src/server/api/routers/meetings.ts",
          "lineNumber": 26,
          "usesModel": [
            "CabinetMeeting",
            "MeetingAttendance",
            "MeetingAgendaItem",
            "Attendances",
            "Official"
          ]
        },
        {
          "router": "meetings",
          "name": "getMeeting",
          "type": "query",
          "file": "src/server/api/routers/meetings.ts",
          "lineNumber": 43,
          "usesModel": [
            "CabinetMeeting",
            "MeetingAttendance",
            "MeetingAgendaItem",
            "Attendances",
            "Official"
          ]
        },
        {
          "router": "meetings",
          "name": "deleteMeeting",
          "type": "mutation",
          "file": "src/server/api/routers/meetings.ts",
          "lineNumber": 81,
          "usesModel": [
            "CabinetMeeting",
            "MeetingAttendance",
            "MeetingAgendaItem",
            "MeetingDecision",
            "Official"
          ]
        },
        {
          "router": "meetings",
          "name": "recordAttendance",
          "type": "mutation",
          "file": "src/server/api/routers/meetings.ts",
          "lineNumber": 93,
          "usesModel": [
            "MeetingAttendance",
            "MeetingAgendaItem",
            "MeetingDecision",
            "Official"
          ]
        },
        {
          "router": "meetings",
          "name": "getAttendance",
          "type": "query",
          "file": "src/server/api/routers/meetings.ts",
          "lineNumber": 127,
          "usesModel": [
            "MeetingAttendance",
            "MeetingAgendaItem",
            "MeetingDecision",
            "MeetingActionItem",
            "Official",
            "Meeting"
          ]
        },
        {
          "router": "meetings",
          "name": "addAgendaItem",
          "type": "mutation",
          "file": "src/server/api/routers/meetings.ts",
          "lineNumber": 142,
          "usesModel": [
            "MeetingAgendaItem",
            "MeetingDecision",
            "MeetingActionItem",
            "Meeting"
          ]
        },
        {
          "router": "meetings",
          "name": "getAgendaItems",
          "type": "query",
          "file": "src/server/api/routers/meetings.ts",
          "lineNumber": 157,
          "usesModel": [
            "MeetingAgendaItem",
            "MeetingDecision",
            "MeetingActionItem",
            "Meeting"
          ]
        },
        {
          "router": "meetings",
          "name": "deleteAgendaItem",
          "type": "mutation",
          "file": "src/server/api/routers/meetings.ts",
          "lineNumber": 186,
          "usesModel": [
            "MeetingAgendaItem",
            "MeetingDecision",
            "MeetingActionItem",
            "GovernmentOfficial",
            "Meeting"
          ]
        },
        {
          "router": "meetings",
          "name": "getDecisions",
          "type": "query",
          "file": "src/server/api/routers/meetings.ts",
          "lineNumber": 216,
          "usesModel": [
            "MeetingDecision",
            "MeetingActionItem",
            "GovernmentOfficial",
            "Meeting",
            "Department",
            "MeetingAttendances"
          ]
        },
        {
          "router": "meetings",
          "name": "updateDecision",
          "type": "mutation",
          "file": "src/server/api/routers/meetings.ts",
          "lineNumber": 226,
          "usesModel": [
            "MeetingDecision",
            "MeetingActionItem",
            "GovernmentOfficial",
            "Meeting",
            "Department",
            "MeetingAttendances"
          ]
        },
        {
          "router": "meetings",
          "name": "getActionItems",
          "type": "query",
          "file": "src/server/api/routers/meetings.ts",
          "lineNumber": 261,
          "usesModel": [
            "MeetingActionItem",
            "GovernmentOfficial",
            "Meeting",
            "Department",
            "MeetingAttendances"
          ]
        },
        {
          "router": "meetings",
          "name": "deleteActionItem",
          "type": "mutation",
          "file": "src/server/api/routers/meetings.ts",
          "lineNumber": 300,
          "usesModel": [
            "MeetingActionItem",
            "GovernmentOfficial",
            "GovernmentDepartment",
            "Department",
            "MeetingAttendances",
            "Meeting",
            "Officials"
          ]
        },
        {
          "router": "meetings",
          "name": "getOfficials",
          "type": "query",
          "file": "src/server/api/routers/meetings.ts",
          "lineNumber": 331,
          "usesModel": [
            "GovernmentOfficial",
            "GovernmentDepartment",
            "Department",
            "MeetingAttendances",
            "Meeting",
            "Officials"
          ]
        },
        {
          "router": "meetings",
          "name": "getOfficial",
          "type": "query",
          "file": "src/server/api/routers/meetings.ts",
          "lineNumber": 354,
          "usesModel": [
            "GovernmentOfficial",
            "GovernmentDepartment",
            "MeetingAttendances",
            "Meeting",
            "Officials"
          ]
        },
        {
          "router": "meetings",
          "name": "removeOfficial",
          "type": "mutation",
          "file": "src/server/api/routers/meetings.ts",
          "lineNumber": 392,
          "usesModel": [
            "GovernmentOfficial",
            "GovernmentDepartment",
            "Officials"
          ]
        },
        {
          "router": "meetings",
          "name": "getDepartments",
          "type": "query",
          "file": "src/server/api/routers/meetings.ts",
          "lineNumber": 426,
          "usesModel": [
            "GovernmentDepartment",
            "GovernmentOfficial",
            "Officials"
          ]
        },
        {
          "router": "meetings",
          "name": "updateDepartment",
          "type": "mutation",
          "file": "src/server/api/routers/meetings.ts",
          "lineNumber": 442,
          "usesModel": [
            "GovernmentDepartment",
            "GovernmentOfficial"
          ]
        },
        {
          "router": "meetings",
          "name": "deleteDepartment",
          "type": "mutation",
          "file": "src/server/api/routers/meetings.ts",
          "lineNumber": 457,
          "usesModel": [
            "GovernmentOfficial",
            "GovernmentDepartment"
          ]
        }
      ]
    },
    {
      "name": "intelligence",
      "file": "src/server/api/routers/intelligence.ts",
      "endpoints": [
        {
          "router": "intelligence",
          "name": "getFeed",
          "type": "query",
          "file": "src/server/api/routers/intelligence.ts",
          "lineNumber": 8,
          "usesModel": [
            "IntelligenceItem",
            "SystemConfig"
          ]
        },
        {
          "router": "intelligence",
          "name": "getLatestIntelligence",
          "type": "query",
          "file": "src/server/api/routers/intelligence.ts",
          "lineNumber": 20,
          "usesModel": [
            "IntelligenceItem",
            "SystemConfig"
          ]
        },
        {
          "router": "intelligence",
          "name": "initializeSampleData",
          "type": "mutation",
          "file": "src/server/api/routers/intelligence.ts",
          "lineNumber": 112,
          "usesModel": [
            "IntelligenceItem",
            "IntelligenceBriefing",
            "VitalitySnapshot",
            "IntelligenceRecommendation",
            "Recommendations"
          ]
        },
        {
          "router": "intelligence",
          "name": "getForCountry",
          "type": "query",
          "file": "src/server/api/routers/intelligence.ts",
          "lineNumber": 218,
          "usesModel": [
            "IntelligenceBriefing",
            "VitalitySnapshot",
            "IntelligenceRecommendation",
            "Recommendations"
          ]
        },
        {
          "router": "intelligence",
          "name": "getVitalitySnapshots",
          "type": "query",
          "file": "src/server/api/routers/intelligence.ts",
          "lineNumber": 244,
          "usesModel": [
            "VitalitySnapshot",
            "IntelligenceRecommendation"
          ]
        },
        {
          "router": "intelligence",
          "name": "getRecommendations",
          "type": "query",
          "file": "src/server/api/routers/intelligence.ts",
          "lineNumber": 257,
          "usesModel": [
            "IntelligenceRecommendation"
          ]
        },
        {
          "router": "intelligence",
          "name": "implementRecommendation",
          "type": "mutation",
          "file": "src/server/api/routers/intelligence.ts",
          "lineNumber": 274,
          "usesModel": [
            "IntelligenceRecommendation"
          ]
        },
        {
          "router": "intelligence",
          "name": "recalculateForCountry",
          "type": "mutation",
          "file": "src/server/api/routers/intelligence.ts",
          "lineNumber": 287,
          "usesModel": []
        },
        {
          "router": "intelligence",
          "name": "recalculateAll",
          "type": "mutation",
          "file": "src/server/api/routers/intelligence.ts",
          "lineNumber": 295,
          "usesModel": []
        }
      ]
    },
    {
      "name": "government",
      "file": "src/server/api/routers/government.ts",
      "endpoints": [
        {
          "router": "government",
          "name": "getByCountryId",
          "type": "query",
          "file": "src/server/api/routers/government.ts",
          "lineNumber": 94,
          "usesModel": [
            "GovernmentStructure",
            "Departments",
            "SubDepartments",
            "Department",
            "BudgetAllocations"
          ]
        },
        {
          "router": "government",
          "name": "create",
          "type": "mutation",
          "file": "src/server/api/routers/government.ts",
          "lineNumber": 129,
          "usesModel": [
            "GovernmentStructure"
          ]
        },
        {
          "router": "government",
          "name": "update",
          "type": "mutation",
          "file": "src/server/api/routers/government.ts",
          "lineNumber": 252,
          "usesModel": [
            "GovernmentStructure",
            "Departments",
            "BudgetAllocations",
            "Department"
          ]
        },
        {
          "router": "government",
          "name": "delete",
          "type": "mutation",
          "file": "src/server/api/routers/government.ts",
          "lineNumber": 369,
          "usesModel": [
            "GovernmentStructure",
            "RevenueSource",
            "BudgetAllocation",
            "SubBudgetCategory",
            "Departments",
            "BudgetAllocations",
            "Department"
          ]
        },
        {
          "router": "government",
          "name": "getBudgetSummary",
          "type": "query",
          "file": "src/server/api/routers/government.ts",
          "lineNumber": 380,
          "usesModel": [
            "GovernmentStructure",
            "RevenueSource",
            "BudgetAllocation",
            "SubBudgetCategory",
            "Departments",
            "BudgetAllocations",
            "Department"
          ]
        },
        {
          "router": "government",
          "name": "getRevenueSummary",
          "type": "query",
          "file": "src/server/api/routers/government.ts",
          "lineNumber": 437,
          "usesModel": [
            "RevenueSource",
            "BudgetAllocation",
            "SubBudgetCategory",
            "GovernmentStructure",
            "GovernmentComponent",
            "Departments",
            "SubDepartments",
            "Synergies",
            "SecondaryComponent",
            "PrimaryComponent",
            "ConflictsWith"
          ]
        },
        {
          "router": "government",
          "name": "addSubBudget",
          "type": "mutation",
          "file": "src/server/api/routers/government.ts",
          "lineNumber": 505,
          "usesModel": [
            "SubBudgetCategory",
            "GovernmentStructure",
            "GovernmentComponent",
            "Departments",
            "SubDepartments",
            "Synergies",
            "SecondaryComponent",
            "PrimaryComponent",
            "ConflictsWith"
          ]
        },
        {
          "router": "government",
          "name": "getDepartmentHierarchy",
          "type": "query",
          "file": "src/server/api/routers/government.ts",
          "lineNumber": 522,
          "usesModel": [
            "GovernmentStructure",
            "GovernmentComponent",
            "Departments",
            "SubDepartments",
            "Synergies",
            "SecondaryComponent",
            "PrimaryComponent",
            "ConflictsWith"
          ]
        },
        {
          "router": "government",
          "name": "getComponents",
          "type": "query",
          "file": "src/server/api/routers/government.ts",
          "lineNumber": 566,
          "usesModel": [
            "GovernmentComponent",
            "Synergies",
            "SecondaryComponent",
            "PrimaryComponent",
            "ConflictsWith"
          ]
        },
        {
          "router": "government",
          "name": "addComponent",
          "type": "mutation",
          "file": "src/server/api/routers/government.ts",
          "lineNumber": 590,
          "usesModel": [
            "GovernmentComponent",
            "Synergies",
            "SecondaryComponent",
            "PrimaryComponent",
            "ConflictsWith"
          ]
        },
        {
          "router": "government",
          "name": "removeComponent",
          "type": "mutation",
          "file": "src/server/api/routers/government.ts",
          "lineNumber": 624,
          "usesModel": [
            "GovernmentComponent",
            "Synergies",
            "SecondaryComponent",
            "PrimaryComponent",
            "ConflictsWith"
          ]
        },
        {
          "router": "government",
          "name": "getEffectivenesAnalysis",
          "type": "query",
          "file": "src/server/api/routers/government.ts",
          "lineNumber": 641,
          "usesModel": [
            "GovernmentComponent",
            "Synergies",
            "SecondaryComponent",
            "PrimaryComponent",
            "ConflictsWith"
          ]
        }
      ]
    },
    {
      "name": "formulas",
      "file": "src/server/api/routers/formulas.ts",
      "endpoints": [
        {
          "router": "formulas",
          "name": "getAll",
          "type": "query",
          "file": "src/server/api/routers/formulas.ts",
          "lineNumber": 6,
          "usesModel": []
        },
        {
          "router": "formulas",
          "name": "getById",
          "type": "query",
          "file": "src/server/api/routers/formulas.ts",
          "lineNumber": 57,
          "usesModel": []
        },
        {
          "router": "formulas",
          "name": "testFormula",
          "type": "mutation",
          "file": "src/server/api/routers/formulas.ts",
          "lineNumber": 82,
          "usesModel": []
        },
        {
          "router": "formulas",
          "name": "getSystemMetrics",
          "type": "query",
          "file": "src/server/api/routers/formulas.ts",
          "lineNumber": 111,
          "usesModel": []
        },
        {
          "router": "formulas",
          "name": "getExecutionHistory",
          "type": "query",
          "file": "src/server/api/routers/formulas.ts",
          "lineNumber": 142,
          "usesModel": []
        }
      ]
    },
    {
      "name": "economics",
      "file": "src/server/api/routers/economics.ts",
      "endpoints": [
        {
          "router": "economics",
          "name": "getEconomicProfile",
          "type": "query",
          "file": "src/server/api/routers/economics.ts",
          "lineNumber": 12,
          "usesModel": [
            "EconomicProfile",
            "User",
            "LaborMarket",
            "FiscalSystem",
            "IncomeDistribution"
          ]
        },
        {
          "router": "economics",
          "name": "getLaborMarket",
          "type": "query",
          "file": "src/server/api/routers/economics.ts",
          "lineNumber": 60,
          "usesModel": [
            "LaborMarket",
            "User",
            "FiscalSystem",
            "IncomeDistribution",
            "GovernmentBudget"
          ]
        },
        {
          "router": "economics",
          "name": "getFiscalSystem",
          "type": "query",
          "file": "src/server/api/routers/economics.ts",
          "lineNumber": 106,
          "usesModel": [
            "FiscalSystem",
            "User",
            "IncomeDistribution",
            "GovernmentBudget",
            "Demographics"
          ]
        },
        {
          "router": "economics",
          "name": "getIncomeDistribution",
          "type": "query",
          "file": "src/server/api/routers/economics.ts",
          "lineNumber": 155,
          "usesModel": [
            "IncomeDistribution",
            "User",
            "GovernmentBudget",
            "Demographics"
          ]
        },
        {
          "router": "economics",
          "name": "getGovernmentBudget",
          "type": "query",
          "file": "src/server/api/routers/economics.ts",
          "lineNumber": 198,
          "usesModel": [
            "GovernmentBudget",
            "User",
            "Demographics"
          ]
        },
        {
          "router": "economics",
          "name": "updateGovernmentBudget",
          "type": "mutation",
          "file": "src/server/api/routers/economics.ts",
          "lineNumber": 208,
          "usesModel": [
            "User",
            "GovernmentBudget",
            "Demographics"
          ]
        },
        {
          "router": "economics",
          "name": "getDemographics",
          "type": "query",
          "file": "src/server/api/routers/economics.ts",
          "lineNumber": 240,
          "usesModel": [
            "Demographics",
            "User"
          ]
        }
      ]
    },
    {
      "name": "eci",
      "file": "src/server/api/routers/eci.ts",
      "endpoints": [
        {
          "router": "eci",
          "name": "createCabinetMeeting",
          "type": "mutation",
          "file": "src/server/api/routers/eci.ts",
          "lineNumber": 64,
          "usesModel": [
            "User",
            "SystemConfig",
            "EconomicModel",
            "PolicyEffect",
            "Country"
          ]
        },
        {
          "router": "eci",
          "name": "getCabinetMeetings",
          "type": "query",
          "file": "src/server/api/routers/eci.ts",
          "lineNumber": 103,
          "usesModel": [
            "User",
            "SystemConfig",
            "EconomicModel",
            "PolicyEffect",
            "Country"
          ]
        },
        {
          "router": "eci",
          "name": "getEconomicPolicies",
          "type": "query",
          "file": "src/server/api/routers/eci.ts",
          "lineNumber": 207,
          "usesModel": [
            "User",
            "SystemConfig",
            "Country"
          ]
        },
        {
          "router": "eci",
          "name": "getSecurityThreats",
          "type": "query",
          "file": "src/server/api/routers/eci.ts",
          "lineNumber": 271,
          "usesModel": [
            "User",
            "SystemConfig",
            "HistoricalDataPoint",
            "Country"
          ]
        },
        {
          "router": "eci",
          "name": "getSecurityDashboard",
          "type": "query",
          "file": "src/server/api/routers/eci.ts",
          "lineNumber": 296,
          "usesModel": [
            "User",
            "SystemConfig",
            "HistoricalDataPoint",
            "Country"
          ]
        },
        {
          "router": "eci",
          "name": "getStrategicPlans",
          "type": "query",
          "file": "src/server/api/routers/eci.ts",
          "lineNumber": 368,
          "usesModel": [
            "User",
            "SystemConfig",
            "HistoricalDataPoint",
            "Country"
          ]
        },
        {
          "router": "eci",
          "name": "getAdvancedAnalytics",
          "type": "query",
          "file": "src/server/api/routers/eci.ts",
          "lineNumber": 394,
          "usesModel": [
            "User",
            "HistoricalDataPoint",
            "Country",
            "SystemConfig",
            "EconomicModel"
          ]
        },
        {
          "router": "eci",
          "name": "getAIRecommendations",
          "type": "query",
          "file": "src/server/api/routers/eci.ts",
          "lineNumber": 431,
          "usesModel": [
            "User",
            "HistoricalDataPoint",
            "Country",
            "SystemConfig",
            "EconomicModel"
          ]
        },
        {
          "router": "eci",
          "name": "getPredictiveModels",
          "type": "query",
          "file": "src/server/api/routers/eci.ts",
          "lineNumber": 461,
          "usesModel": [
            "User",
            "Country",
            "HistoricalDataPoint",
            "SystemConfig",
            "DmInputs",
            "EconomicModel"
          ]
        },
        {
          "router": "eci",
          "name": "getRealTimeMetrics",
          "type": "query",
          "file": "src/server/api/routers/eci.ts",
          "lineNumber": 497,
          "usesModel": [
            "User",
            "SystemConfig",
            "Country",
            "DmInputs",
            "EconomicModel"
          ]
        },
        {
          "router": "eci",
          "name": "getQuickActions",
          "type": "query",
          "file": "src/server/api/routers/eci.ts",
          "lineNumber": 608,
          "usesModel": [
            "User",
            "Country"
          ]
        },
        {
          "router": "eci",
          "name": "getPolicyEffectiveness",
          "type": "query",
          "file": "src/server/api/routers/eci.ts",
          "lineNumber": 690,
          "usesModel": [
            "User",
            "SystemConfig",
            "Country"
          ]
        }
      ]
    },
    {
      "name": "diplomatic",
      "file": "src/server/api/routers/diplomatic.ts",
      "endpoints": [
        {
          "router": "diplomatic",
          "name": "getRelationships",
          "type": "query",
          "file": "src/server/api/routers/diplomatic.ts",
          "lineNumber": 8,
          "usesModel": [
            "DiplomaticRelation",
            "Embassy"
          ]
        },
        {
          "router": "diplomatic",
          "name": "getRecentChanges",
          "type": "query",
          "file": "src/server/api/routers/diplomatic.ts",
          "lineNumber": 94,
          "usesModel": [
            "DiplomaticRelation",
            "Embassy",
            "DiplomaticChannel",
            "Participants",
            "Messages"
          ]
        },
        {
          "router": "diplomatic",
          "name": "updateRelationship",
          "type": "mutation",
          "file": "src/server/api/routers/diplomatic.ts",
          "lineNumber": 124,
          "usesModel": [
            "DiplomaticRelation",
            "Embassy",
            "DiplomaticChannel",
            "Participants",
            "Messages"
          ]
        },
        {
          "router": "diplomatic",
          "name": "getEmbassies",
          "type": "query",
          "file": "src/server/api/routers/diplomatic.ts",
          "lineNumber": 149,
          "usesModel": [
            "Embassy",
            "DiplomaticChannel",
            "DiplomaticMessage",
            "Participants",
            "Messages"
          ]
        },
        {
          "router": "diplomatic",
          "name": "establishEmbassy",
          "type": "mutation",
          "file": "src/server/api/routers/diplomatic.ts",
          "lineNumber": 187,
          "usesModel": [
            "Embassy",
            "DiplomaticChannel",
            "DiplomaticMessage",
            "Participants",
            "Messages"
          ]
        },
        {
          "router": "diplomatic",
          "name": "getChannels",
          "type": "query",
          "file": "src/server/api/routers/diplomatic.ts",
          "lineNumber": 209,
          "usesModel": [
            "DiplomaticChannel",
            "DiplomaticMessage",
            "Participants",
            "Messages"
          ]
        },
        {
          "router": "diplomatic",
          "name": "getChannelMessages",
          "type": "query",
          "file": "src/server/api/routers/diplomatic.ts",
          "lineNumber": 266,
          "usesModel": [
            "DiplomaticMessage",
            "DiplomaticChannel",
            "CulturalExchange",
            "ParticipatingCountries"
          ]
        },
        {
          "router": "diplomatic",
          "name": "getCulturalExchanges",
          "type": "query",
          "file": "src/server/api/routers/diplomatic.ts",
          "lineNumber": 352,
          "usesModel": [
            "CulturalExchange",
            "CulturalExchangeParticipant",
            "Embassy",
            "ParticipatingCountries",
            "Missions"
          ]
        },
        {
          "router": "diplomatic",
          "name": "joinCulturalExchange",
          "type": "mutation",
          "file": "src/server/api/routers/diplomatic.ts",
          "lineNumber": 454,
          "usesModel": [
            "CulturalExchangeParticipant",
            "CulturalExchange",
            "Embassy",
            "DiplomaticRelation",
            "Missions"
          ]
        },
        {
          "router": "diplomatic",
          "name": "getEmbassyDetails",
          "type": "query",
          "file": "src/server/api/routers/diplomatic.ts",
          "lineNumber": 489,
          "usesModel": [
            "Embassy",
            "DiplomaticRelation",
            "EmbassyUpgrade",
            "Missions"
          ]
        },
        {
          "router": "diplomatic",
          "name": "calculateEstablishmentCost",
          "type": "query",
          "file": "src/server/api/routers/diplomatic.ts",
          "lineNumber": 520,
          "usesModel": [
            "DiplomaticRelation",
            "Embassy",
            "EmbassyUpgrade",
            "Upgrades"
          ]
        },
        {
          "router": "diplomatic",
          "name": "upgradeEmbassy",
          "type": "mutation",
          "file": "src/server/api/routers/diplomatic.ts",
          "lineNumber": 570,
          "usesModel": [
            "Embassy",
            "EmbassyUpgrade",
            "Upgrades"
          ]
        },
        {
          "router": "diplomatic",
          "name": "getAvailableUpgrades",
          "type": "query",
          "file": "src/server/api/routers/diplomatic.ts",
          "lineNumber": 634,
          "usesModel": [
            "Embassy",
            "EmbassyMission",
            "Upgrades"
          ]
        },
        {
          "router": "diplomatic",
          "name": "getAvailableMissions",
          "type": "query",
          "file": "src/server/api/routers/diplomatic.ts",
          "lineNumber": 691,
          "usesModel": [
            "Embassy",
            "EmbassyMission",
            "DiplomaticEvent"
          ]
        },
        {
          "router": "diplomatic",
          "name": "startMission",
          "type": "mutation",
          "file": "src/server/api/routers/diplomatic.ts",
          "lineNumber": 705,
          "usesModel": [
            "Embassy",
            "EmbassyMission",
            "DiplomaticEvent"
          ]
        },
        {
          "router": "diplomatic",
          "name": "completeMission",
          "type": "mutation",
          "file": "src/server/api/routers/diplomatic.ts",
          "lineNumber": 761,
          "usesModel": [
            "EmbassyMission",
            "Embassy",
            "DiplomaticEvent",
            "Missions"
          ]
        },
        {
          "router": "diplomatic",
          "name": "payMaintenance",
          "type": "mutation",
          "file": "src/server/api/routers/diplomatic.ts",
          "lineNumber": 840,
          "usesModel": [
            "Embassy",
            "DiplomaticRelation",
            "DiplomaticEvent",
            "Missions"
          ]
        },
        {
          "router": "diplomatic",
          "name": "allocateBudget",
          "type": "mutation",
          "file": "src/server/api/routers/diplomatic.ts",
          "lineNumber": 864,
          "usesModel": [
            "Embassy",
            "DiplomaticRelation",
            "DiplomaticEvent",
            "Country",
            "Missions",
            "Embassies"
          ]
        },
        {
          "router": "diplomatic",
          "name": "getInfluenceBreakdown",
          "type": "query",
          "file": "src/server/api/routers/diplomatic.ts",
          "lineNumber": 881,
          "usesModel": [
            "Embassy",
            "DiplomaticRelation",
            "DiplomaticEvent",
            "Country",
            "Missions",
            "Embassies"
          ]
        },
        {
          "router": "diplomatic",
          "name": "updateRelationshipStrength",
          "type": "mutation",
          "file": "src/server/api/routers/diplomatic.ts",
          "lineNumber": 925,
          "usesModel": [
            "DiplomaticRelation",
            "DiplomaticEvent",
            "Country",
            "CountryFollow",
            "Embassies"
          ]
        },
        {
          "router": "diplomatic",
          "name": "getInfluenceLeaderboard",
          "type": "query",
          "file": "src/server/api/routers/diplomatic.ts",
          "lineNumber": 996,
          "usesModel": [
            "Country",
            "CountryFollow",
            "Embassies"
          ]
        },
        {
          "router": "diplomatic",
          "name": "getFollowStatus",
          "type": "query",
          "file": "src/server/api/routers/diplomatic.ts",
          "lineNumber": 1032,
          "usesModel": [
            "CountryFollow"
          ]
        },
        {
          "router": "diplomatic",
          "name": "followCountry",
          "type": "mutation",
          "file": "src/server/api/routers/diplomatic.ts",
          "lineNumber": 1053,
          "usesModel": [
            "CountryFollow"
          ]
        },
        {
          "router": "diplomatic",
          "name": "unfollowCountry",
          "type": "mutation",
          "file": "src/server/api/routers/diplomatic.ts",
          "lineNumber": 1070,
          "usesModel": [
            "CountryFollow"
          ]
        }
      ]
    },
    {
      "name": "atomicGovernment",
      "file": "src/server/api/routers/atomicGovernment.ts",
      "endpoints": [
        {
          "router": "atomicGovernment",
          "name": "getComponents",
          "type": "query",
          "file": "src/server/api/routers/atomicGovernment.ts",
          "lineNumber": 7,
          "usesModel": [
            "GovernmentComponent",
            "ComponentSynergy",
            "PrimaryComponent"
          ]
        },
        {
          "router": "atomicGovernment",
          "name": "removeComponent",
          "type": "mutation",
          "file": "src/server/api/routers/atomicGovernment.ts",
          "lineNumber": 80,
          "usesModel": [
            "GovernmentComponent",
            "ComponentSynergy",
            "PrimaryComponent"
          ]
        },
        {
          "router": "atomicGovernment",
          "name": "getSynergies",
          "type": "query",
          "file": "src/server/api/routers/atomicGovernment.ts",
          "lineNumber": 90,
          "usesModel": [
            "ComponentSynergy",
            "GovernmentComponent",
            "BudgetScenario",
            "PrimaryComponent"
          ]
        },
        {
          "router": "atomicGovernment",
          "name": "createSynergy",
          "type": "mutation",
          "file": "src/server/api/routers/atomicGovernment.ts",
          "lineNumber": 105,
          "usesModel": [
            "ComponentSynergy",
            "GovernmentComponent",
            "BudgetScenario",
            "PrimaryComponent",
            "Categories"
          ]
        },
        {
          "router": "atomicGovernment",
          "name": "getEffectivenessAnalysis",
          "type": "query",
          "file": "src/server/api/routers/atomicGovernment.ts",
          "lineNumber": 141,
          "usesModel": [
            "GovernmentComponent",
            "ComponentSynergy",
            "BudgetScenario",
            "BudgetScenarioCategory",
            "PrimaryComponent",
            "Categories"
          ]
        },
        {
          "router": "atomicGovernment",
          "name": "getBudgetScenarios",
          "type": "query",
          "file": "src/server/api/routers/atomicGovernment.ts",
          "lineNumber": 235,
          "usesModel": [
            "BudgetScenario",
            "BudgetScenarioCategory",
            "FiscalPolicy",
            "Categories"
          ]
        },
        {
          "router": "atomicGovernment",
          "name": "getFiscalPolicies",
          "type": "query",
          "file": "src/server/api/routers/atomicGovernment.ts",
          "lineNumber": 290,
          "usesModel": [
            "FiscalPolicy"
          ]
        },
        {
          "router": "atomicGovernment",
          "name": "applyFiscalPolicy",
          "type": "mutation",
          "file": "src/server/api/routers/atomicGovernment.ts",
          "lineNumber": 325,
          "usesModel": [
            "FiscalPolicy"
          ]
        }
      ]
    },
    {
      "name": "archetypes",
      "file": "src/server/api/routers/archetypes.ts",
      "endpoints": [
        {
          "router": "archetypes",
          "name": "getCategories",
          "type": "query",
          "file": "src/server/api/routers/archetypes.ts",
          "lineNumber": 41,
          "usesModel": [
            "ArchetypeCategory",
            "Archetype",
            "UserArchetypeSelection",
            "CountryArchetypeMatch",
            "Archetypes",
            "Category"
          ]
        },
        {
          "router": "archetypes",
          "name": "getSelectableArchetypes",
          "type": "query",
          "file": "src/server/api/routers/archetypes.ts",
          "lineNumber": 64,
          "usesModel": [
            "Archetype",
            "UserArchetypeSelection",
            "CountryArchetypeMatch",
            "Country",
            "Category"
          ]
        },
        {
          "router": "archetypes",
          "name": "getArchetypesByCategory",
          "type": "query",
          "file": "src/server/api/routers/archetypes.ts",
          "lineNumber": 79,
          "usesModel": [
            "Archetype",
            "UserArchetypeSelection",
            "CountryArchetypeMatch",
            "Country",
            "Category"
          ]
        },
        {
          "router": "archetypes",
          "name": "getUserArchetypeSelections",
          "type": "query",
          "file": "src/server/api/routers/archetypes.ts",
          "lineNumber": 101,
          "usesModel": [
            "UserArchetypeSelection",
            "CountryArchetypeMatch",
            "Country",
            "Archetype",
            "Category"
          ]
        },
        {
          "router": "archetypes",
          "name": "updateUserArchetypeSelections",
          "type": "mutation",
          "file": "src/server/api/routers/archetypes.ts",
          "lineNumber": 120,
          "usesModel": [
            "UserArchetypeSelection",
            "CountryArchetypeMatch",
            "Country",
            "Archetype",
            "Category"
          ]
        },
        {
          "router": "archetypes",
          "name": "getCountriesByArchetypes",
          "type": "query",
          "file": "src/server/api/routers/archetypes.ts",
          "lineNumber": 168,
          "usesModel": [
            "CountryArchetypeMatch",
            "Country",
            "Archetype"
          ]
        },
        {
          "router": "archetypes",
          "name": "recalculateArchetypeMatches",
          "type": "mutation",
          "file": "src/server/api/routers/archetypes.ts",
          "lineNumber": 228,
          "usesModel": [
            "Country",
            "Archetype",
            "CountryArchetypeMatch",
            "ArchetypeCategory",
            "Category"
          ]
        },
        {
          "router": "archetypes",
          "name": "createArchetype",
          "type": "mutation",
          "file": "src/server/api/routers/archetypes.ts",
          "lineNumber": 312,
          "usesModel": [
            "Archetype",
            "ArchetypeCategory",
            "Category"
          ]
        },
        {
          "router": "archetypes",
          "name": "updateArchetype",
          "type": "mutation",
          "file": "src/server/api/routers/archetypes.ts",
          "lineNumber": 335,
          "usesModel": [
            "Archetype",
            "ArchetypeCategory",
            "Category"
          ]
        },
        {
          "router": "archetypes",
          "name": "initializeArchetypeSystem",
          "type": "mutation",
          "file": "src/server/api/routers/archetypes.ts",
          "lineNumber": 362,
          "usesModel": [
            "ArchetypeCategory",
            "Archetype"
          ]
        }
      ]
    },
    {
      "name": "admin",
      "file": "src/server/api/routers/admin.ts",
      "endpoints": [
        {
          "router": "admin",
          "name": "getCalculationFormulas",
          "type": "query",
          "file": "src/server/api/routers/admin.ts",
          "lineNumber": 31,
          "usesModel": [
            "Country",
            "User",
            "CrisisEvent",
            "DmInputs",
            "CalculationLog",
            "SystemConfig"
          ]
        },
        {
          "router": "admin",
          "name": "getGlobalStats",
          "type": "query",
          "file": "src/server/api/routers/admin.ts",
          "lineNumber": 58,
          "usesModel": [
            "Country",
            "User",
            "CrisisEvent",
            "DmInputs",
            "CalculationLog",
            "SystemConfig"
          ]
        },
        {
          "router": "admin",
          "name": "getSystemStatus",
          "type": "query",
          "file": "src/server/api/routers/admin.ts",
          "lineNumber": 90,
          "usesModel": [
            "Country",
            "DmInputs",
            "CalculationLog",
            "SystemConfig"
          ]
        },
        {
          "router": "admin",
          "name": "getBotStatus",
          "type": "query",
          "file": "src/server/api/routers/admin.ts",
          "lineNumber": 133,
          "usesModel": [
            "SystemConfig"
          ]
        },
        {
          "router": "admin",
          "name": "getConfig",
          "type": "query",
          "file": "src/server/api/routers/admin.ts",
          "lineNumber": 175,
          "usesModel": [
            "SystemConfig"
          ]
        },
        {
          "router": "admin",
          "name": "saveConfig",
          "type": "mutation",
          "file": "src/server/api/routers/admin.ts",
          "lineNumber": 210,
          "usesModel": [
            "SystemConfig",
            "CalculationLog"
          ]
        },
        {
          "router": "admin",
          "name": "setCustomTime",
          "type": "mutation",
          "file": "src/server/api/routers/admin.ts",
          "lineNumber": 246,
          "usesModel": [
            "CalculationLog",
            "Country"
          ]
        },
        {
          "router": "admin",
          "name": "syncBot",
          "type": "mutation",
          "file": "src/server/api/routers/admin.ts",
          "lineNumber": 282,
          "usesModel": [
            "CalculationLog",
            "Country"
          ]
        },
        {
          "router": "admin",
          "name": "pauseBot",
          "type": "mutation",
          "file": "src/server/api/routers/admin.ts",
          "lineNumber": 293,
          "usesModel": [
            "CalculationLog",
            "Country"
          ]
        },
        {
          "router": "admin",
          "name": "resumeBot",
          "type": "mutation",
          "file": "src/server/api/routers/admin.ts",
          "lineNumber": 304,
          "usesModel": [
            "CalculationLog",
            "Country"
          ]
        },
        {
          "router": "admin",
          "name": "clearBotOverrides",
          "type": "mutation",
          "file": "src/server/api/routers/admin.ts",
          "lineNumber": 315,
          "usesModel": [
            "CalculationLog",
            "Country"
          ]
        },
        {
          "router": "admin",
          "name": "getCalculationLogs",
          "type": "query",
          "file": "src/server/api/routers/admin.ts",
          "lineNumber": 327,
          "usesModel": [
            "CalculationLog",
            "Country"
          ]
        },
        {
          "router": "admin",
          "name": "analyzeImport",
          "type": "mutation",
          "file": "src/server/api/routers/admin.ts",
          "lineNumber": 360,
          "usesModel": [
            "Country"
          ]
        },
        {
          "router": "admin",
          "name": "importRosterData",
          "type": "mutation",
          "file": "src/server/api/routers/admin.ts",
          "lineNumber": 507,
          "usesModel": [
            "Country",
            "CalculationLog"
          ]
        },
        {
          "router": "admin",
          "name": "syncEpochWithData",
          "type": "mutation",
          "file": "src/server/api/routers/admin.ts",
          "lineNumber": 674,
          "usesModel": [
            "Country",
            "CalculationLog",
            "DmInputs"
          ]
        },
        {
          "router": "admin",
          "name": "forceRecalculation",
          "type": "mutation",
          "file": "src/server/api/routers/admin.ts",
          "lineNumber": 727,
          "usesModel": [
            "Country",
            "CalculationLog",
            "User",
            "DmInputs"
          ]
        },
        {
          "router": "admin",
          "name": "getSystemHealth",
          "type": "query",
          "file": "src/server/api/routers/admin.ts",
          "lineNumber": 825,
          "usesModel": [
            "Country",
            "CalculationLog",
            "User"
          ]
        },
        {
          "router": "admin",
          "name": "getUserCountry",
          "type": "query",
          "file": "src/server/api/routers/admin.ts",
          "lineNumber": 870,
          "usesModel": [
            "User",
            "Country",
            "SystemConfig"
          ]
        },
        {
          "router": "admin",
          "name": "setUserCountry",
          "type": "mutation",
          "file": "src/server/api/routers/admin.ts",
          "lineNumber": 881,
          "usesModel": [
            "User",
            "Country",
            "SystemConfig"
          ]
        },
        {
          "router": "admin",
          "name": "createUserIfNotExists",
          "type": "mutation",
          "file": "src/server/api/routers/admin.ts",
          "lineNumber": 893,
          "usesModel": [
            "User",
            "Country",
            "SystemConfig"
          ]
        },
        {
          "router": "admin",
          "name": "syncWithBot",
          "type": "mutation",
          "file": "src/server/api/routers/admin.ts",
          "lineNumber": 906,
          "usesModel": [
            "User",
            "Country",
            "SystemConfig"
          ]
        },
        {
          "router": "admin",
          "name": "listUsersWithCountries",
          "type": "query",
          "file": "src/server/api/routers/admin.ts",
          "lineNumber": 921,
          "usesModel": [
            "User",
            "Country",
            "SystemConfig"
          ]
        },
        {
          "router": "admin",
          "name": "listCountriesWithUsers",
          "type": "query",
          "file": "src/server/api/routers/admin.ts",
          "lineNumber": 936,
          "usesModel": [
            "Country",
            "User",
            "SystemConfig"
          ]
        },
        {
          "router": "admin",
          "name": "assignUserToCountry",
          "type": "mutation",
          "file": "src/server/api/routers/admin.ts",
          "lineNumber": 951,
          "usesModel": [
            "User",
            "SystemConfig"
          ]
        },
        {
          "router": "admin",
          "name": "unassignUserFromCountry",
          "type": "query",
          "file": "src/server/api/routers/admin.ts",
          "lineNumber": 968,
          "usesModel": [
            "User",
            "SystemConfig"
          ]
        },
        {
          "router": "admin",
          "name": "getNavigationSettings",
          "type": "query",
          "file": "src/server/api/routers/admin.ts",
          "lineNumber": 976,
          "usesModel": [
            "SystemConfig"
          ]
        },
        {
          "router": "admin",
          "name": "updateNavigationSettings",
          "type": "mutation",
          "file": "src/server/api/routers/admin.ts",
          "lineNumber": 1009,
          "usesModel": [
            "SystemConfig"
          ]
        }
      ]
    },
    {
      "name": "activities",
      "file": "src/server/api/routers/activities.ts",
      "endpoints": [
        {
          "router": "activities",
          "name": "testMutation",
          "type": "mutation",
          "file": "src/server/api/routers/activities.ts",
          "lineNumber": 50,
          "usesModel": [
            "ActivityFeed",
            "User",
            "Country",
            "UserConnection"
          ]
        },
        {
          "router": "activities",
          "name": "getGlobalFeed",
          "type": "query",
          "file": "src/server/api/routers/activities.ts",
          "lineNumber": 61,
          "usesModel": [
            "ActivityFeed",
            "User",
            "Country",
            "UserConnection"
          ]
        },
        {
          "router": "activities",
          "name": "getUserFeed",
          "type": "query",
          "file": "src/server/api/routers/activities.ts",
          "lineNumber": 187,
          "usesModel": [
            "UserConnection",
            "ActivityFeed",
            "ActivityLike"
          ]
        },
        {
          "router": "activities",
          "name": "createActivity",
          "type": "mutation",
          "file": "src/server/api/routers/activities.ts",
          "lineNumber": 255,
          "usesModel": [
            "ActivityFeed",
            "ActivityLike",
            "ActivityShare",
            "User",
            "ActivityLikes",
            "Country"
          ]
        },
        {
          "router": "activities",
          "name": "engageWithActivity",
          "type": "mutation",
          "file": "src/server/api/routers/activities.ts",
          "lineNumber": 282,
          "usesModel": [
            "ActivityLike",
            "ActivityFeed",
            "ActivityShare",
            "User",
            "ActivityLikes",
            "Country"
          ]
        },
        {
          "router": "activities",
          "name": "addComment",
          "type": "mutation",
          "file": "src/server/api/routers/activities.ts",
          "lineNumber": 439,
          "usesModel": [
            "ActivityComment",
            "ActivityLike",
            "ActivityShare",
            "ActivityFeed"
          ]
        },
        {
          "router": "activities",
          "name": "getComments",
          "type": "query",
          "file": "src/server/api/routers/activities.ts",
          "lineNumber": 469,
          "usesModel": [
            "ActivityComment",
            "ActivityLike",
            "ActivityShare",
            "ActivityFeed"
          ]
        },
        {
          "router": "activities",
          "name": "getUserEngagement",
          "type": "query",
          "file": "src/server/api/routers/activities.ts",
          "lineNumber": 499,
          "usesModel": [
            "ActivityLike",
            "ActivityShare",
            "ActivityFeed"
          ]
        },
        {
          "router": "activities",
          "name": "getTrendingTopics",
          "type": "query",
          "file": "src/server/api/routers/activities.ts",
          "lineNumber": 545,
          "usesModel": [
            "ActivityFeed"
          ]
        },
        {
          "router": "activities",
          "name": "getActivityStats",
          "type": "query",
          "file": "src/server/api/routers/activities.ts",
          "lineNumber": 631,
          "usesModel": [
            "ActivityFeed"
          ]
        }
      ]
    },
    {
      "name": "achievements",
      "file": "src/server/api/routers/achievements.ts",
      "endpoints": [
        {
          "router": "achievements",
          "name": "getRecentByCountry",
          "type": "query",
          "file": "src/server/api/routers/achievements.ts",
          "lineNumber": 8,
          "usesModel": [
            "User",
            "UserAchievement",
            "Country"
          ]
        },
        {
          "router": "achievements",
          "name": "getAllByCountry",
          "type": "query",
          "file": "src/server/api/routers/achievements.ts",
          "lineNumber": 48,
          "usesModel": [
            "User",
            "UserAchievement",
            "Country"
          ]
        },
        {
          "router": "achievements",
          "name": "getLeaderboard",
          "type": "query",
          "file": "src/server/api/routers/achievements.ts",
          "lineNumber": 87,
          "usesModel": [
            "Country",
            "UserAchievement",
            "User"
          ]
        }
      ]
    }
  ],
  "coverage": [
    {
      "model": "Post",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "thinkpages.getAccountsByCountry (query)",
        "thinkpages.getAccountCountsByType (query)",
        "thinkpages.createPost (mutation)",
        "thinkpages.addReaction (mutation)",
        "thinkpages.removeReaction (mutation)"
      ],
      "missingOperations": [
        "UPDATE",
        "LIST"
      ]
    },
    {
      "model": "Country",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": true,
      "endpoints": [
        "wikiImporter.previewImport (query)",
        "wikiImporter.importCountry (mutation)",
        "users.getProfile (query)",
        "users.getProfileById (query)",
        "users.linkCountry (mutation)",
        "users.unlinkCountry (mutation)",
        "users.getLinkedCountry (query)",
        "users.getSocialData (query)",
        "users.getActiveUsers (query)",
        "users.getCurrentUserWithRole (query)",
        "users.createUserRecord (mutation)",
        "users.removeAdminFavorite (mutation)",
        "users.reorderAdminFavorites (mutation)",
        "users.getUserWithRole (query)",
        "users.getMembershipStatus (query)",
        "users.updateMembershipTier (mutation)",
        "thinkpages.searchWikiCommonsImages (query)",
        "thinkpages.searchWiki (mutation)",
        "thinkpages.calculateTrendingTopics (mutation)",
        "thinkpages.searchUsers (query)",
        "thinkpages.checkUsernameAvailability (query)",
        "thinkpages.generateProfilePicture (mutation)",
        "thinkpages.createAccount (mutation)",
        "thinkpages.getAccountsByCountry (query)",
        "thinkpages.getAccountCountsByType (query)",
        "thinkpages.createPost (mutation)",
        "thinkpages.getFeed (query)",
        "thinkpages.getTrendingTopics (query)",
        "thinkpages.getAccount (query)",
        "thinkpages.getThinkpagesAccountByUserId (query)",
        "thinkpages.getPost (query)",
        "thinkpages.triggerCitizenReaction (mutation)",
        "thinkpages.calculateCountryMoodMetrics (mutation)",
        "thinkpages.getThinktanks (query)",
        "thinkpages.joinThinktank (mutation)",
        "thinkpages.addReactionToMessage (mutation)",
        "thinkpages.removeReactionFromMessage (mutation)",
        "thinkpages.editMessage (mutation)",
        "thinkpages.deleteMessage (mutation)",
        "thinkpages.createConversation (mutation)",
        "thinkpages.getConversationMessages (query)",
        "thinkpages.pinPost (mutation)",
        "thinkpages.bookmarkPost (mutation)",
        "thinkpages.flagPost (mutation)",
        "thinkpages.createConversationByCountries (mutation)",
        "taxSystem.getByCountryId (query)",
        "taxSystem.create (mutation)",
        "taxSystem.update (mutation)",
        "taxSystem.delete (mutation)",
        "sdi.getActiveCrises (query)",
        "sdi.getCrisisEvents (query)",
        "sdi.getResponseTeams (query)",
        "sdi.getEconomicIndicators (query)",
        "sdi.deleteTreaty (mutation)",
        "sdi.searchSDI (query)",
        "sdi.getNotifications (query)",
        "sdi.getUnreadNotifications (query)",
        "scheduledChanges.getPendingChanges (query)",
        "scheduledChanges.cancelScheduledChange (mutation)",
        "scheduledChanges.getChangesReadyToApply (query)",
        "scheduledChanges.applyScheduledChange (mutation)",
        "scheduledChanges.getChangeHistory (query)",
        "scheduledChanges.applyDueChanges (mutation)",
        "roles.deleteRole (mutation)",
        "roles.assignUserRole (mutation)",
        "roles.removeUserRole (mutation)",
        "roles.getUsersWithRoles (query)",
        "policies.getPolicies (query)",
        "policies.getPolicy (query)",
        "policies.deletePolicy (mutation)",
        "policies.activatePolicy (mutation)",
        "notifications.getUserNotifications (query)",
        "notifications.markAsRead (mutation)",
        "notifications.markAllAsRead (mutation)",
        "government.getByCountryId (query)",
        "government.create (mutation)",
        "government.update (mutation)",
        "government.delete (mutation)",
        "government.getBudgetSummary (query)",
        "government.getRevenueSummary (query)",
        "government.addSubBudget (mutation)",
        "government.getDepartmentHierarchy (query)",
        "government.getComponents (query)",
        "government.addComponent (mutation)",
        "government.removeComponent (mutation)",
        "government.getEffectivenesAnalysis (query)",
        "economics.getEconomicProfile (query)",
        "economics.getLaborMarket (query)",
        "economics.getFiscalSystem (query)",
        "economics.getIncomeDistribution (query)",
        "economics.getGovernmentBudget (query)",
        "economics.updateGovernmentBudget (mutation)",
        "economics.getDemographics (query)",
        "eci.createCabinetMeeting (mutation)",
        "eci.getCabinetMeetings (query)",
        "eci.getEconomicPolicies (query)",
        "eci.getSecurityThreats (query)",
        "eci.getSecurityDashboard (query)",
        "eci.getStrategicPlans (query)",
        "eci.getAdvancedAnalytics (query)",
        "eci.getAIRecommendations (query)",
        "eci.getPredictiveModels (query)",
        "eci.getRealTimeMetrics (query)",
        "eci.getQuickActions (query)",
        "eci.getPolicyEffectiveness (query)",
        "diplomatic.allocateBudget (mutation)",
        "diplomatic.getInfluenceBreakdown (query)",
        "diplomatic.updateRelationshipStrength (mutation)",
        "diplomatic.getInfluenceLeaderboard (query)",
        "atomicGovernment.getComponents (query)",
        "atomicGovernment.removeComponent (mutation)",
        "atomicGovernment.getSynergies (query)",
        "atomicGovernment.createSynergy (mutation)",
        "atomicGovernment.getEffectivenessAnalysis (query)",
        "atomicGovernment.getBudgetScenarios (query)",
        "atomicGovernment.getFiscalPolicies (query)",
        "atomicGovernment.applyFiscalPolicy (mutation)",
        "archetypes.getCategories (query)",
        "archetypes.getSelectableArchetypes (query)",
        "archetypes.getArchetypesByCategory (query)",
        "archetypes.getUserArchetypeSelections (query)",
        "archetypes.updateUserArchetypeSelections (mutation)",
        "archetypes.getCountriesByArchetypes (query)",
        "archetypes.recalculateArchetypeMatches (mutation)",
        "admin.getCalculationFormulas (query)",
        "admin.getGlobalStats (query)",
        "admin.getSystemStatus (query)",
        "admin.setCustomTime (mutation)",
        "admin.syncBot (mutation)",
        "admin.pauseBot (mutation)",
        "admin.resumeBot (mutation)",
        "admin.clearBotOverrides (mutation)",
        "admin.getCalculationLogs (query)",
        "admin.analyzeImport (mutation)",
        "admin.importRosterData (mutation)",
        "admin.syncEpochWithData (mutation)",
        "admin.forceRecalculation (mutation)",
        "admin.getSystemHealth (query)",
        "admin.getUserCountry (query)",
        "admin.setUserCountry (mutation)",
        "admin.createUserIfNotExists (mutation)",
        "admin.syncWithBot (mutation)",
        "admin.listUsersWithCountries (query)",
        "admin.listCountriesWithUsers (query)",
        "admin.assignUserToCountry (mutation)",
        "admin.unassignUserFromCountry (query)",
        "activities.testMutation (mutation)",
        "activities.getGlobalFeed (query)",
        "activities.createActivity (mutation)",
        "activities.engageWithActivity (mutation)",
        "achievements.getRecentByCountry (query)",
        "achievements.getAllByCountry (query)",
        "achievements.getLeaderboard (query)"
      ],
      "missingOperations": []
    },
    {
      "model": "EconomicProfile",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "economics.getEconomicProfile (query)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "LaborMarket",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "economics.getEconomicProfile (query)",
        "economics.getLaborMarket (query)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "FiscalSystem",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "economics.getEconomicProfile (query)",
        "economics.getLaborMarket (query)",
        "economics.getFiscalSystem (query)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "IncomeDistribution",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "economics.getEconomicProfile (query)",
        "economics.getLaborMarket (query)",
        "economics.getFiscalSystem (query)",
        "economics.getIncomeDistribution (query)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "GovernmentBudget",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "economics.getLaborMarket (query)",
        "economics.getFiscalSystem (query)",
        "economics.getIncomeDistribution (query)",
        "economics.getGovernmentBudget (query)",
        "economics.updateGovernmentBudget (mutation)"
      ],
      "missingOperations": [
        "CREATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "Demographics",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "economics.getFiscalSystem (query)",
        "economics.getIncomeDistribution (query)",
        "economics.getGovernmentBudget (query)",
        "economics.updateGovernmentBudget (mutation)",
        "economics.getDemographics (query)"
      ],
      "missingOperations": [
        "CREATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "HistoricalDataPoint",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "eci.getSecurityThreats (query)",
        "eci.getSecurityDashboard (query)",
        "eci.getStrategicPlans (query)",
        "eci.getAdvancedAnalytics (query)",
        "eci.getAIRecommendations (query)",
        "eci.getPredictiveModels (query)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "DmInputs",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "users.getProfile (query)",
        "users.getProfileById (query)",
        "users.linkCountry (mutation)",
        "users.unlinkCountry (mutation)",
        "users.getLinkedCountry (query)",
        "eci.getPredictiveModels (query)",
        "eci.getRealTimeMetrics (query)",
        "admin.getCalculationFormulas (query)",
        "admin.getGlobalStats (query)",
        "admin.getSystemStatus (query)",
        "admin.syncEpochWithData (mutation)",
        "admin.forceRecalculation (mutation)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "SystemConfig",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": false,
      "hasList": true,
      "endpoints": [
        "intelligence.getFeed (query)",
        "intelligence.getLatestIntelligence (query)",
        "eci.createCabinetMeeting (mutation)",
        "eci.getCabinetMeetings (query)",
        "eci.getEconomicPolicies (query)",
        "eci.getSecurityThreats (query)",
        "eci.getSecurityDashboard (query)",
        "eci.getStrategicPlans (query)",
        "eci.getAdvancedAnalytics (query)",
        "eci.getAIRecommendations (query)",
        "eci.getPredictiveModels (query)",
        "eci.getRealTimeMetrics (query)",
        "eci.getPolicyEffectiveness (query)",
        "admin.getCalculationFormulas (query)",
        "admin.getGlobalStats (query)",
        "admin.getSystemStatus (query)",
        "admin.getBotStatus (query)",
        "admin.getConfig (query)",
        "admin.saveConfig (mutation)",
        "admin.getUserCountry (query)",
        "admin.setUserCountry (mutation)",
        "admin.createUserIfNotExists (mutation)",
        "admin.syncWithBot (mutation)",
        "admin.listUsersWithCountries (query)",
        "admin.listCountriesWithUsers (query)",
        "admin.assignUserToCountry (mutation)",
        "admin.unassignUserFromCountry (query)",
        "admin.getNavigationSettings (query)",
        "admin.updateNavigationSettings (mutation)"
      ],
      "missingOperations": [
        "DELETE"
      ]
    },
    {
      "model": "CalculationLog",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "admin.getCalculationFormulas (query)",
        "admin.getGlobalStats (query)",
        "admin.getSystemStatus (query)",
        "admin.saveConfig (mutation)",
        "admin.setCustomTime (mutation)",
        "admin.syncBot (mutation)",
        "admin.pauseBot (mutation)",
        "admin.resumeBot (mutation)",
        "admin.clearBotOverrides (mutation)",
        "admin.getCalculationLogs (query)",
        "admin.importRosterData (mutation)",
        "admin.syncEpochWithData (mutation)",
        "admin.forceRecalculation (mutation)",
        "admin.getSystemHealth (query)"
      ],
      "missingOperations": [
        "CREATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "User",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": true,
      "endpoints": [
        "users.getProfile (query)",
        "users.getProfileById (query)",
        "users.linkCountry (mutation)",
        "users.unlinkCountry (mutation)",
        "users.getLinkedCountry (query)",
        "users.getSocialData (query)",
        "users.getActiveUsers (query)",
        "users.getCurrentUserWithRole (query)",
        "users.createUserRecord (mutation)",
        "users.removeAdminFavorite (mutation)",
        "users.reorderAdminFavorites (mutation)",
        "users.getUserWithRole (query)",
        "users.getMembershipStatus (query)",
        "users.updateMembershipTier (mutation)",
        "thinkpages.searchWikiCommonsImages (query)",
        "thinkpages.searchWiki (mutation)",
        "thinkpages.calculateTrendingTopics (mutation)",
        "thinkpages.searchUsers (query)",
        "thinkpages.checkUsernameAvailability (query)",
        "thinkpages.generateProfilePicture (mutation)",
        "thinkpages.createAccount (mutation)",
        "thinkpages.getAccountsByCountry (query)",
        "thinkpages.getAccountCountsByType (query)",
        "thinkpages.createPost (mutation)",
        "thinkpages.getFeed (query)",
        "thinkpages.getTrendingTopics (query)",
        "thinkpages.getAccount (query)",
        "thinkpages.getThinkpagesAccountByUserId (query)",
        "thinkpages.getPost (query)",
        "thinkpages.triggerCitizenReaction (mutation)",
        "thinkpages.calculateCountryMoodMetrics (mutation)",
        "thinkpages.getThinktanks (query)",
        "thinkpages.joinThinktank (mutation)",
        "thinkpages.addReactionToMessage (mutation)",
        "thinkpages.removeReactionFromMessage (mutation)",
        "thinkpages.editMessage (mutation)",
        "thinkpages.deleteMessage (mutation)",
        "thinkpages.createConversation (mutation)",
        "thinkpages.getConversationMessages (query)",
        "thinkpages.pinPost (mutation)",
        "thinkpages.bookmarkPost (mutation)",
        "thinkpages.flagPost (mutation)",
        "thinkpages.createConversationByCountries (mutation)",
        "sdi.deleteTreaty (mutation)",
        "sdi.searchSDI (query)",
        "sdi.getNotifications (query)",
        "sdi.getUnreadNotifications (query)",
        "scheduledChanges.getPendingChanges (query)",
        "scheduledChanges.cancelScheduledChange (mutation)",
        "scheduledChanges.getChangesReadyToApply (query)",
        "scheduledChanges.applyScheduledChange (mutation)",
        "scheduledChanges.getChangeHistory (query)",
        "scheduledChanges.applyDueChanges (mutation)",
        "roles.deleteRole (mutation)",
        "roles.assignUserRole (mutation)",
        "roles.removeUserRole (mutation)",
        "roles.getUsersWithRoles (query)",
        "policies.getPolicies (query)",
        "policies.getPolicy (query)",
        "policies.deletePolicy (mutation)",
        "policies.activatePolicy (mutation)",
        "notifications.getUserNotifications (query)",
        "notifications.markAsRead (mutation)",
        "notifications.markAllAsRead (mutation)",
        "economics.getEconomicProfile (query)",
        "economics.getLaborMarket (query)",
        "economics.getFiscalSystem (query)",
        "economics.getIncomeDistribution (query)",
        "economics.getGovernmentBudget (query)",
        "economics.updateGovernmentBudget (mutation)",
        "economics.getDemographics (query)",
        "eci.createCabinetMeeting (mutation)",
        "eci.getCabinetMeetings (query)",
        "eci.getEconomicPolicies (query)",
        "eci.getSecurityThreats (query)",
        "eci.getSecurityDashboard (query)",
        "eci.getStrategicPlans (query)",
        "eci.getAdvancedAnalytics (query)",
        "eci.getAIRecommendations (query)",
        "eci.getPredictiveModels (query)",
        "eci.getRealTimeMetrics (query)",
        "eci.getQuickActions (query)",
        "eci.getPolicyEffectiveness (query)",
        "archetypes.getCategories (query)",
        "archetypes.getSelectableArchetypes (query)",
        "archetypes.getArchetypesByCategory (query)",
        "archetypes.getUserArchetypeSelections (query)",
        "archetypes.updateUserArchetypeSelections (mutation)",
        "admin.getCalculationFormulas (query)",
        "admin.getGlobalStats (query)",
        "admin.forceRecalculation (mutation)",
        "admin.getSystemHealth (query)",
        "admin.getUserCountry (query)",
        "admin.setUserCountry (mutation)",
        "admin.createUserIfNotExists (mutation)",
        "admin.syncWithBot (mutation)",
        "admin.listUsersWithCountries (query)",
        "admin.listCountriesWithUsers (query)",
        "admin.assignUserToCountry (mutation)",
        "admin.unassignUserFromCountry (query)",
        "activities.testMutation (mutation)",
        "activities.getGlobalFeed (query)",
        "activities.createActivity (mutation)",
        "activities.engageWithActivity (mutation)",
        "achievements.getRecentByCountry (query)",
        "achievements.getAllByCountry (query)",
        "achievements.getLeaderboard (query)"
      ],
      "missingOperations": []
    },
    {
      "model": "ScheduledChange",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": true,
      "endpoints": [
        "users.getProfile (query)",
        "users.getProfileById (query)",
        "users.linkCountry (mutation)",
        "users.unlinkCountry (mutation)",
        "users.getLinkedCountry (query)",
        "users.getSocialData (query)",
        "users.getActiveUsers (query)",
        "users.getCurrentUserWithRole (query)",
        "users.createUserRecord (mutation)",
        "users.removeAdminFavorite (mutation)",
        "users.reorderAdminFavorites (mutation)",
        "users.getUserWithRole (query)",
        "users.getMembershipStatus (query)",
        "users.updateMembershipTier (mutation)",
        "thinkpages.searchWikiCommonsImages (query)",
        "thinkpages.searchWiki (mutation)",
        "thinkpages.calculateTrendingTopics (mutation)",
        "thinkpages.searchUsers (query)",
        "thinkpages.checkUsernameAvailability (query)",
        "thinkpages.generateProfilePicture (mutation)",
        "thinkpages.createAccount (mutation)",
        "thinkpages.getAccountsByCountry (query)",
        "thinkpages.getAccountCountsByType (query)",
        "thinkpages.createPost (mutation)",
        "thinkpages.getFeed (query)",
        "thinkpages.getTrendingTopics (query)",
        "thinkpages.getAccount (query)",
        "thinkpages.getThinkpagesAccountByUserId (query)",
        "thinkpages.getPost (query)",
        "thinkpages.triggerCitizenReaction (mutation)",
        "thinkpages.calculateCountryMoodMetrics (mutation)",
        "thinkpages.getThinktanks (query)",
        "thinkpages.joinThinktank (mutation)",
        "thinkpages.addReactionToMessage (mutation)",
        "thinkpages.removeReactionFromMessage (mutation)",
        "thinkpages.editMessage (mutation)",
        "thinkpages.deleteMessage (mutation)",
        "thinkpages.createConversation (mutation)",
        "thinkpages.getConversationMessages (query)",
        "thinkpages.pinPost (mutation)",
        "thinkpages.bookmarkPost (mutation)",
        "thinkpages.flagPost (mutation)",
        "thinkpages.createConversationByCountries (mutation)",
        "sdi.deleteTreaty (mutation)",
        "sdi.searchSDI (query)",
        "sdi.getNotifications (query)",
        "sdi.getUnreadNotifications (query)",
        "scheduledChanges.getPendingChanges (query)",
        "scheduledChanges.cancelScheduledChange (mutation)",
        "scheduledChanges.getChangesReadyToApply (query)",
        "scheduledChanges.applyScheduledChange (mutation)",
        "scheduledChanges.getChangeHistory (query)",
        "scheduledChanges.applyDueChanges (mutation)",
        "roles.deleteRole (mutation)",
        "roles.assignUserRole (mutation)",
        "roles.removeUserRole (mutation)",
        "roles.getUsersWithRoles (query)",
        "policies.getPolicies (query)",
        "policies.getPolicy (query)",
        "policies.deletePolicy (mutation)",
        "policies.activatePolicy (mutation)",
        "notifications.getUserNotifications (query)",
        "notifications.markAsRead (mutation)",
        "notifications.markAllAsRead (mutation)",
        "economics.getEconomicProfile (query)",
        "economics.getLaborMarket (query)",
        "economics.getFiscalSystem (query)",
        "economics.getIncomeDistribution (query)",
        "economics.getGovernmentBudget (query)",
        "economics.updateGovernmentBudget (mutation)",
        "economics.getDemographics (query)",
        "eci.createCabinetMeeting (mutation)",
        "eci.getCabinetMeetings (query)",
        "eci.getEconomicPolicies (query)",
        "eci.getSecurityThreats (query)",
        "eci.getSecurityDashboard (query)",
        "eci.getStrategicPlans (query)",
        "eci.getAdvancedAnalytics (query)",
        "eci.getAIRecommendations (query)",
        "eci.getPredictiveModels (query)",
        "eci.getRealTimeMetrics (query)",
        "eci.getQuickActions (query)",
        "eci.getPolicyEffectiveness (query)",
        "admin.getCalculationFormulas (query)",
        "admin.getGlobalStats (query)",
        "admin.forceRecalculation (mutation)",
        "admin.getSystemHealth (query)",
        "admin.getUserCountry (query)",
        "admin.setUserCountry (mutation)",
        "admin.createUserIfNotExists (mutation)",
        "admin.syncWithBot (mutation)",
        "admin.listUsersWithCountries (query)",
        "admin.listCountriesWithUsers (query)",
        "admin.assignUserToCountry (mutation)",
        "admin.unassignUserFromCountry (query)",
        "activities.testMutation (mutation)",
        "activities.getGlobalFeed (query)",
        "activities.createActivity (mutation)",
        "activities.engageWithActivity (mutation)",
        "achievements.getRecentByCountry (query)",
        "achievements.getAllByCountry (query)",
        "achievements.getLeaderboard (query)"
      ],
      "missingOperations": []
    },
    {
      "model": "EconomicModel",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "eci.createCabinetMeeting (mutation)",
        "eci.getCabinetMeetings (query)",
        "eci.getAdvancedAnalytics (query)",
        "eci.getAIRecommendations (query)",
        "eci.getPredictiveModels (query)",
        "eci.getRealTimeMetrics (query)"
      ],
      "missingOperations": [
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "SectoralOutput",
      "hasCreate": false,
      "hasRead": false,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [],
      "missingOperations": [
        "CREATE",
        "READ",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "PolicyEffect",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "eci.createCabinetMeeting (mutation)",
        "eci.getCabinetMeetings (query)"
      ],
      "missingOperations": [
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "IntelligenceItem",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": true,
      "endpoints": [
        "sdi.getIntelligenceFeed (query)",
        "sdi.getEconomicAlerts (query)",
        "sdi.getDiplomaticRelations (query)",
        "sdi.getActiveTreaties (query)",
        "sdi.getDiplomaticEvents (query)",
        "sdi.getDiplomaticIntelligence (query)",
        "sdi.getSystemStatus (query)",
        "sdi.deleteEconomicIndicator (mutation)",
        "sdi.updateDiplomaticRelation (mutation)",
        "sdi.deleteDiplomaticRelation (mutation)",
        "sdi.updateTreaty (mutation)",
        "sdi.deleteTreaty (mutation)",
        "sdi.searchSDI (query)",
        "intelligence.getFeed (query)",
        "intelligence.getLatestIntelligence (query)",
        "intelligence.initializeSampleData (mutation)"
      ],
      "missingOperations": [
        "CREATE"
      ]
    },
    {
      "model": "CrisisEvent",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": true,
      "endpoints": [
        "sdi.getIntelligenceFeed (query)",
        "sdi.getActiveCrises (query)",
        "sdi.getCrisisEvents (query)",
        "sdi.getResponseTeams (query)",
        "sdi.getEconomicIndicators (query)",
        "sdi.getCommodityPrices (query)",
        "sdi.getEconomicAlerts (query)",
        "sdi.getDiplomaticRelations (query)",
        "sdi.getActiveTreaties (query)",
        "sdi.getDiplomaticEvents (query)",
        "sdi.getDiplomaticIntelligence (query)",
        "sdi.getSystemStatus (query)",
        "sdi.updateCrisisStatus (mutation)",
        "sdi.deleteCrisisEvent (mutation)",
        "sdi.updateDiplomaticRelation (mutation)",
        "sdi.deleteDiplomaticRelation (mutation)",
        "sdi.updateTreaty (mutation)",
        "sdi.deleteTreaty (mutation)",
        "sdi.searchSDI (query)",
        "admin.getCalculationFormulas (query)",
        "admin.getGlobalStats (query)"
      ],
      "missingOperations": [
        "CREATE"
      ]
    },
    {
      "model": "DiplomaticRelation",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "sdi.getCommodityPrices (query)",
        "sdi.getEconomicAlerts (query)",
        "sdi.getDiplomaticRelations (query)",
        "sdi.getActiveTreaties (query)",
        "sdi.getDiplomaticEvents (query)",
        "sdi.getDiplomaticIntelligence (query)",
        "sdi.getSystemStatus (query)",
        "sdi.updateCrisisStatus (mutation)",
        "sdi.deleteCrisisEvent (mutation)",
        "sdi.triggerCrisisAutoPost (mutation)",
        "sdi.createEconomicIndicator (mutation)",
        "sdi.deleteEconomicIndicator (mutation)",
        "sdi.updateDiplomaticRelation (mutation)",
        "sdi.deleteDiplomaticRelation (mutation)",
        "diplomatic.getRelationships (query)",
        "diplomatic.getRecentChanges (query)",
        "diplomatic.updateRelationship (mutation)",
        "diplomatic.joinCulturalExchange (mutation)",
        "diplomatic.getEmbassyDetails (query)",
        "diplomatic.calculateEstablishmentCost (query)",
        "diplomatic.payMaintenance (mutation)",
        "diplomatic.allocateBudget (mutation)",
        "diplomatic.getInfluenceBreakdown (query)",
        "diplomatic.updateRelationshipStrength (mutation)"
      ],
      "missingOperations": [
        "LIST"
      ]
    },
    {
      "model": "Treaty",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": true,
      "endpoints": [
        "sdi.getCommodityPrices (query)",
        "sdi.getEconomicAlerts (query)",
        "sdi.getDiplomaticRelations (query)",
        "sdi.getActiveTreaties (query)",
        "sdi.getDiplomaticEvents (query)",
        "sdi.getDiplomaticIntelligence (query)",
        "sdi.getSystemStatus (query)",
        "sdi.deleteCrisisEvent (mutation)",
        "sdi.triggerCrisisAutoPost (mutation)",
        "sdi.createEconomicIndicator (mutation)",
        "sdi.deleteEconomicIndicator (mutation)",
        "sdi.updateDiplomaticRelation (mutation)",
        "sdi.deleteDiplomaticRelation (mutation)",
        "sdi.updateTreaty (mutation)",
        "sdi.deleteTreaty (mutation)",
        "sdi.searchSDI (query)"
      ],
      "missingOperations": []
    },
    {
      "model": "EconomicIndicator",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "sdi.getActiveCrises (query)",
        "sdi.getCrisisEvents (query)",
        "sdi.getResponseTeams (query)",
        "sdi.getEconomicIndicators (query)",
        "sdi.getCommodityPrices (query)",
        "sdi.updateCrisisStatus (mutation)",
        "sdi.deleteCrisisEvent (mutation)",
        "sdi.triggerCrisisAutoPost (mutation)",
        "sdi.createEconomicIndicator (mutation)",
        "sdi.deleteEconomicIndicator (mutation)"
      ],
      "missingOperations": [
        "LIST"
      ]
    },
    {
      "model": "Notification",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": true,
      "hasList": true,
      "endpoints": [
        "sdi.deleteTreaty (mutation)",
        "sdi.searchSDI (query)",
        "sdi.getNotifications (query)",
        "sdi.getUnreadNotifications (query)",
        "sdi.createNotification (mutation)",
        "sdi.getAchievements (query)",
        "notifications.getUserNotifications (query)",
        "notifications.markAsRead (mutation)",
        "notifications.markAllAsRead (mutation)",
        "notifications.getUserPreferences (query)",
        "notifications.deleteNotification (mutation)",
        "notifications.getNotificationStats (query)"
      ],
      "missingOperations": [
        "UPDATE"
      ]
    },
    {
      "model": "UserPreferences",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "notifications.markAsRead (mutation)",
        "notifications.markAllAsRead (mutation)",
        "notifications.getUserPreferences (query)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "TaxSystem",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "taxSystem.getByCountryId (query)",
        "taxSystem.create (mutation)",
        "taxSystem.update (mutation)",
        "taxSystem.delete (mutation)"
      ],
      "missingOperations": [
        "LIST"
      ]
    },
    {
      "model": "TaxCategory",
      "hasCreate": true,
      "hasRead": false,
      "hasUpdate": true,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "taxSystem.create (mutation)",
        "taxSystem.update (mutation)"
      ],
      "missingOperations": [
        "READ",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "TaxBracket",
      "hasCreate": false,
      "hasRead": false,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [],
      "missingOperations": [
        "CREATE",
        "READ",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "TaxExemption",
      "hasCreate": false,
      "hasRead": false,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [],
      "missingOperations": [
        "CREATE",
        "READ",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "TaxDeduction",
      "hasCreate": false,
      "hasRead": false,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [],
      "missingOperations": [
        "CREATE",
        "READ",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "TaxPolicy",
      "hasCreate": false,
      "hasRead": false,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [],
      "missingOperations": [
        "CREATE",
        "READ",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "TaxCalculation",
      "hasCreate": false,
      "hasRead": false,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [],
      "missingOperations": [
        "CREATE",
        "READ",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "GovernmentComponent",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": true,
      "endpoints": [
        "wikiImporter.previewImport (query)",
        "wikiImporter.importCountry (mutation)",
        "users.getProfile (query)",
        "users.getProfileById (query)",
        "users.linkCountry (mutation)",
        "users.unlinkCountry (mutation)",
        "users.getLinkedCountry (query)",
        "users.getSocialData (query)",
        "users.getActiveUsers (query)",
        "thinkpages.searchWiki (mutation)",
        "thinkpages.calculateTrendingTopics (mutation)",
        "thinkpages.searchUsers (query)",
        "thinkpages.checkUsernameAvailability (query)",
        "thinkpages.generateProfilePicture (mutation)",
        "thinkpages.createAccount (mutation)",
        "thinkpages.getFeed (query)",
        "thinkpages.getTrendingTopics (query)",
        "thinkpages.getAccount (query)",
        "thinkpages.getThinkpagesAccountByUserId (query)",
        "thinkpages.getPost (query)",
        "thinkpages.triggerCitizenReaction (mutation)",
        "thinkpages.calculateCountryMoodMetrics (mutation)",
        "thinkpages.addReactionToMessage (mutation)",
        "thinkpages.removeReactionFromMessage (mutation)",
        "thinkpages.editMessage (mutation)",
        "thinkpages.deleteMessage (mutation)",
        "thinkpages.createConversation (mutation)",
        "sdi.getActiveCrises (query)",
        "sdi.getCrisisEvents (query)",
        "sdi.getResponseTeams (query)",
        "sdi.getEconomicIndicators (query)",
        "scheduledChanges.getPendingChanges (query)",
        "scheduledChanges.cancelScheduledChange (mutation)",
        "scheduledChanges.getChangesReadyToApply (query)",
        "scheduledChanges.applyScheduledChange (mutation)",
        "scheduledChanges.getChangeHistory (query)",
        "scheduledChanges.applyDueChanges (mutation)",
        "notifications.getUserNotifications (query)",
        "notifications.markAsRead (mutation)",
        "notifications.markAllAsRead (mutation)",
        "government.getRevenueSummary (query)",
        "government.addSubBudget (mutation)",
        "government.getDepartmentHierarchy (query)",
        "government.getComponents (query)",
        "government.addComponent (mutation)",
        "government.removeComponent (mutation)",
        "government.getEffectivenesAnalysis (query)",
        "eci.createCabinetMeeting (mutation)",
        "eci.getCabinetMeetings (query)",
        "eci.getEconomicPolicies (query)",
        "eci.getSecurityThreats (query)",
        "eci.getSecurityDashboard (query)",
        "eci.getStrategicPlans (query)",
        "eci.getAdvancedAnalytics (query)",
        "eci.getAIRecommendations (query)",
        "eci.getPredictiveModels (query)",
        "eci.getRealTimeMetrics (query)",
        "eci.getQuickActions (query)",
        "eci.getPolicyEffectiveness (query)",
        "diplomatic.allocateBudget (mutation)",
        "diplomatic.getInfluenceBreakdown (query)",
        "diplomatic.updateRelationshipStrength (mutation)",
        "diplomatic.getInfluenceLeaderboard (query)",
        "atomicGovernment.getComponents (query)",
        "atomicGovernment.removeComponent (mutation)",
        "atomicGovernment.getSynergies (query)",
        "atomicGovernment.createSynergy (mutation)",
        "atomicGovernment.getEffectivenessAnalysis (query)",
        "archetypes.getSelectableArchetypes (query)",
        "archetypes.getArchetypesByCategory (query)",
        "archetypes.getUserArchetypeSelections (query)",
        "archetypes.updateUserArchetypeSelections (mutation)",
        "archetypes.getCountriesByArchetypes (query)",
        "archetypes.recalculateArchetypeMatches (mutation)",
        "admin.getCalculationFormulas (query)",
        "admin.getGlobalStats (query)",
        "admin.getSystemStatus (query)",
        "admin.setCustomTime (mutation)",
        "admin.syncBot (mutation)",
        "admin.pauseBot (mutation)",
        "admin.resumeBot (mutation)",
        "admin.clearBotOverrides (mutation)",
        "admin.getCalculationLogs (query)",
        "admin.analyzeImport (mutation)",
        "admin.importRosterData (mutation)",
        "admin.syncEpochWithData (mutation)",
        "admin.forceRecalculation (mutation)",
        "admin.getSystemHealth (query)",
        "admin.getUserCountry (query)",
        "admin.setUserCountry (mutation)",
        "admin.createUserIfNotExists (mutation)",
        "admin.syncWithBot (mutation)",
        "admin.listUsersWithCountries (query)",
        "admin.listCountriesWithUsers (query)",
        "activities.testMutation (mutation)",
        "activities.getGlobalFeed (query)",
        "activities.createActivity (mutation)",
        "activities.engageWithActivity (mutation)",
        "achievements.getRecentByCountry (query)",
        "achievements.getAllByCountry (query)",
        "achievements.getLeaderboard (query)"
      ],
      "missingOperations": []
    },
    {
      "model": "ComponentSynergy",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "atomicGovernment.getComponents (query)",
        "atomicGovernment.removeComponent (mutation)",
        "atomicGovernment.getSynergies (query)",
        "atomicGovernment.createSynergy (mutation)",
        "atomicGovernment.getEffectivenessAnalysis (query)"
      ],
      "missingOperations": [
        "UPDATE",
        "LIST"
      ]
    },
    {
      "model": "BudgetScenario",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": true,
      "endpoints": [
        "wikiImporter.previewImport (query)",
        "wikiImporter.importCountry (mutation)",
        "users.getProfile (query)",
        "users.getProfileById (query)",
        "users.linkCountry (mutation)",
        "users.unlinkCountry (mutation)",
        "users.getLinkedCountry (query)",
        "users.getSocialData (query)",
        "users.getActiveUsers (query)",
        "thinkpages.searchWiki (mutation)",
        "thinkpages.calculateTrendingTopics (mutation)",
        "thinkpages.searchUsers (query)",
        "thinkpages.checkUsernameAvailability (query)",
        "thinkpages.generateProfilePicture (mutation)",
        "thinkpages.createAccount (mutation)",
        "thinkpages.getFeed (query)",
        "thinkpages.getTrendingTopics (query)",
        "thinkpages.getAccount (query)",
        "thinkpages.getThinkpagesAccountByUserId (query)",
        "thinkpages.getPost (query)",
        "thinkpages.triggerCitizenReaction (mutation)",
        "thinkpages.calculateCountryMoodMetrics (mutation)",
        "thinkpages.addReactionToMessage (mutation)",
        "thinkpages.removeReactionFromMessage (mutation)",
        "thinkpages.editMessage (mutation)",
        "thinkpages.deleteMessage (mutation)",
        "thinkpages.createConversation (mutation)",
        "sdi.getActiveCrises (query)",
        "sdi.getCrisisEvents (query)",
        "sdi.getResponseTeams (query)",
        "sdi.getEconomicIndicators (query)",
        "scheduledChanges.getPendingChanges (query)",
        "scheduledChanges.cancelScheduledChange (mutation)",
        "scheduledChanges.getChangesReadyToApply (query)",
        "scheduledChanges.applyScheduledChange (mutation)",
        "scheduledChanges.getChangeHistory (query)",
        "scheduledChanges.applyDueChanges (mutation)",
        "notifications.getUserNotifications (query)",
        "notifications.markAsRead (mutation)",
        "notifications.markAllAsRead (mutation)",
        "eci.createCabinetMeeting (mutation)",
        "eci.getCabinetMeetings (query)",
        "eci.getEconomicPolicies (query)",
        "eci.getSecurityThreats (query)",
        "eci.getSecurityDashboard (query)",
        "eci.getStrategicPlans (query)",
        "eci.getAdvancedAnalytics (query)",
        "eci.getAIRecommendations (query)",
        "eci.getPredictiveModels (query)",
        "eci.getRealTimeMetrics (query)",
        "eci.getQuickActions (query)",
        "eci.getPolicyEffectiveness (query)",
        "diplomatic.allocateBudget (mutation)",
        "diplomatic.getInfluenceBreakdown (query)",
        "diplomatic.updateRelationshipStrength (mutation)",
        "diplomatic.getInfluenceLeaderboard (query)",
        "atomicGovernment.getSynergies (query)",
        "atomicGovernment.createSynergy (mutation)",
        "atomicGovernment.getEffectivenessAnalysis (query)",
        "atomicGovernment.getBudgetScenarios (query)",
        "archetypes.getSelectableArchetypes (query)",
        "archetypes.getArchetypesByCategory (query)",
        "archetypes.getUserArchetypeSelections (query)",
        "archetypes.updateUserArchetypeSelections (mutation)",
        "archetypes.getCountriesByArchetypes (query)",
        "archetypes.recalculateArchetypeMatches (mutation)",
        "admin.getCalculationFormulas (query)",
        "admin.getGlobalStats (query)",
        "admin.getSystemStatus (query)",
        "admin.setCustomTime (mutation)",
        "admin.syncBot (mutation)",
        "admin.pauseBot (mutation)",
        "admin.resumeBot (mutation)",
        "admin.clearBotOverrides (mutation)",
        "admin.getCalculationLogs (query)",
        "admin.analyzeImport (mutation)",
        "admin.importRosterData (mutation)",
        "admin.syncEpochWithData (mutation)",
        "admin.forceRecalculation (mutation)",
        "admin.getSystemHealth (query)",
        "admin.getUserCountry (query)",
        "admin.setUserCountry (mutation)",
        "admin.createUserIfNotExists (mutation)",
        "admin.syncWithBot (mutation)",
        "admin.listUsersWithCountries (query)",
        "admin.listCountriesWithUsers (query)",
        "activities.testMutation (mutation)",
        "activities.getGlobalFeed (query)",
        "activities.createActivity (mutation)",
        "activities.engageWithActivity (mutation)",
        "achievements.getRecentByCountry (query)",
        "achievements.getAllByCountry (query)",
        "achievements.getLeaderboard (query)"
      ],
      "missingOperations": []
    },
    {
      "model": "BudgetScenarioCategory",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "atomicGovernment.getEffectivenessAnalysis (query)",
        "atomicGovernment.getBudgetScenarios (query)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "FiscalPolicy",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "atomicGovernment.getBudgetScenarios (query)",
        "atomicGovernment.getFiscalPolicies (query)",
        "atomicGovernment.applyFiscalPolicy (mutation)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "AtomicEffectiveness",
      "hasCreate": false,
      "hasRead": false,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [],
      "missingOperations": [
        "CREATE",
        "READ",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "AtomicEconomicImpact",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": true,
      "endpoints": [
        "wikiImporter.previewImport (query)",
        "wikiImporter.importCountry (mutation)",
        "users.getProfile (query)",
        "users.getProfileById (query)",
        "users.linkCountry (mutation)",
        "users.unlinkCountry (mutation)",
        "users.getLinkedCountry (query)",
        "users.getSocialData (query)",
        "users.getActiveUsers (query)",
        "thinkpages.searchWiki (mutation)",
        "thinkpages.calculateTrendingTopics (mutation)",
        "thinkpages.searchUsers (query)",
        "thinkpages.checkUsernameAvailability (query)",
        "thinkpages.generateProfilePicture (mutation)",
        "thinkpages.createAccount (mutation)",
        "thinkpages.getFeed (query)",
        "thinkpages.getTrendingTopics (query)",
        "thinkpages.getAccount (query)",
        "thinkpages.getThinkpagesAccountByUserId (query)",
        "thinkpages.getPost (query)",
        "thinkpages.triggerCitizenReaction (mutation)",
        "thinkpages.calculateCountryMoodMetrics (mutation)",
        "thinkpages.addReactionToMessage (mutation)",
        "thinkpages.removeReactionFromMessage (mutation)",
        "thinkpages.editMessage (mutation)",
        "thinkpages.deleteMessage (mutation)",
        "thinkpages.createConversation (mutation)",
        "sdi.getActiveCrises (query)",
        "sdi.getCrisisEvents (query)",
        "sdi.getResponseTeams (query)",
        "sdi.getEconomicIndicators (query)",
        "scheduledChanges.getPendingChanges (query)",
        "scheduledChanges.cancelScheduledChange (mutation)",
        "scheduledChanges.getChangesReadyToApply (query)",
        "scheduledChanges.applyScheduledChange (mutation)",
        "scheduledChanges.getChangeHistory (query)",
        "scheduledChanges.applyDueChanges (mutation)",
        "notifications.getUserNotifications (query)",
        "notifications.markAsRead (mutation)",
        "notifications.markAllAsRead (mutation)",
        "eci.createCabinetMeeting (mutation)",
        "eci.getCabinetMeetings (query)",
        "eci.getEconomicPolicies (query)",
        "eci.getSecurityThreats (query)",
        "eci.getSecurityDashboard (query)",
        "eci.getStrategicPlans (query)",
        "eci.getAdvancedAnalytics (query)",
        "eci.getAIRecommendations (query)",
        "eci.getPredictiveModels (query)",
        "eci.getRealTimeMetrics (query)",
        "eci.getQuickActions (query)",
        "eci.getPolicyEffectiveness (query)",
        "diplomatic.allocateBudget (mutation)",
        "diplomatic.getInfluenceBreakdown (query)",
        "diplomatic.updateRelationshipStrength (mutation)",
        "diplomatic.getInfluenceLeaderboard (query)",
        "archetypes.getSelectableArchetypes (query)",
        "archetypes.getArchetypesByCategory (query)",
        "archetypes.getUserArchetypeSelections (query)",
        "archetypes.updateUserArchetypeSelections (mutation)",
        "archetypes.getCountriesByArchetypes (query)",
        "archetypes.recalculateArchetypeMatches (mutation)",
        "admin.getCalculationFormulas (query)",
        "admin.getGlobalStats (query)",
        "admin.getSystemStatus (query)",
        "admin.setCustomTime (mutation)",
        "admin.syncBot (mutation)",
        "admin.pauseBot (mutation)",
        "admin.resumeBot (mutation)",
        "admin.clearBotOverrides (mutation)",
        "admin.getCalculationLogs (query)",
        "admin.analyzeImport (mutation)",
        "admin.importRosterData (mutation)",
        "admin.syncEpochWithData (mutation)",
        "admin.forceRecalculation (mutation)",
        "admin.getSystemHealth (query)",
        "admin.getUserCountry (query)",
        "admin.setUserCountry (mutation)",
        "admin.createUserIfNotExists (mutation)",
        "admin.syncWithBot (mutation)",
        "admin.listUsersWithCountries (query)",
        "admin.listCountriesWithUsers (query)",
        "activities.testMutation (mutation)",
        "activities.getGlobalFeed (query)",
        "activities.createActivity (mutation)",
        "activities.engageWithActivity (mutation)",
        "achievements.getRecentByCountry (query)",
        "achievements.getAllByCountry (query)",
        "achievements.getLeaderboard (query)"
      ],
      "missingOperations": []
    },
    {
      "model": "ThinkpagesPost",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": true,
      "endpoints": [
        "thinkpages.searchUnsplashImages (query)",
        "thinkpages.searchWikiCommonsImages (query)",
        "thinkpages.searchWiki (mutation)",
        "thinkpages.calculateTrendingTopics (mutation)",
        "thinkpages.getAccountsByCountry (query)",
        "thinkpages.getAccountCountsByType (query)",
        "thinkpages.createPost (mutation)",
        "thinkpages.addReaction (mutation)",
        "thinkpages.removeReaction (mutation)",
        "thinkpages.getFeed (query)",
        "thinkpages.getTrendingTopics (query)",
        "thinkpages.getAccount (query)",
        "thinkpages.getThinkpagesAccountByUserId (query)",
        "thinkpages.getPost (query)",
        "thinkpages.triggerCitizenReaction (mutation)",
        "thinkpages.calculateCountryMoodMetrics (mutation)",
        "thinkpages.updatePresence (mutation)",
        "thinkpages.getPresenceForUsers (query)",
        "thinkpages.getDiscordEmojis (query)",
        "thinkpages.updatePost (mutation)",
        "thinkpages.deletePost (mutation)",
        "thinkpages.pinPost (mutation)"
      ],
      "missingOperations": []
    },
    {
      "model": "PostReaction",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "thinkpages.getAccountCountsByType (query)",
        "thinkpages.createPost (mutation)",
        "thinkpages.addReaction (mutation)",
        "thinkpages.removeReaction (mutation)"
      ],
      "missingOperations": [
        "UPDATE",
        "LIST"
      ]
    },
    {
      "model": "PostMention",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "thinkpages.getAccountsByCountry (query)",
        "thinkpages.getAccountCountsByType (query)",
        "thinkpages.createPost (mutation)"
      ],
      "missingOperations": [
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "MediaAttachment",
      "hasCreate": false,
      "hasRead": false,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [],
      "missingOperations": [
        "CREATE",
        "READ",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "TrendingTopic",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": true,
      "hasList": true,
      "endpoints": [
        "thinkpages.searchUnsplashImages (query)",
        "thinkpages.searchWikiCommonsImages (query)",
        "thinkpages.searchWiki (mutation)",
        "thinkpages.calculateTrendingTopics (mutation)",
        "thinkpages.removeReaction (mutation)",
        "thinkpages.getFeed (query)",
        "thinkpages.getTrendingTopics (query)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE"
      ]
    },
    {
      "model": "CountryMoodMetric",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "thinkpages.getThinkpagesAccountByUserId (query)",
        "thinkpages.getPost (query)",
        "thinkpages.triggerCitizenReaction (mutation)",
        "thinkpages.calculateCountryMoodMetrics (mutation)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "ThinktankGroup",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "thinkpages.triggerCitizenReaction (mutation)",
        "thinkpages.calculateCountryMoodMetrics (mutation)",
        "thinkpages.getThinktanks (query)",
        "thinkpages.joinThinktank (mutation)",
        "thinkpages.leaveThinktank (mutation)",
        "thinkpages.getThinktankMessages (query)",
        "thinkpages.deleteThinktank (mutation)",
        "thinkpages.updateMemberRole (mutation)",
        "thinkpages.removeMemberFromThinktank (mutation)"
      ],
      "missingOperations": [
        "CREATE",
        "LIST"
      ]
    },
    {
      "model": "ThinktankMember",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "thinkpages.triggerCitizenReaction (mutation)",
        "thinkpages.calculateCountryMoodMetrics (mutation)",
        "thinkpages.getThinktanks (query)",
        "thinkpages.joinThinktank (mutation)",
        "thinkpages.leaveThinktank (mutation)",
        "thinkpages.getThinktankMessages (query)",
        "thinkpages.deleteThinktank (mutation)",
        "thinkpages.updateMemberRole (mutation)",
        "thinkpages.removeMemberFromThinktank (mutation)",
        "thinkpages.inviteToThinktank (mutation)",
        "thinkpages.getThinktankDocuments (query)",
        "thinkpages.createThinktankDocument (mutation)"
      ],
      "missingOperations": [
        "LIST"
      ]
    },
    {
      "model": "ThinktankMessage",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "thinkpages.leaveThinktank (mutation)",
        "thinkpages.getThinktankMessages (query)",
        "thinkpages.markMessagesAsRead (mutation)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "ThinktankInvite",
      "hasCreate": false,
      "hasRead": false,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "thinkpages.deleteThinktank (mutation)",
        "thinkpages.updateMemberRole (mutation)",
        "thinkpages.removeMemberFromThinktank (mutation)",
        "thinkpages.inviteToThinktank (mutation)"
      ],
      "missingOperations": [
        "CREATE",
        "READ",
        "LIST"
      ]
    },
    {
      "model": "CollaborativeDoc",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "thinkpages.deleteThinktank (mutation)",
        "thinkpages.updateMemberRole (mutation)",
        "thinkpages.removeMemberFromThinktank (mutation)",
        "thinkpages.inviteToThinktank (mutation)",
        "thinkpages.getThinktankDocuments (query)",
        "thinkpages.createThinktankDocument (mutation)",
        "thinkpages.updateThinktankDocument (mutation)",
        "thinkpages.deleteThinktankDocument (mutation)",
        "thinkpages.getThinktankDocument (query)"
      ],
      "missingOperations": [
        "LIST"
      ]
    },
    {
      "model": "ThinkshareConversation",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "thinkpages.addReactionToMessage (mutation)",
        "thinkpages.removeReactionFromMessage (mutation)",
        "thinkpages.editMessage (mutation)",
        "thinkpages.deleteMessage (mutation)",
        "thinkpages.createConversation (mutation)",
        "thinkpages.getConversations (query)",
        "thinkpages.pinPost (mutation)",
        "thinkpages.bookmarkPost (mutation)",
        "thinkpages.flagPost (mutation)",
        "thinkpages.createConversationByCountries (mutation)"
      ],
      "missingOperations": [
        "LIST"
      ]
    },
    {
      "model": "ConversationParticipant",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "thinkpages.getConversations (query)",
        "thinkpages.getConversationMessages (query)",
        "thinkpages.markMessagesAsRead (mutation)",
        "thinkpages.bookmarkPost (mutation)",
        "thinkpages.flagPost (mutation)",
        "thinkpages.createConversationByCountries (mutation)"
      ],
      "missingOperations": [
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "ThinkshareMessage",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "thinkpages.updateThinktankDocument (mutation)",
        "thinkpages.deleteThinktankDocument (mutation)",
        "thinkpages.getThinktankDocument (query)",
        "thinkpages.addReactionToMessage (mutation)",
        "thinkpages.removeReactionFromMessage (mutation)",
        "thinkpages.editMessage (mutation)",
        "thinkpages.deleteMessage (mutation)",
        "thinkpages.getConversations (query)",
        "thinkpages.getConversationMessages (query)",
        "thinkpages.markMessagesAsRead (mutation)",
        "thinkpages.bookmarkPost (mutation)",
        "thinkpages.flagPost (mutation)",
        "thinkpages.createConversationByCountries (mutation)"
      ],
      "missingOperations": [
        "LIST"
      ]
    },
    {
      "model": "MessageReadReceipt",
      "hasCreate": false,
      "hasRead": false,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "thinkpages.markMessagesAsRead (mutation)"
      ],
      "missingOperations": [
        "CREATE",
        "READ",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "UserPresence",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "thinkpages.markMessagesAsRead (mutation)",
        "thinkpages.updatePresence (mutation)",
        "thinkpages.getPresenceForUsers (query)"
      ],
      "missingOperations": [
        "CREATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "ArchetypeCategory",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "archetypes.getCategories (query)",
        "archetypes.recalculateArchetypeMatches (mutation)",
        "archetypes.createArchetype (mutation)",
        "archetypes.updateArchetype (mutation)",
        "archetypes.initializeArchetypeSystem (mutation)"
      ],
      "missingOperations": [
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "Archetype",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": true,
      "endpoints": [
        "wikiImporter.previewImport (query)",
        "wikiImporter.importCountry (mutation)",
        "users.getProfile (query)",
        "users.getProfileById (query)",
        "users.linkCountry (mutation)",
        "users.unlinkCountry (mutation)",
        "users.getLinkedCountry (query)",
        "users.getSocialData (query)",
        "users.getActiveUsers (query)",
        "users.getCurrentUserWithRole (query)",
        "users.createUserRecord (mutation)",
        "users.removeAdminFavorite (mutation)",
        "users.reorderAdminFavorites (mutation)",
        "users.getUserWithRole (query)",
        "users.getMembershipStatus (query)",
        "users.updateMembershipTier (mutation)",
        "thinkpages.searchWikiCommonsImages (query)",
        "thinkpages.searchWiki (mutation)",
        "thinkpages.calculateTrendingTopics (mutation)",
        "thinkpages.searchUsers (query)",
        "thinkpages.checkUsernameAvailability (query)",
        "thinkpages.generateProfilePicture (mutation)",
        "thinkpages.createAccount (mutation)",
        "thinkpages.getAccountsByCountry (query)",
        "thinkpages.getAccountCountsByType (query)",
        "thinkpages.createPost (mutation)",
        "thinkpages.getFeed (query)",
        "thinkpages.getTrendingTopics (query)",
        "thinkpages.getAccount (query)",
        "thinkpages.getThinkpagesAccountByUserId (query)",
        "thinkpages.getPost (query)",
        "thinkpages.triggerCitizenReaction (mutation)",
        "thinkpages.calculateCountryMoodMetrics (mutation)",
        "thinkpages.getThinktanks (query)",
        "thinkpages.joinThinktank (mutation)",
        "thinkpages.addReactionToMessage (mutation)",
        "thinkpages.removeReactionFromMessage (mutation)",
        "thinkpages.editMessage (mutation)",
        "thinkpages.deleteMessage (mutation)",
        "thinkpages.createConversation (mutation)",
        "thinkpages.getConversationMessages (query)",
        "thinkpages.pinPost (mutation)",
        "thinkpages.bookmarkPost (mutation)",
        "thinkpages.flagPost (mutation)",
        "thinkpages.createConversationByCountries (mutation)",
        "sdi.getActiveCrises (query)",
        "sdi.getCrisisEvents (query)",
        "sdi.getResponseTeams (query)",
        "sdi.getEconomicIndicators (query)",
        "sdi.deleteTreaty (mutation)",
        "sdi.searchSDI (query)",
        "sdi.getNotifications (query)",
        "sdi.getUnreadNotifications (query)",
        "scheduledChanges.getPendingChanges (query)",
        "scheduledChanges.cancelScheduledChange (mutation)",
        "scheduledChanges.getChangesReadyToApply (query)",
        "scheduledChanges.applyScheduledChange (mutation)",
        "scheduledChanges.getChangeHistory (query)",
        "scheduledChanges.applyDueChanges (mutation)",
        "roles.deleteRole (mutation)",
        "roles.assignUserRole (mutation)",
        "roles.removeUserRole (mutation)",
        "roles.getUsersWithRoles (query)",
        "policies.getPolicies (query)",
        "policies.getPolicy (query)",
        "policies.deletePolicy (mutation)",
        "policies.activatePolicy (mutation)",
        "notifications.getUserNotifications (query)",
        "notifications.markAsRead (mutation)",
        "notifications.markAllAsRead (mutation)",
        "economics.getEconomicProfile (query)",
        "economics.getLaborMarket (query)",
        "economics.getFiscalSystem (query)",
        "economics.getIncomeDistribution (query)",
        "economics.getGovernmentBudget (query)",
        "economics.updateGovernmentBudget (mutation)",
        "economics.getDemographics (query)",
        "eci.createCabinetMeeting (mutation)",
        "eci.getCabinetMeetings (query)",
        "eci.getEconomicPolicies (query)",
        "eci.getSecurityThreats (query)",
        "eci.getSecurityDashboard (query)",
        "eci.getStrategicPlans (query)",
        "eci.getAdvancedAnalytics (query)",
        "eci.getAIRecommendations (query)",
        "eci.getPredictiveModels (query)",
        "eci.getRealTimeMetrics (query)",
        "eci.getQuickActions (query)",
        "eci.getPolicyEffectiveness (query)",
        "diplomatic.allocateBudget (mutation)",
        "diplomatic.getInfluenceBreakdown (query)",
        "diplomatic.updateRelationshipStrength (mutation)",
        "diplomatic.getInfluenceLeaderboard (query)",
        "archetypes.getCategories (query)",
        "archetypes.getSelectableArchetypes (query)",
        "archetypes.getArchetypesByCategory (query)",
        "archetypes.getUserArchetypeSelections (query)",
        "archetypes.updateUserArchetypeSelections (mutation)",
        "archetypes.getCountriesByArchetypes (query)",
        "archetypes.recalculateArchetypeMatches (mutation)",
        "archetypes.createArchetype (mutation)",
        "archetypes.updateArchetype (mutation)",
        "archetypes.initializeArchetypeSystem (mutation)",
        "admin.getCalculationFormulas (query)",
        "admin.getGlobalStats (query)",
        "admin.getSystemStatus (query)",
        "admin.setCustomTime (mutation)",
        "admin.syncBot (mutation)",
        "admin.pauseBot (mutation)",
        "admin.resumeBot (mutation)",
        "admin.clearBotOverrides (mutation)",
        "admin.getCalculationLogs (query)",
        "admin.analyzeImport (mutation)",
        "admin.importRosterData (mutation)",
        "admin.syncEpochWithData (mutation)",
        "admin.forceRecalculation (mutation)",
        "admin.getSystemHealth (query)",
        "admin.getUserCountry (query)",
        "admin.setUserCountry (mutation)",
        "admin.createUserIfNotExists (mutation)",
        "admin.syncWithBot (mutation)",
        "admin.listUsersWithCountries (query)",
        "admin.listCountriesWithUsers (query)",
        "admin.assignUserToCountry (mutation)",
        "admin.unassignUserFromCountry (query)",
        "activities.testMutation (mutation)",
        "activities.getGlobalFeed (query)",
        "activities.createActivity (mutation)",
        "activities.engageWithActivity (mutation)",
        "achievements.getRecentByCountry (query)",
        "achievements.getAllByCountry (query)",
        "achievements.getLeaderboard (query)"
      ],
      "missingOperations": []
    },
    {
      "model": "UserArchetypeSelection",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "archetypes.getCategories (query)",
        "archetypes.getSelectableArchetypes (query)",
        "archetypes.getArchetypesByCategory (query)",
        "archetypes.getUserArchetypeSelections (query)",
        "archetypes.updateUserArchetypeSelections (mutation)"
      ],
      "missingOperations": [
        "CREATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "CountryArchetypeMatch",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "archetypes.getCategories (query)",
        "archetypes.getSelectableArchetypes (query)",
        "archetypes.getArchetypesByCategory (query)",
        "archetypes.getUserArchetypeSelections (query)",
        "archetypes.updateUserArchetypeSelections (mutation)",
        "archetypes.getCountriesByArchetypes (query)",
        "archetypes.recalculateArchetypeMatches (mutation)"
      ],
      "missingOperations": [
        "CREATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "NationalIdentity",
      "hasCreate": false,
      "hasRead": false,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "wikiImporter.previewImport (query)",
        "wikiImporter.importCountry (mutation)"
      ],
      "missingOperations": [
        "CREATE",
        "READ",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "PostBookmark",
      "hasCreate": false,
      "hasRead": false,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "thinkpages.updatePost (mutation)",
        "thinkpages.deletePost (mutation)",
        "thinkpages.pinPost (mutation)",
        "thinkpages.bookmarkPost (mutation)"
      ],
      "missingOperations": [
        "CREATE",
        "READ",
        "LIST"
      ]
    },
    {
      "model": "PostFlag",
      "hasCreate": false,
      "hasRead": false,
      "hasUpdate": false,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "thinkpages.deletePost (mutation)",
        "thinkpages.pinPost (mutation)",
        "thinkpages.bookmarkPost (mutation)",
        "thinkpages.flagPost (mutation)"
      ],
      "missingOperations": [
        "CREATE",
        "READ",
        "UPDATE",
        "LIST"
      ]
    },
    {
      "model": "ActivityFeed",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": true,
      "endpoints": [
        "activities.testMutation (mutation)",
        "activities.getGlobalFeed (query)",
        "activities.getUserFeed (query)",
        "activities.createActivity (mutation)",
        "activities.engageWithActivity (mutation)",
        "activities.addComment (mutation)",
        "activities.getComments (query)",
        "activities.getUserEngagement (query)",
        "activities.getTrendingTopics (query)",
        "activities.getActivityStats (query)"
      ],
      "missingOperations": [
        "UPDATE",
        "DELETE"
      ]
    },
    {
      "model": "ActivityLike",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": true,
      "endpoints": [
        "activities.getUserFeed (query)",
        "activities.createActivity (mutation)",
        "activities.engageWithActivity (mutation)",
        "activities.addComment (mutation)",
        "activities.getComments (query)",
        "activities.getUserEngagement (query)"
      ],
      "missingOperations": [
        "UPDATE",
        "DELETE"
      ]
    },
    {
      "model": "ActivityComment",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "activities.addComment (mutation)",
        "activities.getComments (query)"
      ],
      "missingOperations": [
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "ActivityShare",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "activities.createActivity (mutation)",
        "activities.engageWithActivity (mutation)",
        "activities.addComment (mutation)",
        "activities.getComments (query)",
        "activities.getUserEngagement (query)"
      ],
      "missingOperations": [
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "DiplomaticEvent",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "diplomatic.getAvailableMissions (query)",
        "diplomatic.startMission (mutation)",
        "diplomatic.completeMission (mutation)",
        "diplomatic.payMaintenance (mutation)",
        "diplomatic.allocateBudget (mutation)",
        "diplomatic.getInfluenceBreakdown (query)",
        "diplomatic.updateRelationshipStrength (mutation)"
      ],
      "missingOperations": [
        "CREATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "UserConnection",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": true,
      "endpoints": [
        "activities.testMutation (mutation)",
        "activities.getGlobalFeed (query)",
        "activities.getUserFeed (query)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "DELETE"
      ]
    },
    {
      "model": "UserAchievement",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": true,
      "endpoints": [
        "achievements.getRecentByCountry (query)",
        "achievements.getAllByCountry (query)",
        "achievements.getLeaderboard (query)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "DELETE"
      ]
    },
    {
      "model": "CountryActivity",
      "hasCreate": false,
      "hasRead": false,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [],
      "missingOperations": [
        "CREATE",
        "READ",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "DiplomaticAction",
      "hasCreate": false,
      "hasRead": false,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [],
      "missingOperations": [
        "CREATE",
        "READ",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "Embassy",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "diplomatic.getRelationships (query)",
        "diplomatic.getRecentChanges (query)",
        "diplomatic.updateRelationship (mutation)",
        "diplomatic.getEmbassies (query)",
        "diplomatic.establishEmbassy (mutation)",
        "diplomatic.getCulturalExchanges (query)",
        "diplomatic.joinCulturalExchange (mutation)",
        "diplomatic.getEmbassyDetails (query)",
        "diplomatic.calculateEstablishmentCost (query)",
        "diplomatic.upgradeEmbassy (mutation)",
        "diplomatic.getAvailableUpgrades (query)",
        "diplomatic.getAvailableMissions (query)",
        "diplomatic.startMission (mutation)",
        "diplomatic.completeMission (mutation)",
        "diplomatic.payMaintenance (mutation)",
        "diplomatic.allocateBudget (mutation)",
        "diplomatic.getInfluenceBreakdown (query)"
      ],
      "missingOperations": [
        "CREATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "DiplomaticChannel",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "diplomatic.getRecentChanges (query)",
        "diplomatic.updateRelationship (mutation)",
        "diplomatic.getEmbassies (query)",
        "diplomatic.establishEmbassy (mutation)",
        "diplomatic.getChannels (query)",
        "diplomatic.getChannelMessages (query)"
      ],
      "missingOperations": [
        "CREATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "DiplomaticChannelParticipant",
      "hasCreate": false,
      "hasRead": false,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [],
      "missingOperations": [
        "CREATE",
        "READ",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "DiplomaticMessage",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "diplomatic.getEmbassies (query)",
        "diplomatic.establishEmbassy (mutation)",
        "diplomatic.getChannels (query)",
        "diplomatic.getChannelMessages (query)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "CulturalExchange",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "diplomatic.getChannelMessages (query)",
        "diplomatic.getCulturalExchanges (query)",
        "diplomatic.joinCulturalExchange (mutation)"
      ],
      "missingOperations": [
        "CREATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "CulturalExchangeParticipant",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "diplomatic.getCulturalExchanges (query)",
        "diplomatic.joinCulturalExchange (mutation)"
      ],
      "missingOperations": [
        "CREATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "CulturalArtifact",
      "hasCreate": false,
      "hasRead": false,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [],
      "missingOperations": [
        "CREATE",
        "READ",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "EmbassyMission",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "diplomatic.getAvailableUpgrades (query)",
        "diplomatic.getAvailableMissions (query)",
        "diplomatic.startMission (mutation)",
        "diplomatic.completeMission (mutation)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "EmbassyUpgrade",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "diplomatic.getEmbassyDetails (query)",
        "diplomatic.calculateEstablishmentCost (query)",
        "diplomatic.upgradeEmbassy (mutation)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "EmbassyRequirement",
      "hasCreate": false,
      "hasRead": false,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [],
      "missingOperations": [
        "CREATE",
        "READ",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "Role",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": true,
      "endpoints": [
        "users.getProfile (query)",
        "users.getProfileById (query)",
        "users.linkCountry (mutation)",
        "users.unlinkCountry (mutation)",
        "users.getLinkedCountry (query)",
        "users.getSocialData (query)",
        "users.getActiveUsers (query)",
        "users.getCurrentUserWithRole (query)",
        "users.createUserRecord (mutation)",
        "users.setupDatabase (mutation)",
        "users.removeAdminFavorite (mutation)",
        "users.reorderAdminFavorites (mutation)",
        "users.getUserWithRole (query)",
        "users.getMembershipStatus (query)",
        "users.updateMembershipTier (mutation)",
        "thinkpages.searchWikiCommonsImages (query)",
        "thinkpages.searchWiki (mutation)",
        "thinkpages.calculateTrendingTopics (mutation)",
        "thinkpages.searchUsers (query)",
        "thinkpages.checkUsernameAvailability (query)",
        "thinkpages.generateProfilePicture (mutation)",
        "thinkpages.createAccount (mutation)",
        "thinkpages.getAccountsByCountry (query)",
        "thinkpages.getAccountCountsByType (query)",
        "thinkpages.createPost (mutation)",
        "thinkpages.getFeed (query)",
        "thinkpages.getTrendingTopics (query)",
        "thinkpages.getAccount (query)",
        "thinkpages.getThinkpagesAccountByUserId (query)",
        "thinkpages.getPost (query)",
        "thinkpages.triggerCitizenReaction (mutation)",
        "thinkpages.calculateCountryMoodMetrics (mutation)",
        "thinkpages.getThinktanks (query)",
        "thinkpages.joinThinktank (mutation)",
        "thinkpages.addReactionToMessage (mutation)",
        "thinkpages.removeReactionFromMessage (mutation)",
        "thinkpages.editMessage (mutation)",
        "thinkpages.deleteMessage (mutation)",
        "thinkpages.createConversation (mutation)",
        "thinkpages.getConversationMessages (query)",
        "thinkpages.pinPost (mutation)",
        "thinkpages.bookmarkPost (mutation)",
        "thinkpages.flagPost (mutation)",
        "thinkpages.createConversationByCountries (mutation)",
        "sdi.deleteTreaty (mutation)",
        "sdi.searchSDI (query)",
        "sdi.getNotifications (query)",
        "sdi.getUnreadNotifications (query)",
        "scheduledChanges.getPendingChanges (query)",
        "scheduledChanges.cancelScheduledChange (mutation)",
        "scheduledChanges.getChangesReadyToApply (query)",
        "scheduledChanges.applyScheduledChange (mutation)",
        "scheduledChanges.getChangeHistory (query)",
        "scheduledChanges.applyDueChanges (mutation)",
        "roles.getRoles (query)",
        "roles.getPermissions (query)",
        "roles.createRole (mutation)",
        "roles.updateRole (mutation)",
        "roles.deleteRole (mutation)",
        "roles.assignUserRole (mutation)",
        "roles.removeUserRole (mutation)",
        "roles.getUsersWithRoles (query)",
        "roles.getAuditLogs (query)",
        "roles.initializeRoleSystem (mutation)",
        "policies.getPolicies (query)",
        "policies.getPolicy (query)",
        "policies.deletePolicy (mutation)",
        "policies.activatePolicy (mutation)",
        "notifications.getUserNotifications (query)",
        "notifications.markAsRead (mutation)",
        "notifications.markAllAsRead (mutation)",
        "economics.getEconomicProfile (query)",
        "economics.getLaborMarket (query)",
        "economics.getFiscalSystem (query)",
        "economics.getIncomeDistribution (query)",
        "economics.getGovernmentBudget (query)",
        "economics.updateGovernmentBudget (mutation)",
        "economics.getDemographics (query)",
        "eci.createCabinetMeeting (mutation)",
        "eci.getCabinetMeetings (query)",
        "eci.getEconomicPolicies (query)",
        "eci.getSecurityThreats (query)",
        "eci.getSecurityDashboard (query)",
        "eci.getStrategicPlans (query)",
        "eci.getAdvancedAnalytics (query)",
        "eci.getAIRecommendations (query)",
        "eci.getPredictiveModels (query)",
        "eci.getRealTimeMetrics (query)",
        "eci.getQuickActions (query)",
        "eci.getPolicyEffectiveness (query)",
        "admin.getCalculationFormulas (query)",
        "admin.getGlobalStats (query)",
        "admin.forceRecalculation (mutation)",
        "admin.getSystemHealth (query)",
        "admin.getUserCountry (query)",
        "admin.setUserCountry (mutation)",
        "admin.createUserIfNotExists (mutation)",
        "admin.syncWithBot (mutation)",
        "admin.listUsersWithCountries (query)",
        "admin.listCountriesWithUsers (query)",
        "admin.assignUserToCountry (mutation)",
        "admin.unassignUserFromCountry (query)",
        "activities.testMutation (mutation)",
        "activities.getGlobalFeed (query)",
        "activities.createActivity (mutation)",
        "activities.engageWithActivity (mutation)",
        "achievements.getRecentByCountry (query)",
        "achievements.getAllByCountry (query)",
        "achievements.getLeaderboard (query)"
      ],
      "missingOperations": []
    },
    {
      "model": "Permission",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "users.getSocialData (query)",
        "users.getActiveUsers (query)",
        "users.getCurrentUserWithRole (query)",
        "users.createUserRecord (mutation)",
        "users.setupDatabase (mutation)",
        "users.removeAdminFavorite (mutation)",
        "users.reorderAdminFavorites (mutation)",
        "users.getUserWithRole (query)",
        "roles.getRoles (query)",
        "roles.getPermissions (query)",
        "roles.createRole (mutation)",
        "roles.updateRole (mutation)",
        "roles.getUsersWithRoles (query)",
        "roles.getAuditLogs (query)",
        "roles.initializeRoleSystem (mutation)"
      ],
      "missingOperations": [
        "LIST"
      ]
    },
    {
      "model": "RolePermission",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "users.setupDatabase (mutation)",
        "roles.getRoles (query)",
        "roles.getPermissions (query)",
        "roles.createRole (mutation)",
        "roles.updateRole (mutation)",
        "roles.initializeRoleSystem (mutation)"
      ],
      "missingOperations": [
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "UserSession",
      "hasCreate": false,
      "hasRead": false,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [],
      "missingOperations": [
        "CREATE",
        "READ",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "AuditLog",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "roles.removeUserRole (mutation)",
        "roles.getUsersWithRoles (query)",
        "roles.getAuditLogs (query)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "LIST"
      ]
    },
    {
      "model": "GovernmentStructure",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "meetings.deleteAgendaItem (mutation)",
        "meetings.getDecisions (query)",
        "meetings.updateDecision (mutation)",
        "meetings.getActionItems (query)",
        "meetings.deleteActionItem (mutation)",
        "meetings.getOfficials (query)",
        "meetings.getOfficial (query)",
        "meetings.removeOfficial (mutation)",
        "meetings.getDepartments (query)",
        "meetings.updateDepartment (mutation)",
        "meetings.deleteDepartment (mutation)",
        "government.getByCountryId (query)",
        "government.create (mutation)",
        "government.update (mutation)",
        "government.delete (mutation)",
        "government.getBudgetSummary (query)",
        "government.getRevenueSummary (query)",
        "government.addSubBudget (mutation)",
        "government.getDepartmentHierarchy (query)"
      ],
      "missingOperations": [
        "LIST"
      ]
    },
    {
      "model": "GovernmentDepartment",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "meetings.deleteActionItem (mutation)",
        "meetings.getOfficials (query)",
        "meetings.getOfficial (query)",
        "meetings.removeOfficial (mutation)",
        "meetings.getDepartments (query)",
        "meetings.updateDepartment (mutation)",
        "meetings.deleteDepartment (mutation)"
      ],
      "missingOperations": [
        "CREATE",
        "LIST"
      ]
    },
    {
      "model": "BudgetAllocation",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "government.delete (mutation)",
        "government.getBudgetSummary (query)",
        "government.getRevenueSummary (query)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "LIST"
      ]
    },
    {
      "model": "SubBudgetCategory",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "government.delete (mutation)",
        "government.getBudgetSummary (query)",
        "government.getRevenueSummary (query)",
        "government.addSubBudget (mutation)"
      ],
      "missingOperations": [
        "UPDATE",
        "LIST"
      ]
    },
    {
      "model": "RevenueSource",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "government.delete (mutation)",
        "government.getBudgetSummary (query)",
        "government.getRevenueSummary (query)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "LIST"
      ]
    },
    {
      "model": "AdminFavorite",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "users.setupDatabase (mutation)",
        "users.getAdminFavorites (query)",
        "users.removeAdminFavorite (mutation)",
        "users.reorderAdminFavorites (mutation)"
      ],
      "missingOperations": [
        "CREATE",
        "LIST"
      ]
    },
    {
      "model": "GovernmentOfficial",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "meetings.deleteAgendaItem (mutation)",
        "meetings.getDecisions (query)",
        "meetings.updateDecision (mutation)",
        "meetings.getActionItems (query)",
        "meetings.deleteActionItem (mutation)",
        "meetings.getOfficials (query)",
        "meetings.getOfficial (query)",
        "meetings.removeOfficial (mutation)",
        "meetings.getDepartments (query)",
        "meetings.updateDepartment (mutation)",
        "meetings.deleteDepartment (mutation)"
      ],
      "missingOperations": [
        "CREATE",
        "LIST"
      ]
    },
    {
      "model": "CabinetMeeting",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "meetings.getMeetings (query)",
        "meetings.getMeeting (query)",
        "meetings.deleteMeeting (mutation)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "LIST"
      ]
    },
    {
      "model": "MeetingAttendance",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "meetings.getMeetings (query)",
        "meetings.getMeeting (query)",
        "meetings.deleteMeeting (mutation)",
        "meetings.recordAttendance (mutation)",
        "meetings.getAttendance (query)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "LIST"
      ]
    },
    {
      "model": "MeetingAgendaItem",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "meetings.getMeetings (query)",
        "meetings.getMeeting (query)",
        "meetings.deleteMeeting (mutation)",
        "meetings.recordAttendance (mutation)",
        "meetings.getAttendance (query)",
        "meetings.addAgendaItem (mutation)",
        "meetings.getAgendaItems (query)",
        "meetings.deleteAgendaItem (mutation)"
      ],
      "missingOperations": [
        "UPDATE",
        "LIST"
      ]
    },
    {
      "model": "MeetingDecision",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "meetings.deleteMeeting (mutation)",
        "meetings.recordAttendance (mutation)",
        "meetings.getAttendance (query)",
        "meetings.addAgendaItem (mutation)",
        "meetings.getAgendaItems (query)",
        "meetings.deleteAgendaItem (mutation)",
        "meetings.getDecisions (query)",
        "meetings.updateDecision (mutation)"
      ],
      "missingOperations": [
        "LIST"
      ]
    },
    {
      "model": "MeetingActionItem",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "meetings.getAttendance (query)",
        "meetings.addAgendaItem (mutation)",
        "meetings.getAgendaItems (query)",
        "meetings.deleteAgendaItem (mutation)",
        "meetings.getDecisions (query)",
        "meetings.updateDecision (mutation)",
        "meetings.getActionItems (query)",
        "meetings.deleteActionItem (mutation)"
      ],
      "missingOperations": [
        "LIST"
      ]
    },
    {
      "model": "Policy",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "policies.getPolicies (query)",
        "policies.getPolicy (query)",
        "policies.deletePolicy (mutation)",
        "policies.activatePolicy (mutation)",
        "policies.suspendPolicy (mutation)",
        "policies.repealPolicy (mutation)",
        "policies.logPolicyEffect (mutation)",
        "policies.getPolicyEffects (query)",
        "policies.getPolicyEffectiveness (query)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "LIST"
      ]
    },
    {
      "model": "PolicyEffectLog",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "policies.getPolicies (query)",
        "policies.getPolicy (query)",
        "policies.deletePolicy (mutation)",
        "policies.activatePolicy (mutation)",
        "policies.suspendPolicy (mutation)",
        "policies.repealPolicy (mutation)",
        "policies.logPolicyEffect (mutation)",
        "policies.getPolicyEffects (query)",
        "policies.getPolicyEffectiveness (query)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "LIST"
      ]
    },
    {
      "model": "ActivitySchedule",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "policies.repealPolicy (mutation)",
        "policies.logPolicyEffect (mutation)",
        "policies.getPolicyEffects (query)",
        "policies.getPolicyEffectiveness (query)",
        "policies.getScheduledActivities (query)",
        "policies.deleteActivity (mutation)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "LIST"
      ]
    },
    {
      "model": "QuickActionTemplate",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": true,
      "hasList": false,
      "endpoints": [
        "policies.getScheduledActivities (query)",
        "policies.deleteActivity (mutation)",
        "policies.getTemplates (query)",
        "policies.deleteTemplate (mutation)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "LIST"
      ]
    },
    {
      "model": "IntelligenceBriefing",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "intelligence.initializeSampleData (mutation)",
        "intelligence.getForCountry (query)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "IntelligenceRecommendation",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "intelligence.initializeSampleData (mutation)",
        "intelligence.getForCountry (query)",
        "intelligence.getVitalitySnapshots (query)",
        "intelligence.getRecommendations (query)",
        "intelligence.implementRecommendation (mutation)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "IntelligenceAlert",
      "hasCreate": false,
      "hasRead": false,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [],
      "missingOperations": [
        "CREATE",
        "READ",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "VitalitySnapshot",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "intelligence.initializeSampleData (mutation)",
        "intelligence.getForCountry (query)",
        "intelligence.getVitalitySnapshots (query)"
      ],
      "missingOperations": [
        "CREATE",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "MilitaryBranch",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": true,
      "endpoints": [
        "wikiImporter.previewImport (query)",
        "wikiImporter.importCountry (mutation)",
        "users.getProfile (query)",
        "users.getProfileById (query)",
        "users.linkCountry (mutation)",
        "users.unlinkCountry (mutation)",
        "users.getLinkedCountry (query)",
        "users.getSocialData (query)",
        "users.getActiveUsers (query)",
        "thinkpages.searchWiki (mutation)",
        "thinkpages.calculateTrendingTopics (mutation)",
        "thinkpages.searchUsers (query)",
        "thinkpages.checkUsernameAvailability (query)",
        "thinkpages.generateProfilePicture (mutation)",
        "thinkpages.createAccount (mutation)",
        "thinkpages.getFeed (query)",
        "thinkpages.getTrendingTopics (query)",
        "thinkpages.getAccount (query)",
        "thinkpages.getThinkpagesAccountByUserId (query)",
        "thinkpages.getPost (query)",
        "thinkpages.triggerCitizenReaction (mutation)",
        "thinkpages.calculateCountryMoodMetrics (mutation)",
        "thinkpages.addReactionToMessage (mutation)",
        "thinkpages.removeReactionFromMessage (mutation)",
        "thinkpages.editMessage (mutation)",
        "thinkpages.deleteMessage (mutation)",
        "thinkpages.createConversation (mutation)",
        "sdi.getActiveCrises (query)",
        "sdi.getCrisisEvents (query)",
        "sdi.getResponseTeams (query)",
        "sdi.getEconomicIndicators (query)",
        "scheduledChanges.getPendingChanges (query)",
        "scheduledChanges.cancelScheduledChange (mutation)",
        "scheduledChanges.getChangesReadyToApply (query)",
        "scheduledChanges.applyScheduledChange (mutation)",
        "scheduledChanges.getChangeHistory (query)",
        "scheduledChanges.applyDueChanges (mutation)",
        "notifications.getUserNotifications (query)",
        "notifications.markAsRead (mutation)",
        "notifications.markAllAsRead (mutation)",
        "eci.createCabinetMeeting (mutation)",
        "eci.getCabinetMeetings (query)",
        "eci.getEconomicPolicies (query)",
        "eci.getSecurityThreats (query)",
        "eci.getSecurityDashboard (query)",
        "eci.getStrategicPlans (query)",
        "eci.getAdvancedAnalytics (query)",
        "eci.getAIRecommendations (query)",
        "eci.getPredictiveModels (query)",
        "eci.getRealTimeMetrics (query)",
        "eci.getQuickActions (query)",
        "eci.getPolicyEffectiveness (query)",
        "diplomatic.allocateBudget (mutation)",
        "diplomatic.getInfluenceBreakdown (query)",
        "diplomatic.updateRelationshipStrength (mutation)",
        "diplomatic.getInfluenceLeaderboard (query)",
        "archetypes.getSelectableArchetypes (query)",
        "archetypes.getArchetypesByCategory (query)",
        "archetypes.getUserArchetypeSelections (query)",
        "archetypes.updateUserArchetypeSelections (mutation)",
        "archetypes.getCountriesByArchetypes (query)",
        "archetypes.recalculateArchetypeMatches (mutation)",
        "admin.getCalculationFormulas (query)",
        "admin.getGlobalStats (query)",
        "admin.getSystemStatus (query)",
        "admin.setCustomTime (mutation)",
        "admin.syncBot (mutation)",
        "admin.pauseBot (mutation)",
        "admin.resumeBot (mutation)",
        "admin.clearBotOverrides (mutation)",
        "admin.getCalculationLogs (query)",
        "admin.analyzeImport (mutation)",
        "admin.importRosterData (mutation)",
        "admin.syncEpochWithData (mutation)",
        "admin.forceRecalculation (mutation)",
        "admin.getSystemHealth (query)",
        "admin.getUserCountry (query)",
        "admin.setUserCountry (mutation)",
        "admin.createUserIfNotExists (mutation)",
        "admin.syncWithBot (mutation)",
        "admin.listUsersWithCountries (query)",
        "admin.listCountriesWithUsers (query)",
        "activities.testMutation (mutation)",
        "activities.getGlobalFeed (query)",
        "activities.createActivity (mutation)",
        "activities.engageWithActivity (mutation)",
        "achievements.getRecentByCountry (query)",
        "achievements.getAllByCountry (query)",
        "achievements.getLeaderboard (query)"
      ],
      "missingOperations": []
    },
    {
      "model": "MilitaryUnit",
      "hasCreate": false,
      "hasRead": false,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [],
      "missingOperations": [
        "CREATE",
        "READ",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "MilitaryAsset",
      "hasCreate": false,
      "hasRead": false,
      "hasUpdate": false,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [],
      "missingOperations": [
        "CREATE",
        "READ",
        "UPDATE",
        "DELETE",
        "LIST"
      ]
    },
    {
      "model": "SecurityThreat",
      "hasCreate": true,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": true,
      "hasList": true,
      "endpoints": [
        "wikiImporter.previewImport (query)",
        "wikiImporter.importCountry (mutation)",
        "users.getProfile (query)",
        "users.getProfileById (query)",
        "users.linkCountry (mutation)",
        "users.unlinkCountry (mutation)",
        "users.getLinkedCountry (query)",
        "users.getSocialData (query)",
        "users.getActiveUsers (query)",
        "thinkpages.searchWiki (mutation)",
        "thinkpages.calculateTrendingTopics (mutation)",
        "thinkpages.searchUsers (query)",
        "thinkpages.checkUsernameAvailability (query)",
        "thinkpages.generateProfilePicture (mutation)",
        "thinkpages.createAccount (mutation)",
        "thinkpages.getFeed (query)",
        "thinkpages.getTrendingTopics (query)",
        "thinkpages.getAccount (query)",
        "thinkpages.getThinkpagesAccountByUserId (query)",
        "thinkpages.getPost (query)",
        "thinkpages.triggerCitizenReaction (mutation)",
        "thinkpages.calculateCountryMoodMetrics (mutation)",
        "thinkpages.addReactionToMessage (mutation)",
        "thinkpages.removeReactionFromMessage (mutation)",
        "thinkpages.editMessage (mutation)",
        "thinkpages.deleteMessage (mutation)",
        "thinkpages.createConversation (mutation)",
        "sdi.getActiveCrises (query)",
        "sdi.getCrisisEvents (query)",
        "sdi.getResponseTeams (query)",
        "sdi.getEconomicIndicators (query)",
        "scheduledChanges.getPendingChanges (query)",
        "scheduledChanges.cancelScheduledChange (mutation)",
        "scheduledChanges.getChangesReadyToApply (query)",
        "scheduledChanges.applyScheduledChange (mutation)",
        "scheduledChanges.getChangeHistory (query)",
        "scheduledChanges.applyDueChanges (mutation)",
        "notifications.getUserNotifications (query)",
        "notifications.markAsRead (mutation)",
        "notifications.markAllAsRead (mutation)",
        "eci.createCabinetMeeting (mutation)",
        "eci.getCabinetMeetings (query)",
        "eci.getEconomicPolicies (query)",
        "eci.getSecurityThreats (query)",
        "eci.getSecurityDashboard (query)",
        "eci.getStrategicPlans (query)",
        "eci.getAdvancedAnalytics (query)",
        "eci.getAIRecommendations (query)",
        "eci.getPredictiveModels (query)",
        "eci.getRealTimeMetrics (query)",
        "eci.getQuickActions (query)",
        "eci.getPolicyEffectiveness (query)",
        "diplomatic.allocateBudget (mutation)",
        "diplomatic.getInfluenceBreakdown (query)",
        "diplomatic.updateRelationshipStrength (mutation)",
        "diplomatic.getInfluenceLeaderboard (query)",
        "archetypes.getSelectableArchetypes (query)",
        "archetypes.getArchetypesByCategory (query)",
        "archetypes.getUserArchetypeSelections (query)",
        "archetypes.updateUserArchetypeSelections (mutation)",
        "archetypes.getCountriesByArchetypes (query)",
        "archetypes.recalculateArchetypeMatches (mutation)",
        "admin.getCalculationFormulas (query)",
        "admin.getGlobalStats (query)",
        "admin.getSystemStatus (query)",
        "admin.setCustomTime (mutation)",
        "admin.syncBot (mutation)",
        "admin.pauseBot (mutation)",
        "admin.resumeBot (mutation)",
        "admin.clearBotOverrides (mutation)",
        "admin.getCalculationLogs (query)",
        "admin.analyzeImport (mutation)",
        "admin.importRosterData (mutation)",
        "admin.syncEpochWithData (mutation)",
        "admin.forceRecalculation (mutation)",
        "admin.getSystemHealth (query)",
        "admin.getUserCountry (query)",
        "admin.setUserCountry (mutation)",
        "admin.createUserIfNotExists (mutation)",
        "admin.syncWithBot (mutation)",
        "admin.listUsersWithCountries (query)",
        "admin.listCountriesWithUsers (query)",
        "activities.testMutation (mutation)",
        "activities.getGlobalFeed (query)",
        "activities.createActivity (mutation)",
        "activities.engageWithActivity (mutation)",
        "achievements.getRecentByCountry (query)",
        "achievements.getAllByCountry (query)",
        "achievements.getLeaderboard (query)"
      ],
      "missingOperations": []
    },
    {
      "model": "CountryFollow",
      "hasCreate": false,
      "hasRead": true,
      "hasUpdate": true,
      "hasDelete": false,
      "hasList": false,
      "endpoints": [
        "diplomatic.updateRelationshipStrength (mutation)",
        "diplomatic.getInfluenceLeaderboard (query)",
        "diplomatic.getFollowStatus (query)",
        "diplomatic.followCountry (mutation)",
        "diplomatic.unfollowCountry (mutation)"
      ],
      "missingOperations": [
        "CREATE",
        "DELETE",
        "LIST"
      ]
    }
  ],
  "unusedModels": [
    "SectoralOutput",
    "TaxBracket",
    "TaxExemption",
    "TaxDeduction",
    "TaxPolicy",
    "TaxCalculation",
    "AtomicEffectiveness",
    "MediaAttachment",
    "CountryActivity",
    "DiplomaticAction",
    "DiplomaticChannelParticipant",
    "CulturalArtifact",
    "EmbassyRequirement",
    "UserSession",
    "IntelligenceAlert",
    "MilitaryUnit",
    "MilitaryAsset"
  ],
  "recommendations": [
    "⚠️  MEDIUM: Model \"EconomicProfile\" has minimal coverage (missing: CREATE, UPDATE, DELETE, LIST)",
    "⚠️  MEDIUM: Model \"LaborMarket\" has minimal coverage (missing: CREATE, UPDATE, DELETE, LIST)",
    "⚠️  MEDIUM: Model \"FiscalSystem\" has minimal coverage (missing: CREATE, UPDATE, DELETE, LIST)",
    "⚠️  MEDIUM: Model \"IncomeDistribution\" has minimal coverage (missing: CREATE, UPDATE, DELETE, LIST)",
    "⚠️  MEDIUM: Model \"HistoricalDataPoint\" has minimal coverage (missing: CREATE, UPDATE, DELETE, LIST)",
    "⚠️  MEDIUM: Model \"DmInputs\" has minimal coverage (missing: CREATE, UPDATE, DELETE, LIST)",
    "⚠️  CRITICAL: Model \"SectoralOutput\" has NO endpoints - completely unwired!",
    "⚠️  HIGH: Model \"DiplomaticRelation\" is high-priority but missing: LIST",
    "⚠️  MEDIUM: Model \"UserPreferences\" has minimal coverage (missing: CREATE, UPDATE, DELETE, LIST)",
    "⚠️  CRITICAL: Model \"TaxBracket\" has NO endpoints - completely unwired!",
    "⚠️  CRITICAL: Model \"TaxExemption\" has NO endpoints - completely unwired!",
    "⚠️  CRITICAL: Model \"TaxDeduction\" has NO endpoints - completely unwired!",
    "⚠️  CRITICAL: Model \"TaxPolicy\" has NO endpoints - completely unwired!",
    "⚠️  CRITICAL: Model \"TaxCalculation\" has NO endpoints - completely unwired!",
    "⚠️  MEDIUM: Model \"BudgetScenarioCategory\" has minimal coverage (missing: CREATE, UPDATE, DELETE, LIST)",
    "⚠️  MEDIUM: Model \"FiscalPolicy\" has minimal coverage (missing: CREATE, UPDATE, DELETE, LIST)",
    "⚠️  CRITICAL: Model \"AtomicEffectiveness\" has NO endpoints - completely unwired!",
    "⚠️  CRITICAL: Model \"MediaAttachment\" has NO endpoints - completely unwired!",
    "⚠️  MEDIUM: Model \"CountryMoodMetric\" has minimal coverage (missing: CREATE, UPDATE, DELETE, LIST)",
    "⚠️  MEDIUM: Model \"ThinktankMessage\" has minimal coverage (missing: CREATE, UPDATE, DELETE, LIST)",
    "⚠️  MEDIUM: Model \"MessageReadReceipt\" has minimal coverage (missing: CREATE, READ, UPDATE, DELETE, LIST)",
    "⚠️  MEDIUM: Model \"NationalIdentity\" has minimal coverage (missing: CREATE, READ, UPDATE, DELETE, LIST)",
    "⚠️  MEDIUM: Model \"PostFlag\" has minimal coverage (missing: CREATE, READ, UPDATE, LIST)",
    "⚠️  CRITICAL: Model \"CountryActivity\" has NO endpoints - completely unwired!",
    "⚠️  CRITICAL: Model \"DiplomaticAction\" has NO endpoints - completely unwired!",
    "⚠️  CRITICAL: Model \"DiplomaticChannelParticipant\" has NO endpoints - completely unwired!",
    "⚠️  MEDIUM: Model \"DiplomaticMessage\" has minimal coverage (missing: CREATE, UPDATE, DELETE, LIST)",
    "⚠️  CRITICAL: Model \"CulturalArtifact\" has NO endpoints - completely unwired!",
    "⚠️  MEDIUM: Model \"EmbassyMission\" has minimal coverage (missing: CREATE, UPDATE, DELETE, LIST)",
    "⚠️  MEDIUM: Model \"EmbassyUpgrade\" has minimal coverage (missing: CREATE, UPDATE, DELETE, LIST)",
    "⚠️  CRITICAL: Model \"EmbassyRequirement\" has NO endpoints - completely unwired!",
    "⚠️  CRITICAL: Model \"UserSession\" has NO endpoints - completely unwired!",
    "⚠️  HIGH: Model \"GovernmentStructure\" is high-priority but missing: LIST",
    "⚠️  MEDIUM: Model \"IntelligenceBriefing\" has minimal coverage (missing: CREATE, UPDATE, DELETE, LIST)",
    "⚠️  MEDIUM: Model \"IntelligenceRecommendation\" has minimal coverage (missing: CREATE, UPDATE, DELETE, LIST)",
    "⚠️  CRITICAL: Model \"IntelligenceAlert\" has NO endpoints - completely unwired!",
    "⚠️  MEDIUM: Model \"VitalitySnapshot\" has minimal coverage (missing: CREATE, UPDATE, DELETE, LIST)",
    "⚠️  CRITICAL: Model \"MilitaryUnit\" has NO endpoints - completely unwired!",
    "⚠️  CRITICAL: Model \"MilitaryAsset\" has NO endpoints - completely unwired!"
  ],
  "stats": {
    "totalModels": 110,
    "totalRouters": 22,
    "totalEndpoints": 304,
    "totalQueries": 162,
    "totalMutations": 142,
    "fullyCoveredModels": 12,
    "partiallyCoveredModels": 81,
    "uncoveredModels": 17
  }
}